components:
  schemas:
    Action:
      properties:
        action:
          enum:
          - start_workflow
          - complete_task
          - fail_task
          type: string
        expandInlineJSON:
          type: boolean
      type: object
    Any:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        typeUrl:
          type: string
      type: object
    BulkResponse:
      properties:
        bulkErrorResults:
          additionalProperties:
            type: string
          type: object
        bulkSuccessfulResults:
          items:
            type: string
          type: array
      type: object
    ByteString:
      properties:
        empty:
          type: boolean
        validUtf8:
          type: boolean
      type: object
    Descriptor:
      properties:
        enumTypes:
          type: array
        extendable:
          type: boolean
        extensions:
          type: array
        fields:
          type: array
        fullName:
          type: string
        index:
          format: int32
          type: integer
        name:
          type: string
        nestedTypes:
          type: array
        oneofs:
          type: array
        realOneofs:
          type: array
      type: object
    DescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        enumTypeCount:
          format: int32
          type: integer
        enumTypeList:
          type: array
        enumTypeOrBuilderList:
          type: array
        extensionCount:
          format: int32
          type: integer
        extensionList:
          type: array
        extensionOrBuilderList:
          type: array
        extensionRangeCount:
          format: int32
          type: integer
        extensionRangeList:
          type: array
        extensionRangeOrBuilderList:
          type: array
        fieldCount:
          format: int32
          type: integer
        fieldList:
          type: array
        fieldOrBuilderList:
          type: array
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        name:
          type: string
        nestedTypeCount:
          format: int32
          type: integer
        nestedTypeList:
          type: array
        nestedTypeOrBuilderList:
          type: array
        oneofDeclCount:
          format: int32
          type: integer
        oneofDeclList:
          type: array
        oneofDeclOrBuilderList:
          type: array
        reservedNameCount:
          format: int32
          type: integer
        reservedNameList:
          items:
            type: string
          properties:
            empty:
              type: boolean
          type: array
        reservedRangeCount:
          format: int32
          type: integer
        reservedRangeList:
          type: array
        reservedRangeOrBuilderList:
          type: array
        serializedSize:
          format: int32
          type: integer
      type: object
    DescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        enumTypeCount:
          format: int32
          type: integer
        enumTypeList:
          type: array
        enumTypeOrBuilderList:
          type: array
        extensionCount:
          format: int32
          type: integer
        extensionList:
          type: array
        extensionOrBuilderList:
          type: array
        extensionRangeCount:
          format: int32
          type: integer
        extensionRangeList:
          type: array
        extensionRangeOrBuilderList:
          type: array
        fieldCount:
          format: int32
          type: integer
        fieldList:
          type: array
        fieldOrBuilderList:
          type: array
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        name:
          type: string
        nestedTypeCount:
          format: int32
          type: integer
        oneofDeclCount:
          format: int32
          type: integer
        oneofDeclList:
          type: array
        oneofDeclOrBuilderList:
          type: array
        reservedNameCount:
          format: int32
          type: integer
        reservedNameList:
          items:
            type: string
          type: array
        reservedRangeCount:
          format: int32
          type: integer
        reservedRangeList:
          type: array
        reservedRangeOrBuilderList:
          type: array
      type: object
    EnumDescriptor:
      properties:
        fullName:
          type: string
        index:
          format: int32
          type: integer
        name:
          type: string
        values:
          type: array
      type: object
    EnumDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        name:
          type: string
        reservedNameCount:
          format: int32
          type: integer
        reservedNameList:
          items:
            type: string
          properties:
            empty:
              type: boolean
          type: array
        reservedRangeCount:
          format: int32
          type: integer
        reservedRangeList:
          type: array
        reservedRangeOrBuilderList:
          type: array
        serializedSize:
          format: int32
          type: integer
        valueCount:
          format: int32
          type: integer
        valueList:
          type: array
        valueOrBuilderList:
          type: array
      type: object
    EnumDescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        name:
          type: string
        reservedNameCount:
          format: int32
          type: integer
        reservedNameList:
          items:
            type: string
          type: array
        reservedRangeCount:
          format: int32
          type: integer
        reservedRangeList:
          type: array
        reservedRangeOrBuilderList:
          type: array
        valueCount:
          format: int32
          type: integer
        valueList:
          type: array
        valueOrBuilderList:
          type: array
      type: object
    EnumOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        allowAlias:
          type: boolean
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    EnumOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allowAlias:
          type: boolean
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    EnumReservedRange:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        end:
          format: int32
          type: integer
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        start:
          format: int32
          type: integer
      type: object
    EnumReservedRangeOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        end:
          format: int32
          type: integer
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        start:
          format: int32
          type: integer
      type: object
    EnumValueDescriptor:
      properties:
        fullName:
          type: string
        index:
          format: int32
          type: integer
        name:
          type: string
        number:
          format: int32
          type: integer
      type: object
    EnumValueDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        name:
          type: string
        number:
          format: int32
          type: integer
        serializedSize:
          format: int32
          type: integer
      type: object
    EnumValueDescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        name:
          type: string
        number:
          format: int32
          type: integer
      type: object
    EnumValueOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    EnumValueOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    EventHandler:
      properties:
        actions:
          type: array
        active:
          type: boolean
        condition:
          type: string
        evaluatorType:
          type: string
        event:
          type: string
        name:
          type: string
      required:
      - actions
      - event
      - name
      type: object
    ExtensionRange:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        end:
          format: int32
          type: integer
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        start:
          format: int32
          type: integer
      type: object
    ExtensionRangeOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    ExtensionRangeOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    ExtensionRangeOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        end:
          format: int32
          type: integer
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        start:
          format: int32
          type: integer
      type: object
    ExternalStorageLocation:
      properties:
        path:
          type: string
        uri:
          type: string
      type: object
    FieldDescriptor:
      properties:
        defaultValue:
          type: object
        extension:
          type: boolean
        fullName:
          type: string
        index:
          format: int32
          type: integer
        javaType:
          enum:
          - INT
          - LONG
          - FLOAT
          - DOUBLE
          - BOOLEAN
          - STRING
          - BYTE_STRING
          - ENUM
          - MESSAGE
          type: string
        jsonName:
          type: string
        liteJavaType:
          enum:
          - INT
          - LONG
          - FLOAT
          - DOUBLE
          - BOOLEAN
          - STRING
          - BYTE_STRING
          - ENUM
          - MESSAGE
          type: string
        liteType:
          enum:
          - DOUBLE
          - FLOAT
          - INT64
          - UINT64
          - INT32
          - FIXED64
          - FIXED32
          - BOOL
          - STRING
          - GROUP
          - MESSAGE
          - BYTES
          - UINT32
          - ENUM
          - SFIXED32
          - SFIXED64
          - SINT32
          - SINT64
          type: string
        mapField:
          type: boolean
        name:
          type: string
        number:
          format: int32
          type: integer
        optional:
          type: boolean
        packable:
          type: boolean
        packed:
          type: boolean
        repeated:
          type: boolean
        required:
          type: boolean
        type:
          enum:
          - DOUBLE
          - FLOAT
          - INT64
          - UINT64
          - INT32
          - FIXED64
          - FIXED32
          - BOOL
          - STRING
          - GROUP
          - MESSAGE
          - BYTES
          - UINT32
          - ENUM
          - SFIXED32
          - SFIXED64
          - SINT32
          - SINT64
          type: string
      type: object
    FieldDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        defaultValue:
          type: string
        extendee:
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        jsonName:
          type: string
        label:
          enum:
          - LABEL_OPTIONAL
          - LABEL_REQUIRED
          - LABEL_REPEATED
          type: string
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        name:
          type: string
        number:
          format: int32
          type: integer
        oneofIndex:
          format: int32
          type: integer
        proto3Optional:
          type: boolean
        serializedSize:
          format: int32
          type: integer
        type:
          enum:
          - TYPE_DOUBLE
          - TYPE_FLOAT
          - TYPE_INT64
          - TYPE_UINT64
          - TYPE_INT32
          - TYPE_FIXED64
          - TYPE_FIXED32
          - TYPE_BOOL
          - TYPE_STRING
          - TYPE_GROUP
          - TYPE_MESSAGE
          - TYPE_BYTES
          - TYPE_UINT32
          - TYPE_ENUM
          - TYPE_SFIXED32
          - TYPE_SFIXED64
          - TYPE_SINT32
          - TYPE_SINT64
          type: string
        typeName:
          type: string
      type: object
    FieldDescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        defaultValue:
          type: string
        extendee:
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        jsonName:
          type: string
        label:
          enum:
          - LABEL_OPTIONAL
          - LABEL_REQUIRED
          - LABEL_REPEATED
          type: string
        name:
          type: string
        number:
          format: int32
          type: integer
        oneofIndex:
          format: int32
          type: integer
        proto3Optional:
          type: boolean
        type:
          enum:
          - TYPE_DOUBLE
          - TYPE_FLOAT
          - TYPE_INT64
          - TYPE_UINT64
          - TYPE_INT32
          - TYPE_FIXED64
          - TYPE_FIXED32
          - TYPE_BOOL
          - TYPE_STRING
          - TYPE_GROUP
          - TYPE_MESSAGE
          - TYPE_BYTES
          - TYPE_UINT32
          - TYPE_ENUM
          - TYPE_SFIXED32
          - TYPE_SFIXED64
          - TYPE_SINT32
          - TYPE_SINT64
          type: string
        typeName:
          type: string
      type: object
    FieldOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        ctype:
          enum:
          - STRING
          - CORD
          - STRING_PIECE
          type: string
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        jstype:
          enum:
          - JS_NORMAL
          - JS_STRING
          - JS_NUMBER
          type: string
        lazy:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        packed:
          type: boolean
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
        weak:
          type: boolean
      type: object
    FieldOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        ctype:
          enum:
          - STRING
          - CORD
          - STRING_PIECE
          type: string
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        jstype:
          enum:
          - JS_NORMAL
          - JS_STRING
          - JS_NUMBER
          type: string
        lazy:
          type: boolean
        packed:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
        weak:
          type: boolean
      type: object
    FileDescriptor:
      properties:
        dependencies:
          type: array
        enumTypes:
          type: array
        extensions:
          type: array
        fullName:
          type: string
        messageTypes:
          type: array
        name:
          type: string
        package:
          type: string
        publicDependencies:
          type: array
        services:
          type: array
        syntax:
          enum:
          - UNKNOWN
          - PROTO2
          - PROTO3
          type: string
      type: object
    FileDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        dependencyCount:
          format: int32
          type: integer
        dependencyList:
          items:
            type: string
          properties:
            empty:
              type: boolean
          type: array
        enumTypeCount:
          format: int32
          type: integer
        enumTypeList:
          type: array
        enumTypeOrBuilderList:
          type: array
        extensionCount:
          format: int32
          type: integer
        extensionList:
          type: array
        extensionOrBuilderList:
          type: array
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        messageTypeCount:
          format: int32
          type: integer
        messageTypeList:
          type: array
        messageTypeOrBuilderList:
          type: array
        name:
          type: string
        package:
          type: string
        publicDependencyCount:
          format: int32
          type: integer
        publicDependencyList:
          items:
            format: int32
            type: integer
          type: array
        serializedSize:
          format: int32
          type: integer
        serviceCount:
          format: int32
          type: integer
        serviceList:
          type: array
        serviceOrBuilderList:
          type: array
        syntax:
          type: string
        weakDependencyCount:
          format: int32
          type: integer
        weakDependencyList:
          items:
            format: int32
            type: integer
          type: array
      type: object
    FileOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        ccEnableArenas:
          type: boolean
        ccGenericServices:
          type: boolean
        csharpNamespace:
          type: string
        deprecated:
          type: boolean
        goPackage:
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        javaGenerateEqualsAndHash:
          deprecated: true
          type: boolean
        javaGenericServices:
          type: boolean
        javaMultipleFiles:
          type: boolean
        javaOuterClassname:
          type: string
        javaPackage:
          type: string
        javaStringCheckUtf8:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        objcClassPrefix:
          type: string
        optimizeFor:
          enum:
          - SPEED
          - CODE_SIZE
          - LITE_RUNTIME
          type: string
        phpClassPrefix:
          type: string
        phpGenericServices:
          type: boolean
        phpMetadataNamespace:
          type: string
        phpNamespace:
          type: string
        pyGenericServices:
          type: boolean
        rubyPackage:
          type: string
        serializedSize:
          format: int32
          type: integer
        swiftPrefix:
          type: string
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    FileOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        ccEnableArenas:
          type: boolean
        ccGenericServices:
          type: boolean
        csharpNamespace:
          type: string
        deprecated:
          type: boolean
        goPackage:
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        javaGenerateEqualsAndHash:
          deprecated: true
          type: boolean
        javaGenericServices:
          type: boolean
        javaMultipleFiles:
          type: boolean
        javaOuterClassname:
          type: string
        javaPackage:
          type: string
        javaStringCheckUtf8:
          type: boolean
        objcClassPrefix:
          type: string
        optimizeFor:
          enum:
          - SPEED
          - CODE_SIZE
          - LITE_RUNTIME
          type: string
        phpClassPrefix:
          type: string
        phpGenericServices:
          type: boolean
        phpMetadataNamespace:
          type: string
        phpNamespace:
          type: string
        pyGenericServices:
          type: boolean
        rubyPackage:
          type: string
        swiftPrefix:
          type: string
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    Health:
      properties:
        details:
          additionalProperties:
            type: object
          type: object
        errorMessage:
          type: string
        healthy:
          type: boolean
      type: object
    HealthCheckStatus:
      properties:
        healthResults:
          type: array
        healthy:
          type: boolean
        suppressedHealthResults:
          type: array
      type: object
    Location:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        leadingComments:
          type: string
        leadingDetachedCommentsCount:
          format: int32
          type: integer
        leadingDetachedCommentsList:
          items:
            type: string
          properties:
            empty:
              type: boolean
          type: array
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        pathCount:
          format: int32
          type: integer
        pathList:
          items:
            format: int32
            type: integer
          type: array
        serializedSize:
          format: int32
          type: integer
        spanCount:
          format: int32
          type: integer
        spanList:
          items:
            format: int32
            type: integer
          type: array
        trailingComments:
          type: string
      type: object
    LocationOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        leadingComments:
          type: string
        leadingDetachedCommentsCount:
          format: int32
          type: integer
        leadingDetachedCommentsList:
          items:
            type: string
          type: array
        pathCount:
          format: int32
          type: integer
        pathList:
          items:
            format: int32
            type: integer
          type: array
        spanCount:
          format: int32
          type: integer
        spanList:
          items:
            format: int32
            type: integer
          type: array
        trailingComments:
          type: string
      type: object
    Message:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        serializedSize:
          format: int32
          type: integer
      type: object
    MessageLite:
      properties:
        initialized:
          type: boolean
        serializedSize:
          format: int32
          type: integer
      type: object
    MessageOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        mapEntry:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        messageSetWireFormat:
          type: boolean
        noStandardDescriptorAccessor:
          type: boolean
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    MessageOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        mapEntry:
          type: boolean
        messageSetWireFormat:
          type: boolean
        noStandardDescriptorAccessor:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    MethodDescriptor:
      properties:
        clientStreaming:
          type: boolean
        fullName:
          type: string
        index:
          format: int32
          type: integer
        name:
          type: string
        serverStreaming:
          type: boolean
      type: object
    MethodDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        clientStreaming:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        inputType:
          type: string
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        name:
          type: string
        outputType:
          type: string
        serializedSize:
          format: int32
          type: integer
        serverStreaming:
          type: boolean
      type: object
    MethodDescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        clientStreaming:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        inputType:
          type: string
        name:
          type: string
        outputType:
          type: string
        serverStreaming:
          type: boolean
      type: object
    MethodOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        idempotencyLevel:
          enum:
          - IDEMPOTENCY_UNKNOWN
          - NO_SIDE_EFFECTS
          - IDEMPOTENT
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    MethodOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        idempotencyLevel:
          enum:
          - IDEMPOTENCY_UNKNOWN
          - NO_SIDE_EFFECTS
          - IDEMPOTENT
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    NamePart:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        isExtension:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        namePart:
          type: string
        serializedSize:
          format: int32
          type: integer
      type: object
    NamePartOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        isExtension:
          type: boolean
        namePart:
          type: string
      type: object
    OneofDescriptor:
      properties:
        fieldCount:
          format: int32
          type: integer
        fields:
          type: array
        fullName:
          type: string
        index:
          format: int32
          type: integer
        name:
          type: string
        synthetic:
          type: boolean
      type: object
    OneofDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        name:
          type: string
        serializedSize:
          format: int32
          type: integer
      type: object
    OneofDescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        name:
          type: string
      type: object
    OneofOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    OneofOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    Parser:
      type: object
    ParserAny:
      type: object
    ParserDescriptorProto:
      type: object
    ParserEnumDescriptorProto:
      type: object
    ParserEnumOptions:
      type: object
    ParserEnumReservedRange:
      type: object
    ParserEnumValueDescriptorProto:
      type: object
    ParserEnumValueOptions:
      type: object
    ParserExtensionRange:
      type: object
    ParserExtensionRangeOptions:
      type: object
    ParserFieldDescriptorProto:
      type: object
    ParserFieldOptions:
      type: object
    ParserFileDescriptorProto:
      type: object
    ParserFileOptions:
      type: object
    ParserLocation:
      type: object
    ParserMessage:
      type: object
    ParserMessageLite:
      type: object
    ParserMessageOptions:
      type: object
    ParserMethodDescriptorProto:
      type: object
    ParserMethodOptions:
      type: object
    ParserNamePart:
      type: object
    ParserOneofDescriptorProto:
      type: object
    ParserOneofOptions:
      type: object
    ParserReservedRange:
      type: object
    ParserServiceDescriptorProto:
      type: object
    ParserServiceOptions:
      type: object
    ParserSourceCodeInfo:
      type: object
    ParserUninterpretedOption:
      type: object
    PollData:
      properties:
        domain:
          type: string
        lastPollTime:
          format: int64
          type: integer
        queueName:
          type: string
        workerId:
          type: string
      type: object
    RerunWorkflowRequest:
      properties:
        correlationId:
          type: string
        reRunFromTaskId:
          type: string
        reRunFromWorkflowId:
          type: string
        taskInput:
          additionalProperties:
            type: object
          type: object
        workflowInput:
          additionalProperties:
            type: object
          type: object
      type: object
    ReservedRange:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        end:
          format: int32
          type: integer
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        start:
          format: int32
          type: integer
      type: object
    ReservedRangeOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        end:
          format: int32
          type: integer
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        start:
          format: int32
          type: integer
      type: object
    SearchResultTask:
      properties:
        results:
          type: array
        totalHits:
          format: int64
          type: integer
      type: object
    SearchResultTaskSummary:
      properties:
        results:
          type: array
        totalHits:
          format: int64
          type: integer
      type: object
    SearchResultWorkflow:
      properties:
        results:
          type: array
        totalHits:
          format: int64
          type: integer
      type: object
    SearchResultWorkflowSummary:
      properties:
        results:
          type: array
        totalHits:
          format: int64
          type: integer
      type: object
    ServiceDescriptor:
      properties:
        fullName:
          type: string
        index:
          format: int32
          type: integer
        methods:
          type: array
        name:
          type: string
      type: object
    ServiceDescriptorProto:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        methodCount:
          format: int32
          type: integer
        methodList:
          type: array
        methodOrBuilderList:
          type: array
        name:
          type: string
        serializedSize:
          format: int32
          type: integer
      type: object
    ServiceDescriptorProtoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        methodCount:
          format: int32
          type: integer
        methodList:
          type: array
        methodOrBuilderList:
          type: array
        name:
          type: string
      type: object
    ServiceOptions:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        allFieldsRaw:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    ServiceOptionsOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        deprecated:
          type: boolean
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        uninterpretedOptionCount:
          format: int32
          type: integer
        uninterpretedOptionList:
          type: array
        uninterpretedOptionOrBuilderList:
          type: array
      type: object
    SkipTaskRequest:
      properties:
        taskInput:
          additionalProperties:
            type: object
          type: object
        taskOutput:
          additionalProperties:
            type: object
          type: object
      type: object
    SourceCodeInfo:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        locationCount:
          format: int32
          type: integer
        locationList:
          type: array
        locationOrBuilderList:
          type: array
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        serializedSize:
          format: int32
          type: integer
      type: object
    SourceCodeInfoOrBuilder:
      properties:
        allFields:
          additionalProperties:
            type: object
          type: object
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        locationCount:
          format: int32
          type: integer
        locationList:
          type: array
        locationOrBuilderList:
          type: array
      type: object
    StartWorkflow:
      properties:
        correlationId:
          type: string
        input:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        taskToDomain:
          additionalProperties:
            type: string
          type: object
        version:
          format: int32
          type: integer
      type: object
    StartWorkflowRequest:
      properties:
        correlationId:
          type: string
        externalInputPayloadStoragePath:
          type: string
        input:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        priority:
          format: int32
          maximum: 99
          minimum: 0
          type: integer
        taskToDomain:
          additionalProperties:
            type: string
          type: object
        version:
          format: int32
          type: integer
      required:
      - name
      type: object
    SubWorkflowParams:
      properties:
        name:
          type: string
        taskToDomain:
          additionalProperties:
            type: string
          type: object
        version:
          format: int32
          type: integer
      required:
      - name
      type: object
    Task:
      properties:
        callbackAfterSeconds:
          format: int64
          type: integer
        callbackFromWorker:
          type: boolean
        correlationId:
          type: string
        domain:
          type: string
        endTime:
          format: int64
          type: integer
        executed:
          type: boolean
        executionNameSpace:
          type: string
        externalInputPayloadStoragePath:
          type: string
        externalOutputPayloadStoragePath:
          type: string
        inputData:
          additionalProperties:
            type: object
          type: object
        isolationGroupId:
          type: string
        iteration:
          format: int32
          type: integer
        loopOverTask:
          type: boolean
        outputData:
          additionalProperties:
            type: object
          type: object
        pollCount:
          format: int32
          type: integer
        queueWaitTime:
          format: int64
          type: integer
        rateLimitFrequencyInSeconds:
          format: int32
          type: integer
        rateLimitPerFrequency:
          format: int32
          type: integer
        reasonForIncompletion:
          type: string
        referenceTaskName:
          type: string
        responseTimeoutSeconds:
          format: int64
          type: integer
        retried:
          type: boolean
        retriedTaskId:
          type: string
        retryCount:
          format: int32
          type: integer
        scheduledTime:
          format: int64
          type: integer
        seq:
          format: int32
          type: integer
        startDelayInSeconds:
          format: int32
          type: integer
        startTime:
          format: int64
          type: integer
        status:
          enum:
          - IN_PROGRESS
          - CANCELED
          - FAILED
          - FAILED_WITH_TERMINAL_ERROR
          - COMPLETED
          - COMPLETED_WITH_ERRORS
          - SCHEDULED
          - TIMED_OUT
          - SKIPPED
          type: string
        subWorkflowId:
          type: string
        subworkflowChanged:
          type: boolean
        taskDefName:
          type: string
        taskId:
          type: string
        taskType:
          type: string
        updateTime:
          format: int64
          type: integer
        workerId:
          type: string
        workflowInstanceId:
          type: string
        workflowPriority:
          format: int32
          type: integer
        workflowType:
          type: string
      type: object
    TaskDef:
      properties:
        concurrentExecLimit:
          format: int32
          type: integer
        createTime:
          format: int64
          type: integer
        createdBy:
          type: string
        description:
          type: string
        executionNameSpace:
          type: string
        inputKeys:
          items:
            type: string
          type: array
        inputTemplate:
          additionalProperties:
            type: object
          type: object
        isolationGroupId:
          type: string
        name:
          type: string
        outputKeys:
          items:
            type: string
          type: array
        ownerApp:
          type: string
        ownerEmail:
          type: string
        pollTimeoutSeconds:
          format: int32
          minimum: 0
          type: integer
        rateLimitFrequencyInSeconds:
          format: int32
          type: integer
        rateLimitPerFrequency:
          format: int32
          type: integer
        responseTimeoutSeconds:
          format: int64
          minimum: 1
          type: integer
        retryCount:
          format: int32
          minimum: 0
          type: integer
        retryDelaySeconds:
          format: int32
          type: integer
        retryLogic:
          enum:
          - FIXED
          - EXPONENTIAL_BACKOFF
          type: string
        timeoutPolicy:
          enum:
          - RETRY
          - TIME_OUT_WF
          - ALERT_ONLY
          type: string
        timeoutSeconds:
          format: int64
          type: integer
        updateTime:
          format: int64
          type: integer
        updatedBy:
          type: string
      required:
      - name
      - timeoutSeconds
      type: object
    TaskDetails:
      properties:
        output:
          additionalProperties:
            type: object
          type: object
        taskId:
          type: string
        taskRefName:
          type: string
        workflowId:
          type: string
      type: object
    TaskExecLog:
      properties:
        createdTime:
          format: int64
          type: integer
        log:
          type: string
        taskId:
          type: string
      type: object
    TaskResult:
      properties:
        callbackAfterSeconds:
          format: int64
          type: integer
        externalOutputPayloadStoragePath:
          type: string
        logs:
          type: array
        outputData:
          additionalProperties:
            type: object
          type: object
        reasonForIncompletion:
          type: string
        status:
          enum:
          - IN_PROGRESS
          - FAILED
          - FAILED_WITH_TERMINAL_ERROR
          - COMPLETED
          type: string
        subWorkflowId:
          type: string
        taskId:
          type: string
        workerId:
          type: string
        workflowInstanceId:
          type: string
      required:
      - taskId
      - workflowInstanceId
      type: object
    TaskSummary:
      properties:
        correlationId:
          type: string
        endTime:
          type: string
        executionTime:
          format: int64
          type: integer
        externalInputPayloadStoragePath:
          type: string
        externalOutputPayloadStoragePath:
          type: string
        input:
          type: string
        output:
          type: string
        queueWaitTime:
          format: int64
          type: integer
        reasonForIncompletion:
          type: string
        scheduledTime:
          type: string
        startTime:
          type: string
        status:
          enum:
          - IN_PROGRESS
          - CANCELED
          - FAILED
          - FAILED_WITH_TERMINAL_ERROR
          - COMPLETED
          - COMPLETED_WITH_ERRORS
          - SCHEDULED
          - TIMED_OUT
          - SKIPPED
          type: string
        taskDefName:
          type: string
        taskId:
          type: string
        taskType:
          type: string
        updateTime:
          type: string
        workflowId:
          type: string
        workflowPriority:
          format: int32
          type: integer
        workflowType:
          type: string
      type: object
    UninterpretedOption:
      properties:
        aggregateValue:
          type: string
        allFields:
          additionalProperties:
            type: object
          type: object
        doubleValue:
          format: double
          type: number
        identifierValue:
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        memoizedSerializedSize:
          format: int32
          type: integer
          writeOnly: true
        nameCount:
          format: int32
          type: integer
        nameList:
          type: array
        nameOrBuilderList:
          type: array
        negativeIntValue:
          format: int64
          type: integer
        positiveIntValue:
          format: int64
          type: integer
        serializedSize:
          format: int32
          type: integer
      type: object
    UninterpretedOptionOrBuilder:
      properties:
        aggregateValue:
          type: string
        allFields:
          additionalProperties:
            type: object
          type: object
        doubleValue:
          format: double
          type: number
        identifierValue:
          type: string
        initializationErrorString:
          type: string
        initialized:
          type: boolean
        nameCount:
          format: int32
          type: integer
        nameList:
          type: array
        nameOrBuilderList:
          type: array
        negativeIntValue:
          format: int64
          type: integer
        positiveIntValue:
          format: int64
          type: integer
      type: object
    UnknownFieldSet:
      properties:
        initialized:
          type: boolean
        serializedSize:
          format: int32
          type: integer
        serializedSizeAsMessageSet:
          format: int32
          type: integer
      type: object
    Workflow:
      properties:
        correlationId:
          type: string
        createTime:
          format: int64
          type: integer
        createdBy:
          type: string
        endTime:
          format: int64
          type: integer
        event:
          type: string
        externalInputPayloadStoragePath:
          type: string
        externalOutputPayloadStoragePath:
          type: string
        failedReferenceTaskNames:
          items:
            type: string
          type: array
          uniqueItems: true
        input:
          additionalProperties:
            type: object
          type: object
        lastRetriedTime:
          format: int64
          type: integer
        output:
          additionalProperties:
            type: object
          type: object
        ownerApp:
          type: string
        parentWorkflowId:
          type: string
        parentWorkflowTaskId:
          type: string
        priority:
          format: int32
          maximum: 99
          minimum: 0
          type: integer
        reRunFromWorkflowId:
          type: string
        reasonForIncompletion:
          type: string
        startTime:
          format: int64
          type: integer
        status:
          enum:
          - RUNNING
          - COMPLETED
          - FAILED
          - TIMED_OUT
          - TERMINATED
          - PAUSED
          type: string
        taskToDomain:
          additionalProperties:
            type: string
          type: object
        tasks:
          type: array
        updateTime:
          format: int64
          type: integer
        updatedBy:
          type: string
        variables:
          additionalProperties:
            type: object
          type: object
        workflowId:
          type: string
        workflowName:
          type: string
        workflowVersion:
          format: int32
          type: integer
      type: object
    WorkflowDef:
      properties:
        createTime:
          format: int64
          type: integer
        createdBy:
          type: string
        description:
          type: string
        failureWorkflow:
          type: string
        inputParameters:
          items:
            type: string
          type: array
        inputTemplate:
          additionalProperties:
            type: object
          type: object
        name:
          type: string
        outputParameters:
          additionalProperties:
            type: object
          type: object
        ownerApp:
          type: string
        ownerEmail:
          type: string
        restartable:
          type: boolean
        schemaVersion:
          format: int32
          maximum: 2
          minimum: 2
          type: integer
        tasks:
          type: array
        timeoutPolicy:
          enum:
          - TIME_OUT_WF
          - ALERT_ONLY
          type: string
        timeoutSeconds:
          format: int64
          type: integer
        updateTime:
          format: int64
          type: integer
        updatedBy:
          type: string
        variables:
          additionalProperties:
            type: object
          type: object
        version:
          format: int32
          type: integer
        workflowStatusListenerEnabled:
          type: boolean
      required:
      - name
      - tasks
      - timeoutSeconds
      type: object
    WorkflowSummary:
      properties:
        correlationId:
          type: string
        endTime:
          type: string
        event:
          type: string
        executionTime:
          format: int64
          type: integer
        externalInputPayloadStoragePath:
          type: string
        externalOutputPayloadStoragePath:
          type: string
        failedReferenceTaskNames:
          type: string
        input:
          type: string
        inputSize:
          format: int64
          type: integer
        output:
          type: string
        outputSize:
          format: int64
          type: integer
        priority:
          format: int32
          type: integer
        reasonForIncompletion:
          type: string
        startTime:
          type: string
        status:
          enum:
          - RUNNING
          - COMPLETED
          - FAILED
          - TIMED_OUT
          - TERMINATED
          - PAUSED
          type: string
        updateTime:
          type: string
        version:
          format: int32
          type: integer
        workflowId:
          type: string
        workflowType:
          type: string
      type: object
    WorkflowTask:
      properties:
        asyncComplete:
          type: boolean
        caseExpression:
          deprecated: true
          type: string
        caseValueParam:
          deprecated: true
          type: string
        decisionCases:
          additionalProperties:
            type: array
          type: object
        defaultCase:
          type: array
        defaultExclusiveJoinTask:
          items:
            type: string
          type: array
        description:
          type: string
        dynamicForkJoinTasksParam:
          deprecated: true
          type: string
        dynamicForkTasksInputParamName:
          type: string
        dynamicForkTasksParam:
          type: string
        dynamicTaskNameParam:
          type: string
        evaluatorType:
          type: string
        expression:
          type: string
        forkTasks:
          items:
            type: array
          type: array
        inputParameters:
          additionalProperties:
            type: object
          type: object
        joinOn:
          items:
            type: string
          type: array
        loopCondition:
          type: string
        loopOver:
          type: array
        name:
          type: string
        optional:
          type: boolean
        rateLimited:
          type: boolean
        retryCount:
          format: int32
          type: integer
        scriptExpression:
          type: string
        sink:
          type: string
        startDelay:
          format: int32
          type: integer
        taskReferenceName:
          type: string
        type:
          type: string
        workflowTaskType:
          enum:
          - SIMPLE
          - DYNAMIC
          - FORK_JOIN
          - FORK_JOIN_DYNAMIC
          - DECISION
          - SWITCH
          - JOIN
          - DO_WHILE
          - SUB_WORKFLOW
          - EVENT
          - WAIT
          - USER_DEFINED
          - HTTP
          - LAMBDA
          - INLINE
          - EXCLUSIVE_JOIN
          - TERMINATE
          - KAFKA_PUBLISH
          - JSON_JQ_TRANSFORM
          - SET_VARIABLE
          type: string
          writeOnly: true
      required:
      - name
      - taskReferenceName
      type: object
info:
  title: OpenAPI definition
  version: v0
openapi: 3.0.1
paths:
  /api/admin/config:
    get:
      operationId: getAllConfig
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Get all the configuration parameters
      tags:
      - admin-resource
  /api/admin/consistency/verifyAndRepair/{workflowId}:
    post:
      operationId: verifyAndRepairWorkflowConsistency
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Verify and repair workflow consistency
      tags:
      - admin-resource
  /api/admin/queues:
    get:
      operationId: getEventQueues
      parameters:
      - in: query
        name: verbose
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200': {}
      summary: Get registered queues
      tags:
      - admin-resource
  /api/admin/sweep/requeue/{workflowId}:
    post:
      operationId: requeueSweep
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Queue up all the running workflows for sweep
      tags:
      - admin-resource
  /api/admin/task/{tasktype}:
    get:
      operationId: view
      parameters:
      - in: path
        name: tasktype
        required: true
        schema:
          type: string
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: count
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Get the list of pending tasks for a given task type
      tags:
      - admin-resource
  /api/event:
    get:
      operationId: getEventHandlers
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Get all the event handlers
      tags:
      - event-resource
    post:
      operationId: addEventHandler
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
      summary: Add a new event handler.
      tags:
      - event-resource
    put:
      operationId: updateEventHandler
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
      summary: Update an existing event handler.
      tags:
      - event-resource
  /api/event/{event}:
    get:
      operationId: getEventHandlersForEvent
      parameters:
      - in: path
        name: event
        required: true
        schema:
          type: string
      - in: query
        name: activeOnly
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Get event handlers for a given event
      tags:
      - event-resource
  /api/event/{name}:
    delete:
      operationId: removeEventHandlerStatus
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Remove an event handler
      tags:
      - event-resource
  /api/metadata/taskdefs:
    get:
      operationId: getTaskDefs
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Gets all task definition
      tags:
      - metadata-resource
    post:
      operationId: registerTaskDef
      requestBody:
        content:
          application/json:
            schema:
              type: array
        required: true
      responses:
        '200':
          description: OK
      summary: Create new task definition(s)
      tags:
      - metadata-resource
    put:
      operationId: registerTaskDef_1
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
      summary: Update an existing task
      tags:
      - metadata-resource
  /api/metadata/taskdefs/{tasktype}:
    delete:
      operationId: unregisterTaskDef
      parameters:
      - in: path
        name: tasktype
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Remove a task definition
      tags:
      - metadata-resource
    get:
      operationId: getTaskDef
      parameters:
      - in: path
        name: tasktype
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Gets the task definition
      tags:
      - metadata-resource
  /api/metadata/workflow:
    get:
      operationId: getAll
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Retrieves all workflow definition along with blueprint
      tags:
      - metadata-resource
    post:
      operationId: create
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
      summary: Create a new workflow definition
      tags:
      - metadata-resource
    put:
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
        required: true
      responses:
        '200':
          description: OK
      summary: Create or update workflow definition
      tags:
      - metadata-resource
  /api/metadata/workflow/{name}:
    get:
      operationId: get
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Retrieves workflow definition along with blueprint
      tags:
      - metadata-resource
  /api/metadata/workflow/{name}/{version}:
    delete:
      operationId: unregisterWorkflowDef
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          description: OK
      summary: Removes workflow definition. It does not remove workflows associated
        with the definition.
      tags:
      - metadata-resource
  /api/queue/:
    get:
      operationId: names
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Get Queue Names
      tags:
      - queue-admin-resource
  /api/queue/size:
    get:
      operationId: size
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
          description: OK
      summary: Get the queue length
      tags:
      - queue-admin-resource
  /api/queue/update/{workflowId}/task/{taskId}/{status}:
    post:
      operationId: updateByTaskId
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: path
        name: taskId
        required: true
        schema:
          type: string
      - in: path
        name: status
        required: true
        schema:
          enum:
          - IN_PROGRESS
          - CANCELED
          - FAILED
          - FAILED_WITH_TERMINAL_ERROR
          - COMPLETED
          - COMPLETED_WITH_ERRORS
          - SCHEDULED
          - TIMED_OUT
          - SKIPPED
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      summary: Publish a message in queue to mark a wait task (by taskId) as completed.
      tags:
      - queue-admin-resource
  /api/queue/update/{workflowId}/{taskRefName}/{status}:
    post:
      operationId: update
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: path
        name: taskRefName
        required: true
        schema:
          type: string
      - in: path
        name: status
        required: true
        schema:
          enum:
          - IN_PROGRESS
          - CANCELED
          - FAILED
          - FAILED_WITH_TERMINAL_ERROR
          - COMPLETED
          - COMPLETED_WITH_ERRORS
          - SCHEDULED
          - TIMED_OUT
          - SKIPPED
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          description: OK
      summary: Publish a message in queue to mark a wait task as completed.
      tags:
      - queue-admin-resource
  /api/tasks:
    post:
      operationId: updateTask
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Update a task
      tags:
      - task-resource
  /api/tasks/externalstoragelocation:
    get:
      operationId: getExternalStorageLocation_1
      parameters:
      - in: query
        name: path
        required: true
        schema:
          type: string
      - in: query
        name: operation
        required: true
        schema:
          type: string
      - in: query
        name: payloadType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Get the external uri where the task payload is to be stored
      tags:
      - task-resource
  /api/tasks/poll/batch/{tasktype}:
    get:
      operationId: batchPoll
      parameters:
      - in: path
        name: tasktype
        required: true
        schema:
          type: string
      - in: query
        name: workerid
        required: false
        schema:
          type: string
      - in: query
        name: domain
        required: false
        schema:
          type: string
      - in: query
        name: count
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - in: query
        name: timeout
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Batch poll for a task of a certain type
      tags:
      - task-resource
  /api/tasks/poll/{tasktype}:
    get:
      operationId: poll
      parameters:
      - in: path
        name: tasktype
        required: true
        schema:
          type: string
      - in: query
        name: workerid
        required: false
        schema:
          type: string
      - in: query
        name: domain
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Poll for a task of a certain type
      tags:
      - task-resource
  /api/tasks/queue/all:
    get:
      operationId: all
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  format: int64
                  type: integer
                type: object
          description: OK
      summary: Get the details about each queue
      tags:
      - task-resource
  /api/tasks/queue/all/verbose:
    get:
      operationId: allVerbose
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  additionalProperties:
                    additionalProperties:
                      format: int64
                      type: integer
                    type: object
                  type: object
                type: object
          description: OK
      summary: Get the details about each queue
      tags:
      - task-resource
  /api/tasks/queue/polldata:
    get:
      operationId: getPollData
      parameters:
      - in: query
        name: taskType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Get the last poll data for a given task type
      tags:
      - task-resource
  /api/tasks/queue/polldata/all:
    get:
      operationId: getAllPollData
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Get the last poll data for all task types
      tags:
      - task-resource
  /api/tasks/queue/requeue/{taskType}:
    post:
      operationId: requeuePendingTask
      parameters:
      - in: path
        name: taskType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Requeue pending tasks
      tags:
      - task-resource
  /api/tasks/queue/sizes:
    get:
      operationId: size_1
      parameters:
      - in: query
        name: taskType
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: OK
      summary: Get Task type queue sizes
      tags:
      - task-resource
  /api/tasks/search:
    get:
      description: use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC.
        If order is not specified, defaults to ASC
      operationId: search_1
      parameters:
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: query
        name: freeText
        required: false
        schema:
          default: '*'
          type: string
      - in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Search for tasks based in payload and other parameters
      tags:
      - task-resource
  /api/tasks/search-v2:
    get:
      description: use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC.
        If order is not specified, defaults to ASC
      operationId: searchV2_1
      parameters:
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: query
        name: freeText
        required: false
        schema:
          default: '*'
          type: string
      - in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Search for tasks based in payload and other parameters
      tags:
      - task-resource
  /api/tasks/{taskId}:
    get:
      operationId: getTask
      parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Get task by Id
      tags:
      - task-resource
  /api/tasks/{taskId}/log:
    get:
      operationId: getTaskLogs
      parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Get Task Execution Logs
      tags:
      - task-resource
    post:
      operationId: log
      parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
      summary: Log Task Execution Details
      tags:
      - task-resource
  /api/workflow:
    post:
      operationId: startWorkflow
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Start a new workflow with StartWorkflowRequest, which allows task to
        be executed in a domain
      tags:
      - workflow-resource
  /api/workflow/bulk/pause:
    put:
      operationId: pauseWorkflow_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Pause the list of workflows
      tags:
      - workflow-bulk-resource
  /api/workflow/bulk/restart:
    post:
      operationId: restart_1
      parameters:
      - in: query
        name: useLatestDefinitions
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Restart the list of completed workflow
      tags:
      - workflow-bulk-resource
  /api/workflow/bulk/resume:
    put:
      operationId: resumeWorkflow_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Resume the list of workflows
      tags:
      - workflow-bulk-resource
  /api/workflow/bulk/retry:
    post:
      operationId: retry_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Retry the last failed task for each workflow from the list
      tags:
      - workflow-bulk-resource
  /api/workflow/bulk/terminate:
    post:
      operationId: terminate_1
      parameters:
      - in: query
        name: reason
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Terminate workflows execution
      tags:
      - workflow-bulk-resource
  /api/workflow/decide/{workflowId}:
    put:
      operationId: decide
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Starts the decision task for a workflow
      tags:
      - workflow-resource
  /api/workflow/externalstoragelocation:
    get:
      operationId: getExternalStorageLocation
      parameters:
      - in: query
        name: path
        required: true
        schema:
          type: string
      - in: query
        name: operation
        required: true
        schema:
          type: string
      - in: query
        name: payloadType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Get the uri and path of the external storage where the workflow payload
        is to be stored
      tags:
      - workflow-resource
  /api/workflow/running/{name}:
    get:
      operationId: getRunningWorkflow
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: version
        required: false
        schema:
          default: 1
          format: int32
          type: integer
      - in: query
        name: startTime
        required: false
        schema:
          format: int64
          type: integer
      - in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve all the running workflows
      tags:
      - workflow-resource
  /api/workflow/search:
    get:
      description: use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC.
        If order is not specified, defaults to ASC.
      operationId: search
      parameters:
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: query
        name: freeText
        required: false
        schema:
          default: '*'
          type: string
      - in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Search for workflows based on payload and other parameters
      tags:
      - workflow-resource
  /api/workflow/search-by-tasks:
    get:
      description: use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC.
        If order is not specified, defaults to ASC
      operationId: searchWorkflowsByTasks
      parameters:
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: query
        name: freeText
        required: false
        schema:
          default: '*'
          type: string
      - in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Search for workflows based on task parameters
      tags:
      - workflow-resource
  /api/workflow/search-by-tasks-v2:
    get:
      description: use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC.
        If order is not specified, defaults to ASC
      operationId: searchWorkflowsByTasksV2
      parameters:
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: query
        name: freeText
        required: false
        schema:
          default: '*'
          type: string
      - in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Search for workflows based on task parameters
      tags:
      - workflow-resource
  /api/workflow/search-v2:
    get:
      description: use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC.
        If order is not specified, defaults to ASC.
      operationId: searchV2
      parameters:
      - in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: query
        name: freeText
        required: false
        schema:
          default: '*'
          type: string
      - in: query
        name: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Search for workflows based on payload and other parameters
      tags:
      - workflow-resource
  /api/workflow/{name}:
    post:
      operationId: startWorkflow_1
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
      - in: query
        name: correlationId
        required: false
        schema:
          type: string
      - in: query
        name: priority
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Start a new workflow. Returns the ID of the workflow instance that
        can be later used for tracking
      tags:
      - workflow-resource
  /api/workflow/{name}/correlated:
    post:
      operationId: getWorkflows_1
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: includeClosed
        required: false
        schema:
          default: false
          type: boolean
      - in: query
        name: includeTasks
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: array
                type: object
          description: OK
      summary: Lists workflows for the given correlation id list
      tags:
      - workflow-resource
  /api/workflow/{name}/correlated/{correlationId}:
    get:
      operationId: getWorkflows
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: correlationId
        required: true
        schema:
          type: string
      - in: query
        name: includeClosed
        required: false
        schema:
          default: false
          type: boolean
      - in: query
        name: includeTasks
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: array
          description: OK
      summary: Lists workflows for the given correlation id
      tags:
      - workflow-resource
  /api/workflow/{workflowId}:
    delete:
      operationId: terminate
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: query
        name: reason
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Terminate workflow execution
      tags:
      - workflow-resource
    get:
      operationId: getExecutionStatus
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: query
        name: includeTasks
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      summary: Gets the workflow by workflow id
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/pause:
    put:
      operationId: pauseWorkflow
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Pauses the workflow
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/remove:
    delete:
      operationId: delete
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: query
        name: archiveWorkflow
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          description: OK
      summary: Removes the workflow from the system
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/rerun:
    post:
      operationId: rerun
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Reruns the workflow from a specific task
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/resetcallbacks:
    post:
      operationId: resetWorkflow
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
      summary: Resets callback times of all non-terminal SIMPLE tasks to 0
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/restart:
    post:
      operationId: restart
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: query
        name: useLatestDefinitions
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '204':
          description: No Content
      summary: Restarts a completed workflow
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/resume:
    put:
      operationId: resumeWorkflow
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
      summary: Resumes the workflow
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/retry:
    post:
      operationId: retry
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: query
        name: resumeSubworkflowTasks
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '204':
          description: No Content
      summary: Retries the last failed task
      tags:
      - workflow-resource
  /api/workflow/{workflowId}/skiptask/{taskReferenceName}:
    put:
      operationId: skipTaskFromWorkflow
      parameters:
      - in: path
        name: workflowId
        required: true
        schema:
          type: string
      - in: path
        name: taskReferenceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          description: OK
      summary: Skips a given task from a current running workflow
      tags:
      - workflow-resource
  /health:
    get:
      operationId: doCheck
      responses:
        '200':
          content:
            '*/*': {}
          description: OK
      tags:
      - health-check-resource
servers:
- description: Generated server url
  url: http://localhost:8080
