openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: ''
    description: Generated server url
tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
paths:
  /v3/user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityUser'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityUser'
        '404':
          description: User not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityUser'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityUser'
    put:
      tags:
        - user
      summary: Update user
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - user
      summary: Delete user
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /v3/pet:
    put:
      tags:
        - pet
      summary: Update an existing pet
      operationId: updatePet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
        '404':
          description: Pet not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      operationId: addPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '405':
          description: Invalid input
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /v3/user:
    post:
      tags:
        - user
      summary: Create user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /v3/user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityUser'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityUser'
  /v3/store/order:
    post:
      tags:
        - store
      summary: Place an order for a pet
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityOrder'
  /v3/pet/{petId}:
    get:
      tags:
        - pet
      summary: Find pet by ID
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
        '404':
          description: Pet not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityPet'
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          required: false
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - pet
      summary: Deletes a pet
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: api_key
          in: header
          required: false
          schema:
            type: string
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /v3/pet/{petId}/uploadImage:
    post:
      tags:
        - pet
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelApiResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /v3/user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        '200':
          description: successful operation
  /v3/user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityString'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityString'
  /v3/store/order/{orderId}:
    get:
      tags:
        - store
      summary: Find purchase order by ID
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityOrder'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityOrder'
        '404':
          description: Order not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityOrder'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityOrder'
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /v3/store/inventory:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - api_key: []
  /v3/pet/findByTags:
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityListPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityListPet'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /v3/pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          schema:
            type: string
            default: available
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseEntityListPet'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntityListPet'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        filename:
          type: string
        charset:
          type: object
          properties:
            registered:
              type: boolean
        size:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        attachment:
          type: boolean
        formData:
          type: boolean
        inline:
          type: boolean
    HttpRange:
      type: object
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        qualityValue:
          type: number
          format: double
        concrete:
          type: boolean
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
        subtypeSuffix:
          type: string
        charset:
          type: object
          properties:
            registered:
              type: boolean
    ResponseEntityPet:
      type: object
      properties:
        headers:
          type: object
          properties:
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  language:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  displayName:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            accessControlRequestMethod:
              type: string
              enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            acceptPatch:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            basicAuth:
              type: string
              writeOnly: true
            bearerAuth:
              type: string
              writeOnly: true
            connection:
              type: array
              items:
                type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            origin:
              type: string
            pragma:
              type: string
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                language:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                displayName:
                  type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            cacheControl:
              type: string
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostAddress:
                      type: string
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            location:
              type: string
              format: uri
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            lastModified:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            empty:
              type: boolean
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
          additionalProperties:
            type: array
            items:
              type: string
        body:
          $ref: '#/components/schemas/Pet'
        statusCodeValue:
          type: integer
          format: int32
        statusCode:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
    ResponseEntityUser:
      type: object
      properties:
        headers:
          type: object
          properties:
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  language:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  displayName:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            accessControlRequestMethod:
              type: string
              enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            acceptPatch:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            basicAuth:
              type: string
              writeOnly: true
            bearerAuth:
              type: string
              writeOnly: true
            connection:
              type: array
              items:
                type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            origin:
              type: string
            pragma:
              type: string
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                language:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                displayName:
                  type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            cacheControl:
              type: string
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostAddress:
                      type: string
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            location:
              type: string
              format: uri
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            lastModified:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            empty:
              type: boolean
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
          additionalProperties:
            type: array
            items:
              type: string
        body:
          $ref: '#/components/schemas/User'
        statusCodeValue:
          type: integer
          format: int32
        statusCode:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
    ResponseEntityOrder:
      type: object
      properties:
        headers:
          type: object
          properties:
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  language:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  displayName:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            accessControlRequestMethod:
              type: string
              enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            acceptPatch:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            basicAuth:
              type: string
              writeOnly: true
            bearerAuth:
              type: string
              writeOnly: true
            connection:
              type: array
              items:
                type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            origin:
              type: string
            pragma:
              type: string
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                language:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                displayName:
                  type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            cacheControl:
              type: string
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostAddress:
                      type: string
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            location:
              type: string
              format: uri
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            lastModified:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            empty:
              type: boolean
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
          additionalProperties:
            type: array
            items:
              type: string
        body:
          $ref: '#/components/schemas/Order'
        statusCodeValue:
          type: integer
          format: int32
        statusCode:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
    ModelApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Resource:
      type: object
      properties:
        readable:
          type: boolean
        uri:
          type: string
          format: uri
        filename:
          type: string
        description:
          type: string
        url:
          type: string
          format: url
        file:
          type: string
          format: binary
        open:
          type: boolean
        inputStream:
          type: object
    ResponseEntityString:
      type: object
      properties:
        headers:
          type: object
          properties:
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  language:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  displayName:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            accessControlRequestMethod:
              type: string
              enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            acceptPatch:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            basicAuth:
              type: string
              writeOnly: true
            bearerAuth:
              type: string
              writeOnly: true
            connection:
              type: array
              items:
                type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            origin:
              type: string
            pragma:
              type: string
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                language:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                displayName:
                  type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            cacheControl:
              type: string
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostAddress:
                      type: string
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            location:
              type: string
              format: uri
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            lastModified:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            empty:
              type: boolean
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
          additionalProperties:
            type: array
            items:
              type: string
        body:
          type: string
        statusCodeValue:
          type: integer
          format: int32
        statusCode:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
    ResponseEntityListPet:
      type: object
      properties:
        headers:
          type: object
          properties:
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  language:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  displayName:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            accessControlRequestMethod:
              type: string
              enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            acceptPatch:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            basicAuth:
              type: string
              writeOnly: true
            bearerAuth:
              type: string
              writeOnly: true
            connection:
              type: array
              items:
                type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            origin:
              type: string
            pragma:
              type: string
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                language:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                displayName:
                  type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - POST
                  - PUT
                  - PATCH
                  - DELETE
                  - OPTIONS
                  - TRACE
            cacheControl:
              type: string
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostAddress:
                      type: string
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            location:
              type: string
              format: uri
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            lastModified:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            empty:
              type: boolean
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
          additionalProperties:
            type: array
            items:
              type: string
        body:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
        statusCodeValue:
          type: integer
          format: int32
        statusCode:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
