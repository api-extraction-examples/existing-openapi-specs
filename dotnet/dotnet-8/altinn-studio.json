{
    "openapi": "3.0.1",
    "info": {
      "title": "Altinn Designer API",
      "version": "v1"
    },
    "paths": {
      "/editor/{org}/{app}/{AllValues}": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Default action for the designer.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^[a-z]+[a-zA-Z0-9-]+[a-zA-Z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "AllValues",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/form-layouts": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Get all form layouts",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of the layoutset to get layouts for",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/form-layout/{layoutName}": {
        "post": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Save form layout as JSON",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of layoutSet the specific layout belongs to",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layoutName",
              "in": "path",
              "description": "The name of the form layout to be saved.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The content to be saved to the layout",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Delete a form layout",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "The name of the layoutset the specific layout belongs to",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layoutName",
              "in": "path",
              "description": "The form layout to be deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/form-layout-name/{layoutName}": {
        "post": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Update a form layout name",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of the layoutset the specific layout belongs to",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layoutName",
              "in": "path",
              "description": "The current name of the form layout",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The new name of the form layout.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/layout-settings": {
        "post": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Saves the layout settings for an app without layoutsets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of the layoutset the layoutsettings belong to",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The data to be saved",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Gets the layout settings for an app without layoutSets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of the layoutset the specific layoutsettings belong to",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/model-metadata": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Return JSON presentation of the model",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of current layoutSet in ux-editor that edited layout belongs to",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/layout-sets": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Get all layoutsets in the layout-set.json file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "post": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Create a layout-set.json file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of initial layout set",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Add a layoutset to the layout-sets.json file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "Id",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "DataType",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Tasks",
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/rule-handler": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Get rule handler in JSON structure",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of the layout set the specific rule handler belong to",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "post": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Save rule handler in JSON structure",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of the layout set the specific rule handler belong to",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/rule-config": {
        "post": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Save rule configuration",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of layout set",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The code list data to save",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Get rule configuration",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "query",
              "description": "Name of layout set",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/widget-settings": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "summary": "Gets widget settings for app",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/option-list-ids": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/app-development/app-version": {
        "get": {
          "tags": [
            "AppDevelopment"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Dto.VersionResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Dto.VersionResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Dto.VersionResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{app}/metadata": {
        "get": {
          "tags": [
            "ApplicationMetadata"
          ],
          "summary": "Gets the application metadata, url GET \"/designer/api/org/app/metadata\"",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "ApplicationMetadata"
          ],
          "summary": "Puts the application metadata, url PUT \"/designer/api/org/app/metadata",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The application metadata",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "post": {
          "tags": [
            "ApplicationMetadata"
          ],
          "summary": "Create an application metadata, url POST \"/designer/api/org/app/metadata\"",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/metadata/attachment-component": {
        "post": {
          "tags": [
            "ApplicationMetadata"
          ],
          "summary": "Adds the metadata for attachment",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "the application meta data to be updated",
            "content": {
              "application/json-patch+json": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              },
              "application/*+json": {
                "schema": { }
              },
              "application/xml": {
                "schema": { }
              },
              "text/xml": {
                "schema": { }
              },
              "application/*+xml": {
                "schema": { }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "ApplicationMetadata"
          ],
          "summary": "Updates the metadata when changing the properties for attachment component",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "the application meta data to be updated",
            "content": {
              "application/json-patch+json": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              },
              "application/*+json": {
                "schema": { }
              },
              "application/xml": {
                "schema": { }
              },
              "text/xml": {
                "schema": { }
              },
              "application/*+xml": {
                "schema": { }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "tags": [
            "ApplicationMetadata"
          ],
          "summary": "Deletes the metadata for attachment",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "the id of the component",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/config": {
        "get": {
          "tags": [
            "Config"
          ],
          "summary": "Method to retrieve the app description from the metadata file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Configuration.ServiceConfiguration"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Configuration.ServiceConfiguration"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Configuration.ServiceConfiguration"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Configuration.ServiceConfiguration"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Configuration.ServiceConfiguration"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Config"
          ],
          "summary": "Method to set the app description in the metadata file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "the service config",
            "content": {
              "application/json-patch+json": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              },
              "application/*+json": {
                "schema": { }
              },
              "application/xml": {
                "schema": { }
              },
              "text/xml": {
                "schema": { }
              },
              "application/*+xml": {
                "schema": { }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/datamodels/datamodel": {
        "get": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Method that returns the JSON contents of a specific datamodel.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "the org owning the models repo",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "the model repos",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "modelPath",
              "in": "query",
              "description": "The path to the file to get.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Updates the specified datamodel in the git repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "The org owning the repository.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repository name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "modelPath",
              "in": "query",
              "description": "The path to the file to be updated.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "saveOnly",
              "in": "query",
              "description": "Flag indicating if the model should ONLY be saved (no conversion)",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "description": "Json schema payload",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "delete": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Deletes the specified datamodel in the git repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "The org owning the repository.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "modelPath",
              "in": "query",
              "description": "The path to the file to be deleted.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/datamodels/all-json": {
        "get": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Method that returns all JSON schema datamodels within repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "the org owning the models repo",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "the model repos",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                }
              }
            },
            "302": {
              "description": "Redirect"
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/datamodels/all-xsd": {
        "get": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Method that returns all xsd models within repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "the org owning the models repo",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "the model repos",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnCoreFile"
                    }
                  }
                }
              }
            },
            "302": {
              "description": "Redirect"
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/datamodels/upload": {
        "post": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Upload an XSD.",
          "description": "This operation will use the new datamodelling library to convert the XSD into a JSON schema,\r\nmetadata model and C# class.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "The short name of the application owner.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of the repository to which the file is being added.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ContentType": {
                      "type": "string"
                    },
                    "ContentDisposition": {
                      "type": "string"
                    },
                    "Headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "Length": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "FileName": {
                      "type": "string"
                    }
                  }
                },
                "encoding": {
                  "ContentType": {
                    "style": "form"
                  },
                  "ContentDisposition": {
                    "style": "form"
                  },
                  "Headers": {
                    "style": "form"
                  },
                  "Length": {
                    "style": "form"
                  },
                  "Name": {
                    "style": "form"
                  },
                  "FileName": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/datamodels/new": {
        "post": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Creates a new model in the repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "The org owning the repository.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repository name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "View model containing the data required to create the initial model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/datamodels/xsd-from-repo": {
        "post": {
          "tags": [
            "Datamodels"
          ],
          "summary": "Generates model files from existing XSD in (datamodelling) repo",
          "description": "This operation will use the new datamodelling library to convert the XSD into a JSON schema",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "The short name of the application owner.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of the repository to which the file is being added.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "filePath",
              "in": "query",
              "description": "The path to the XSD to use",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/deployments": {
        "get": {
          "tags": [
            "Deployments"
          ],
          "summary": "Gets deployments based on a query",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Organisation",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "Number of documents to find",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "sortDirection",
              "in": "query",
              "description": "The sort direction\r\nAscending | Descending",
              "schema": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.Enums.SortDirection"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.DeploymentEntity]"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.DeploymentEntity]"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.DeploymentEntity]"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.DeploymentEntity]"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.DeploymentEntity]"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Deployments"
          ],
          "summary": "Creates a deployment",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Organisation",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Release model",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.DeploymentEntity"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.DeploymentEntity"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.DeploymentEntity"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.DeploymentEntity"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.DeploymentEntity"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{app}/deployments/permissions": {
        "get": {
          "tags": [
            "Deployments"
          ],
          "summary": "Gets list of environments the user can deploy to.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/environments": {
        "get": {
          "tags": [
            "Environments"
          ],
          "summary": "Gets list of environments",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Services.Models.EnvironmentModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Services.Models.EnvironmentModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Services.Models.EnvironmentModel"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Services.Models.EnvironmentModel"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Services.Models.EnvironmentModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "the default page for altinn studio when the user is not logged in",
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "the default page for altinn studio when the user is not logged in",
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/StartPage/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "the default page for altinn studio when the user is not logged in",
          "operationId": "DefaultNotLoggedIn",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{AllValues}": {
        "get": {
          "tags": [
            "Home"
          ],
          "parameters": [
            {
              "name": "AllValues",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/Dashboard": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "The default action presenting a list of available apps when the user is logged in",
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/dashboard/{AllValues}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "The default action presenting a list of available apps when the user is logged in",
          "operationId": "DefaultLoggedIn",
          "parameters": [
            {
              "name": "AllValues",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/NotAuthorized/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Action for presenting the Not Authorized View",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/NotAuthorized/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Action for presenting the Not Authorized View",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Docs/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Action for presenting documentation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/Docs/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Action for presenting documentation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Error/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Action for presenting error",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/Error/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Action for presenting error",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Login/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Login",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/Login/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Login",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Logout/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Logout",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/Logout/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Logout",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/AppToken/{id}": {
        "post": {
          "tags": [
            "Home"
          ],
          "summary": "Store app token for user",
          "parameters": [
            {
              "name": "Key",
              "in": "query",
              "description": "key for the repository",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/AppToken/{id}": {
        "post": {
          "tags": [
            "Home"
          ],
          "summary": "Store app token for user",
          "parameters": [
            {
              "name": "Key",
              "in": "query",
              "description": "key for the repository",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Debug/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Debug info",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/Home/Debug/{id}": {
        "get": {
          "tags": [
            "Home"
          ],
          "summary": "Debug info",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{repo}/languages": {
        "get": {
          "tags": [
            "Languages"
          ],
          "summary": "Endpoint for getting the available languages in the application.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/orgs": {
        "get": {
          "tags": [
            "Organization"
          ],
          "summary": "List of all organizations a user has access to.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Organization"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Organization"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Organization"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Organization"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Organization"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/v1/checkreleasebuildstatus": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/checkreleasebuildstatus": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/v1/check-release-build-status": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/check-release-build-status": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/v1/checkdeploymentbuildstatus": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/checkdeploymentbuildstatus": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/v1/check-deployment-build-status": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/check-deployment-build-status": {
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Gets a build status from Azure DevOps and updates a specific entity",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{app}/policy": {
        "get": {
          "tags": [
            "Policy"
          ],
          "summary": "Gets the application policy, url Get \"/designer/api/org/app/",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "Policy"
          ],
          "summary": "Puts the application policy, url PUT \"/designer/api/org/app/apppolicy",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The application metadata",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "post": {
          "tags": [
            "Policy"
          ],
          "summary": "Puts the application policy, url PUT \"/designer/api/org/app/apppolicy",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The application metadata",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/policy/{resourceid}": {
        "get": {
          "tags": [
            "Policy"
          ],
          "summary": "Gets the resource policy, url PUT \"/designer/api/org/app/{resoruceid}.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "resourceid",
              "in": "path",
              "description": "The resource Id for the connected policy",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "Policy"
          ],
          "summary": "Puts the resource policy, url PUT \"/designer/api/org/app/apppolicy",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "resourceid",
              "in": "path",
              "description": "The resource Id for the connected policy",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The application metadata",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "post": {
          "tags": [
            "Policy"
          ],
          "summary": "Puts the resource policy, url PUT \"/designer/api/org/app/apppolicy",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "resourceid",
              "in": "path",
              "description": "The resource Id for the connected policy",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The application metadata",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.ResourcePolicy"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/policy/validate": {
        "get": {
          "tags": [
            "Policy"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/policy/validate/{resourceid}": {
        "get": {
          "tags": [
            "Policy"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "resourceid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/policy/subjectoptions": {
        "get": {
          "tags": [
            "Policy"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/policy/actionoptions": {
        "get": {
          "tags": [
            "Policy"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/preview/{org}/{app}/{AllValues}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Default action for the preview.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "AllValues",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/app-specific-preview/{org}/{app}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Endpoint to fetch the cshtml to render app-frontend specific to what is defined in the app-repo",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/{imageFilePath}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting local app-images",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "imageFilePath",
              "in": "path",
              "description": "A path to the image location, including file name, consisting of an arbitrary amount of directories",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/v1/applicationmetadata": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the application metadata",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.App.ApplicationMetadata"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/v1/applicationsettings": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking a response containing the application settings",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ApplicationSettings"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ApplicationSettings"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ApplicationSettings"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/layoutsets": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the layout sets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LayoutSets"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LayoutSets"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LayoutSets"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LayoutSets"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LayoutSets"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/layoutsettings": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the layout settings for apps without layoutsets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/layoutsettings/{layoutSetName}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the layout settings for apps with layout sets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "path",
              "description": "Name of layout set to get layout settings from",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/v1/data/anonymous": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting a response from v1/data/anonymous",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/authentication/keepAlive": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for responding to keepAlive",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/v1/profile/user": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking a response to the profile user",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/authorization/parties/current": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking a response to the current party",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/v1/parties": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking a response to validate the instance",
          "parameters": [
            {
              "name": "allowedToInstantiateFilter",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Party"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Party"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Party"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Party"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Party"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/v1/parties/validateInstantiation": {
        "post": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking a response to validate the instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/v1/texts/{languageCode}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the text resource file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "Language code",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances": {
        "post": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for creating the mocked instance object",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "instanceOwnerPartyId",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{app}/mock-instance-id": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the mocked instance id",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/data/test-datatask-id": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the json schema for the datamodel for the default data task test-datatask-id",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "description": "party id",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "description": "instance",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for updating the json schema for the datamodel for the current data task in the process",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/data": {
        "post": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking upload of an attachment to an attachment component",
          "parameters": [
            {
              "name": "dataType",
              "in": "query",
              "description": "Id of the attachment component in application metadata",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/data/{dataTypeId}": {
        "delete": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking deleting an uploaded attachment to an attachment component",
          "parameters": [
            {
              "name": "dataTypeId",
              "in": "path",
              "description": "Id of the attachment in application metadata",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/data/{dataTypeId}/tags": {
        "post": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking updating tags for an attachment component in the datamodel",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dataTypeId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The specific tag from the code list chosen for the attachment",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuId}/process": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting a mocked response for the current task connected to the instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "instanceGuId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.AppProcessState"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.AppProcessState"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.AppProcessState"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuId}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Endpoint to get instance for next process step",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "instanceGuId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/active": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Endpoint to get active instances for apps with state/layout sets/multiple processes",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Instance"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuId}/validate": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Endpoint to validate an instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuId}/data/test-datatask-id/validate": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Endpoint to validate a data task for an instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuId}/process/next": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting a mocked response for the next task connected to the instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "instanceGuId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking an end to the process in order to get receipt after \"send inn\" is pressed",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "lang",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/v1/textresources": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking a response to getting all text resources",
          "description": "Hardcoded to only serve norwegian bokmal resource file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/jsonschema/{datamodel}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the datamodel as jsonschema",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "datamodel",
              "in": "path",
              "description": "Datamodel used by the application",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/resource/FormLayout.json": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the form layout",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/layouts/{layoutSetName}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting form layouts for a specific layout set",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "path",
              "description": "Name of layout set to get layouts from",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/resource/RuleHandler.js": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the ruleHandler",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/rulehandler/{layoutSetName}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the ruleHandler for apps with layout sets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "path",
              "description": "Name of layout set to get rule handler from",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/resource/RuleConfiguration.json": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the ruleConfiguration",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/ruleconfiguration/{layoutSetName}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting the ruleConfiguration for apps with layout sets",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "layoutSetName",
              "in": "path",
              "description": "Name of layout set to get rule config from",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/v1/applicationlanguages": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting application languages",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/api/options/{optionListId}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting options list for a given options list id",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "optionListId",
              "in": "path",
              "description": "The id of the options list",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/options/{optionListId}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting options list for a given options list id for a given instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "optionListId",
              "in": "path",
              "description": "The id of the options list",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "language",
              "in": "query",
              "description": "The language for the options list",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "source",
              "in": "query",
              "description": "The source of the options list",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/datalists/{dataListId}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for getting data list for a given data list id for a given instance",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "dataListId",
              "in": "path",
              "description": "The id of the data list",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "language",
              "in": "query",
              "description": "The language for the data list",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "The number of items to return",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/{org}/{app}/instances/{partyId}/{instanceGuid}/pages/order": {
        "post": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for updating data model with tag for attachment component // TODO: Figure out what actually happens here",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "currentPage",
              "in": "query",
              "description": "Current page in running app",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layoutSetId",
              "in": "query",
              "description": "Current layout set in running app",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dataTypeId",
              "in": "query",
              "description": "Connected datatype for that process task",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "partyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instanceGuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/v1/footer": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking the GET method for app footer",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/{org}/{app}/api/validationconfig/{modelname}": {
        "get": {
          "tags": [
            "Preview"
          ],
          "summary": "Action for mocking the GET method for app validation config",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "pattern": "^(?!designer)",
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "modelname",
              "in": "path",
              "description": "The name of the model to validate",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{repo}/process-modelling/process-definition": {
        "get": {
          "tags": [
            "ProcessModeling"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "ProcessModeling"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{repo}/process-modelling/process-definition-latest": {
        "put": {
          "tags": [
            "ProcessModeling"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ContentType": {
                      "type": "string"
                    },
                    "ContentDisposition": {
                      "type": "string"
                    },
                    "Headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "Length": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "FileName": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    }
                  }
                },
                "encoding": {
                  "ContentType": {
                    "style": "form"
                  },
                  "ContentDisposition": {
                    "style": "form"
                  },
                  "Headers": {
                    "style": "form"
                  },
                  "Length": {
                    "style": "form"
                  },
                  "Name": {
                    "style": "form"
                  },
                  "FileName": {
                    "style": "form"
                  },
                  "metadata": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{repo}/process-modelling/templates/{appVersion}": {
        "get": {
          "tags": [
            "ProcessModeling"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "appVersion",
              "in": "path",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/NuGet.Versioning.SemanticVersion"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{repo}/process-modelling/templates/{appVersion}/{templateName}": {
        "put": {
          "tags": [
            "ProcessModeling"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "appVersion",
              "in": "path",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/NuGet.Versioning.SemanticVersion"
              }
            },
            {
              "name": "templateName",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{app}/releases": {
        "get": {
          "tags": [
            "Releases"
          ],
          "summary": "Gets releases based on a query",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Organisation",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "Number of documents to find",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "sortDirection",
              "in": "query",
              "description": "The sort direction\r\nAscending | Descending",
              "schema": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.Enums.SortDirection"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.ReleaseEntity]"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.ReleaseEntity]"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.ReleaseEntity]"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.ReleaseEntity]"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.ReleaseEntity]"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Releases"
          ],
          "summary": "Creates a release",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Organisation",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Release model",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.ReleaseEntity"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.ReleaseEntity"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.ReleaseEntity"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.ReleaseEntity"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.ReleaseEntity"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/search": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Returns a list over repositories",
          "parameters": [
            {
              "name": "Keyword",
              "in": "query",
              "description": "Keyword",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "UId",
              "in": "query",
              "description": "UserId (can be an org)",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "description": "Sort repos by attribute.\r\nSupported values are \"alpha\", \"created\", \"updated\", \"size\", and \"id\". Default is \"alpha\"",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Order",
              "in": "query",
              "description": "Sort order, either \"asc\" (ascending) or \"desc\" (descending). Default is \"asc\", ignored if \"sort\" is not specified.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Page",
              "in": "query",
              "description": "Page number of results to return (1-based)",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Page size of results",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.SearchResults"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.SearchResults"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.SearchResults"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.SearchResults"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.SearchResults"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/copy-app": {
        "post": {
          "tags": [
            "Repository"
          ],
          "summary": "Action used to copy an existing app under the current org.",
          "description": "A pull request is automatically created in the new repository,\r\ncontaining changes to ensure that the app is operational.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sourceRepository",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "targetRepository",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/org/{org}": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "List all repos for an organization",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/create-app": {
        "post": {
          "tags": [
            "Repository"
          ],
          "summary": "Action used to create a new app under the current org.",
          "parameters": [
            {
              "name": "org",
              "in": "query",
              "description": "Unique identifier of the organisation responsible for the app.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "query",
              "description": "The name of repository.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/metadata": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Returns a given app repository",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The app repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/status": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "This method returns the status of a given repository",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/pull": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Pull remote changes for a given repo",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "Name of the repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepoStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/reset": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Deletes the local repository for the user and makes a new clone of the repo",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "the name of the local repository to reset",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/commit-and-push": {
        "post": {
          "tags": [
            "Repository"
          ],
          "summary": "Pushes changes for a given repo",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Info about the commit",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/commit": {
        "post": {
          "tags": [
            "Repository"
          ],
          "summary": "Commit changes",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Info about the commit",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CommitInfo"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/push": {
        "post": {
          "tags": [
            "Repository"
          ],
          "summary": "Push commits to repo",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repo name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/log": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Fetches the repository log",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repo name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/initial-commit": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Fetches the initial commit",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repo name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/latest-commit": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Gets the latest commit from current user",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repo name",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Commit"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/branches": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "List all branches for a repository",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/branches/branch": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Returns information about a given branch",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "branch",
              "in": "query",
              "description": "Name of branch",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Branch"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/discard": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Discards all local changes for the logged in user and the local repository is updated with latest remote commit (origin/master)",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/discard/{fileName}": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Discards local changes to a specific file and the files is updated with latest remote commit (origin/master)",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "fileName",
              "in": "path",
              "description": "the name of the file",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/stage/{fileName}": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Stages a specific file changed in working repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "fileName",
              "in": "path",
              "description": "the entire file path with filen name",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/clone": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Clones the remote repository",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/abort-merge": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Halts the merge operation and keeps local changes",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "description": "The name of the repository",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/contents": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Gets the repository content",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "path",
              "in": "query",
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/repos/repo/{org}/{repository}/contents.zip": {
        "get": {
          "tags": [
            "Repository"
          ],
          "summary": "Gets the repository content as a zip file\r\nthe boolean parameter full, indicates if only files git considers changed should be included,\r\nor if the whole repo should be included",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "full",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/{repository}/repository-settings": {
        "get": {
          "tags": [
            "RepositorySettings"
          ],
          "summary": "Gets the settings for the repository. This is the same as can be found in\r\n.AltinnStudio\\settings.json",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "RepositorySettings"
          ],
          "summary": "Updates the settings on disk with the provided settings.\r\nThis will overwrite the current on-disk settings.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AltinnStudioSettings"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/resourceadm/{org}/{repo}/{AllValues}": {
        "get": {
          "tags": [
            "ResourceAdm"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "required": true,
              "schema": {
                "pattern": "^[a-z]+[a-zA-Z0-9-]+[a-zA-Z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "AllValues",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources/accesslist": {
        "post": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.PagedAccessListResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.PagedAccessListResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.PagedAccessListResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/accesslist/{identifier}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "put": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/accesslist/{identifier}/members/{memberOrgNr}": {
        "post": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "memberOrgNr",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "identifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "memberOrgNr",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources/{id}/accesslists": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.PagedAccessListResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.PagedAccessListResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.PagedAccessListResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/{id}/accesslists/{listId}": {
        "post": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "listId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceAccessList"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceAccessList"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceAccessList"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceAccessList"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceAccessList"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "listId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/resourcelist": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ListviewServiceResource"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ListviewServiceResource"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ListviewServiceResource"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/{repository}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "query",
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/{repository}/{id}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/publishstatus/{repository}/{id}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResourceStatus"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResourceStatus"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResourceStatus"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResourceStatus"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResourceStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/validate/{repository}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "query",
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources/validate/{repository}/{id}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "default": ""
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources/updateresource/{id}": {
        "put": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources/addresource": {
        "post": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ServiceResource"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/importresource/{serviceCode}/{serviceEdition}/{environment}": {
        "post": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "serviceCode",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "serviceEdition",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "environment",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/*+xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/{org}/resources/sectors": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.DataTheme"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.DataTheme"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.DataTheme"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/losterms": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LosTerm"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LosTerm"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LosTerm"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/eurovoc": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.EuroVocTerm"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.EuroVocTerm"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.EuroVocTerm"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/altinn2linkservices/{environment}": {
        "get": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "environment",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.ResourceRegistry.Core.Models.Altinn2.AvailableService"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.ResourceRegistry.Core.Models.Altinn2.AvailableService"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.ResourceRegistry.Core.Models.Altinn2.AvailableService"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.ResourceRegistry.Core.Models.Altinn2.AvailableService"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.ResourceRegistry.Core.Models.Altinn2.AvailableService"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/resources/publish/{repository}/{id}": {
        "post": {
          "tags": [
            "ResourceAdmin"
          ],
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "env",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/session/remaining": {
        "get": {
          "tags": [
            "Session"
          ],
          "summary": "Gets the value of the session timeout cookie.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/session/keepalive": {
        "get": {
          "tags": [
            "Session"
          ],
          "summary": "Extends the duration current session",
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/session/details": {
        "get": {
          "tags": [
            "Session"
          ],
          "summary": "Gets session details for debug purposes",
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/{org}/{app}/Text": {
        "get": {
          "tags": [
            "Text"
          ],
          "summary": "The View for text resources",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^[a-z]+[a-zA-Z0-9-]+[a-zA-Z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{app}/text/languages": {
        "get": {
          "tags": [
            "Text"
          ],
          "summary": "The languages in the app",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{app}/text/language/{languageCode}": {
        "get": {
          "tags": [
            "Text"
          ],
          "summary": "Returns the a JSON resource file for the given language id",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "The resource language id (for example ```nb, en```)",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                  }
                }
              }
            }
          },
          "deprecated": true
        },
        "post": {
          "tags": [
            "Text"
          ],
          "summary": "Save a resource file",
          "parameters": [
            {
              "name": "languageCode",
              "in": "path",
              "description": "The resource language id (for example ```nb, en``` )",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "The JSON Data",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResource"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        },
        "put": {
          "tags": [
            "Text"
          ],
          "summary": "Method to update multiple texts for given keys and a given\r\nlanguage in the text resource files in the old format.\r\nNon-existing keys will be added.",
          "description": "Temporary method that should live until old text format is replaced by the new.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "The languageCode for the text resource file that is being edited.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "List of Key/Value pairs that should be updated or added if not present.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        },
        "delete": {
          "tags": [
            "Text"
          ],
          "summary": "Deletes a language resource file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "The resource language id (for example ```nb, en```)",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{app}/text/keys": {
        "put": {
          "tags": [
            "Text"
          ],
          "summary": "Method to update multiple key-names\r\nNon-existing keys will be added.",
          "description": "If the newId is empty or undefined it implies that it is going to be removed",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "List of oldId: string, newId: string tuples to change or remove in all text-resource-files.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              },
              "application/*+xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextIdMutation"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{app}/text/json-schema": {
        "get": {
          "tags": [
            "Text"
          ],
          "summary": "Get the JSON schema for resource files",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{app}/text/service-name": {
        "get": {
          "tags": [
            "Text"
          ],
          "summary": "Method to retrieve service name from textresources file",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "app",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "deprecated": true
        }
      },
      "/designer/api/{org}/{repo}/text-keys": {
        "get": {
          "tags": [
            "TextKeys"
          ],
          "summary": "Endpoint for getting a list of all keys.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "put": {
          "tags": [
            "TextKeys"
          ],
          "summary": "Endpoint for changing or deleting a single key in the texts files for all languages.\r\nIf deleting, an empty string is sent as \"newKey\". Key and belonging value is\r\ndeleted from all texts files.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "oldKey",
              "in": "query",
              "description": "Old key to be replaced.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "newKey",
              "in": "query",
              "description": "New key to replace the old.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[System.String,System.String]"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/designer/api/{org}/{repo}/texts/language/{languageCode}": {
        "get": {
          "tags": [
            "Texts"
          ],
          "summary": "Endpoint for getting the complete text file for a specific language.",
          "description": "If duplicates of keys are tried added the\r\n            deserialization to dictionary will overwrite the first\r\n            key:value pair with the last key:value pair",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "Language identifier specifying the text file to read.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "put": {
          "tags": [
            "Texts"
          ],
          "summary": "Endpoint for updating a text file for a specific language.",
          "description": "If duplicates of keys are tried added the\r\n            deserialization to dictionary will overwrite the first\r\n            key:value pair with the last key:value pair",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "Language identifier specifying the text file to read.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "New content from request body to be added to the text file.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        },
        "delete": {
          "tags": [
            "Texts"
          ],
          "summary": "Endpoint for deleting a specific language in the application.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            },
            {
              "name": "languageCode",
              "in": "path",
              "description": "Language identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/{org}/{repo}/texts/convert": {
        "put": {
          "tags": [
            "Texts"
          ],
          "summary": "Endpoint for converting all texts files to the new flat\r\nformat in a specific repository for a specific organisation.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "description": "Unique identifier of the organisation responsible for the app.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repo",
              "in": "path",
              "description": "Application identifier which is unique within an organisation.",
              "required": true,
              "schema": {
                "pattern": "^(?!datamodels$)[a-z][a-z0-9-]{1,28}[a-z0-9]$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/designer/api/user/current": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Returns current logged in user",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.User"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.User"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.User"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.User"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.User"
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/user/repos": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "List the repos that the authenticated user owns or has access to",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/user/starred": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Gets all starred repositories for the logged in user.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/designer/api/user/starred/{org}/{repository}": {
        "put": {
          "tags": [
            "User"
          ],
          "summary": "Adds the repository to the users list of starred repositories.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Removes the star marking on the specified repository.",
          "parameters": [
            {
              "name": "org",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "repository",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Altinn.App.Core.Internal.Process.Elements.AltinnExtensionProperties.ActionType": {
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "format": "int32"
        },
        "Altinn.App.Core.Internal.Process.Elements.AppProcessElementInfo": {
          "type": "object",
          "properties": {
            "flow": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "started": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "elementId": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "altinnTaskType": {
              "type": "string",
              "nullable": true
            },
            "ended": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "validated": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ValidationStatus"
            },
            "flowType": {
              "type": "string",
              "nullable": true
            },
            "actions": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean",
                "nullable": true
              },
              "nullable": true
            },
            "userActions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.UserAction"
              },
              "nullable": true
            },
            "read": {
              "type": "boolean"
            },
            "write": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Altinn.App.Core.Internal.Process.Elements.AppProcessState": {
          "type": "object",
          "properties": {
            "started": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "startEvent": {
              "type": "string",
              "nullable": true
            },
            "currentTask": {
              "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.AppProcessElementInfo"
            },
            "ended": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "endEvent": {
              "type": "string",
              "nullable": true
            },
            "processTasks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.AppProcessTaskTypeInfo"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.App.Core.Internal.Process.Elements.AppProcessTaskTypeInfo": {
          "type": "object",
          "properties": {
            "altinnTaskType": {
              "type": "string",
              "nullable": true
            },
            "elementId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.App.Core.Internal.Process.Elements.UserAction": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "nullable": true
            },
            "authorized": {
              "type": "boolean"
            },
            "type": {
              "$ref": "#/components/schemas/Altinn.App.Core.Internal.Process.Elements.AltinnExtensionProperties.ActionType"
            }
          },
          "additionalProperties": false
        },
        "Altinn.App.Core.Models.InstanceSelection": {
          "type": "object",
          "properties": {
            "rowsPerPageOptions": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "defaultRowsPerPage": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "defaultSelectedOption": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "sortDirection": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.App.Core.Models.Logo": {
          "type": "object",
          "properties": {
            "displayAppOwnerNameInHeader": {
              "type": "boolean"
            },
            "source": {
              "type": "string",
              "nullable": true
            },
            "size": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.App.Core.Models.OnEntry": {
          "type": "object",
          "properties": {
            "show": {
              "type": "string",
              "nullable": true
            },
            "instanceSelection": {
              "$ref": "#/components/schemas/Altinn.App.Core.Models.InstanceSelection"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Register.Enums.PartyType": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "format": "int32"
        },
        "Altinn.Platform.Register.Models.Organization": {
          "type": "object",
          "properties": {
            "orgNumber": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "unitType": {
              "type": "string",
              "nullable": true
            },
            "telephoneNumber": {
              "type": "string",
              "nullable": true
            },
            "mobileNumber": {
              "type": "string",
              "nullable": true
            },
            "faxNumber": {
              "type": "string",
              "nullable": true
            },
            "eMailAddress": {
              "type": "string",
              "nullable": true
            },
            "internetAddress": {
              "type": "string",
              "nullable": true
            },
            "mailingAddress": {
              "type": "string",
              "nullable": true
            },
            "mailingPostalCode": {
              "type": "string",
              "nullable": true
            },
            "mailingPostalCity": {
              "type": "string",
              "nullable": true
            },
            "businessAddress": {
              "type": "string",
              "nullable": true
            },
            "businessPostalCode": {
              "type": "string",
              "nullable": true
            },
            "businessPostalCity": {
              "type": "string",
              "nullable": true
            },
            "unitStatus": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Register.Models.Party": {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "integer",
              "format": "int32"
            },
            "partyTypeName": {
              "$ref": "#/components/schemas/Altinn.Platform.Register.Enums.PartyType"
            },
            "orgNumber": {
              "type": "string",
              "nullable": true
            },
            "ssn": {
              "type": "string",
              "nullable": true
            },
            "unitType": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "isDeleted": {
              "type": "boolean"
            },
            "onlyHierarchyElementWithNoAccess": {
              "type": "boolean"
            },
            "person": {
              "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Person"
            },
            "organization": {
              "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Organization"
            },
            "childParties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Register.Models.Party"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Register.Models.Person": {
          "type": "object",
          "properties": {
            "ssn": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "middleName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "telephoneNumber": {
              "type": "string",
              "nullable": true
            },
            "mobileNumber": {
              "type": "string",
              "nullable": true
            },
            "mailingAddress": {
              "type": "string",
              "nullable": true
            },
            "mailingPostalCode": {
              "type": "string",
              "nullable": true
            },
            "mailingPostalCity": {
              "type": "string",
              "nullable": true
            },
            "addressMunicipalNumber": {
              "type": "string",
              "nullable": true
            },
            "addressMunicipalName": {
              "type": "string",
              "nullable": true
            },
            "addressStreetName": {
              "type": "string",
              "nullable": true
            },
            "addressHouseNumber": {
              "type": "string",
              "nullable": true
            },
            "addressHouseLetter": {
              "type": "string",
              "nullable": true
            },
            "addressPostalCode": {
              "type": "string",
              "nullable": true
            },
            "addressCity": {
              "type": "string",
              "nullable": true
            },
            "dateOfDeath": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Enums.FileScanResult": {
          "enum": [
            "NotApplicable",
            "Pending",
            "Clean",
            "Infected"
          ],
          "type": "string"
        },
        "Altinn.Platform.Storage.Interface.Enums.ReferenceType": {
          "enum": [
            "DataElement",
            "Task"
          ],
          "type": "string"
        },
        "Altinn.Platform.Storage.Interface.Enums.RelationType": {
          "enum": [
            "GeneratedFrom"
          ],
          "type": "string"
        },
        "Altinn.Platform.Storage.Interface.Models.ApplicationLogic": {
          "type": "object",
          "properties": {
            "autoCreate": {
              "type": "boolean",
              "nullable": true
            },
            "classRef": {
              "type": "string",
              "nullable": true
            },
            "schemaRef": {
              "type": "string",
              "nullable": true
            },
            "allowAnonymousOnStateless": {
              "type": "boolean"
            },
            "autoDeleteOnProcessEnd": {
              "type": "boolean"
            },
            "shadowFields": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ShadowFields"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.CompleteConfirmation": {
          "type": "object",
          "properties": {
            "stakeholderId": {
              "type": "string",
              "nullable": true
            },
            "confirmedOn": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.CopyInstanceSettings": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "excludedDataTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "excludedDataFields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.DataElement": {
          "type": "object",
          "properties": {
            "created": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "createdBy": {
              "type": "string",
              "nullable": true
            },
            "lastChanged": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "lastChangedBy": {
              "type": "string",
              "nullable": true
            },
            "id": {
              "type": "string",
              "nullable": true
            },
            "instanceGuid": {
              "type": "string",
              "nullable": true
            },
            "dataType": {
              "type": "string",
              "nullable": true
            },
            "filename": {
              "type": "string",
              "nullable": true
            },
            "contentType": {
              "type": "string",
              "nullable": true
            },
            "blobStoragePath": {
              "type": "string",
              "nullable": true
            },
            "selfLinks": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ResourceLinks"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            },
            "contentHash": {
              "type": "string",
              "nullable": true
            },
            "locked": {
              "type": "boolean"
            },
            "refs": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            },
            "isRead": {
              "type": "boolean"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "deleteStatus": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.DeleteStatus"
            },
            "fileScanResult": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Enums.FileScanResult"
            },
            "references": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Reference"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.DataField": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "nullable": true
            },
            "path": {
              "type": "string",
              "nullable": true
            },
            "dataTypeId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.DataType": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true
            },
            "allowedContentTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "allowedContributers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "appLogic": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ApplicationLogic"
            },
            "taskId": {
              "type": "string",
              "nullable": true
            },
            "maxSize": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxCount": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "minCount": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "grouping": {
              "type": "string",
              "nullable": true
            },
            "enablePdfCreation": {
              "type": "boolean"
            },
            "enableFileScan": {
              "type": "boolean"
            },
            "validationErrorOnPendingFileScan": {
              "type": "boolean"
            },
            "enabledFileAnalysers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "enabledFileValidators": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.DeleteStatus": {
          "type": "object",
          "properties": {
            "isHardDeleted": {
              "type": "boolean"
            },
            "hardDeleted": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.EFormidlingContract": {
          "type": "object",
          "properties": {
            "serviceId": {
              "type": "string",
              "nullable": true
            },
            "dpfShipmentType": {
              "type": "string",
              "nullable": true
            },
            "receiver": {
              "type": "string",
              "nullable": true
            },
            "sendAfterTaskId": {
              "type": "string",
              "nullable": true
            },
            "process": {
              "type": "string",
              "nullable": true
            },
            "standard": {
              "type": "string",
              "nullable": true
            },
            "typeVersion": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true
            },
            "securityLevel": {
              "type": "integer",
              "format": "int32"
            },
            "dataTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.HideSettings": {
          "type": "object",
          "properties": {
            "hideAlways": {
              "type": "boolean"
            },
            "hideOnTask": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.Instance": {
          "type": "object",
          "properties": {
            "created": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "createdBy": {
              "type": "string",
              "nullable": true
            },
            "lastChanged": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "lastChangedBy": {
              "type": "string",
              "nullable": true
            },
            "id": {
              "type": "string",
              "nullable": true
            },
            "instanceOwner": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.InstanceOwner"
            },
            "appId": {
              "type": "string",
              "nullable": true
            },
            "org": {
              "type": "string",
              "nullable": true
            },
            "selfLinks": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ResourceLinks"
            },
            "dueBefore": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "visibleAfter": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "process": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ProcessState"
            },
            "status": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.InstanceStatus"
            },
            "completeConfirmations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.CompleteConfirmation"
              },
              "nullable": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.DataElement"
              },
              "nullable": true
            },
            "presentationTexts": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            },
            "dataValues": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.InstanceOwner": {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string",
              "nullable": true
            },
            "personNumber": {
              "type": "string",
              "nullable": true
            },
            "organisationNumber": {
              "type": "string",
              "nullable": true
            },
            "username": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.InstanceStatus": {
          "type": "object",
          "properties": {
            "isArchived": {
              "type": "boolean"
            },
            "archived": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "isSoftDeleted": {
              "type": "boolean"
            },
            "softDeleted": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "isHardDeleted": {
              "type": "boolean"
            },
            "hardDeleted": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "readStatus": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ReadStatus"
            },
            "substatus": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.Substatus"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.MessageBoxConfig": {
          "type": "object",
          "properties": {
            "hideSettings": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.HideSettings"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.OnEntryConfig": {
          "type": "object",
          "properties": {
            "show": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed": {
          "type": "object",
          "properties": {
            "bankruptcyEstate": {
              "type": "boolean"
            },
            "organisation": {
              "type": "boolean"
            },
            "person": {
              "type": "boolean"
            },
            "subUnit": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.ProcessElementInfo": {
          "type": "object",
          "properties": {
            "flow": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "started": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "elementId": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "altinnTaskType": {
              "type": "string",
              "nullable": true
            },
            "ended": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "validated": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ValidationStatus"
            },
            "flowType": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.ProcessState": {
          "type": "object",
          "properties": {
            "started": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "startEvent": {
              "type": "string",
              "nullable": true
            },
            "currentTask": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.ProcessElementInfo"
            },
            "ended": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "endEvent": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.ReadStatus": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "Altinn.Platform.Storage.Interface.Models.Reference": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "nullable": true
            },
            "relation": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Enums.RelationType"
            },
            "valueType": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Enums.ReferenceType"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.ResourceLinks": {
          "type": "object",
          "properties": {
            "apps": {
              "type": "string",
              "nullable": true
            },
            "platform": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.ShadowFields": {
          "type": "object",
          "properties": {
            "prefix": {
              "type": "string",
              "nullable": true
            },
            "saveToDataType": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.Substatus": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Platform.Storage.Interface.Models.ValidationStatus": {
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "canCompleteTask": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Altinn.ResourceRegistry.Core.Enums.Altinn2.ServiceType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "description": "Provides Enumeration for the types of services",
          "format": "int32"
        },
        "Altinn.ResourceRegistry.Core.Models.Altinn2.AvailableService": {
          "type": "object",
          "properties": {
            "serviceOwnerCode": {
              "type": "string",
              "description": "Gets or sets Identifier used to identify Service Owner Code",
              "nullable": true
            },
            "serviceOwnerName": {
              "type": "string",
              "description": "Gets or sets Name of Service Owner",
              "nullable": true
            },
            "serviceName": {
              "type": "string",
              "description": "Gets or sets Name of Available Service",
              "nullable": true
            },
            "externalServiceCode": {
              "type": "string",
              "description": "Gets or sets Identifier used for identifying Service by External System",
              "nullable": true
            },
            "externalServiceEditionCode": {
              "type": "integer",
              "description": "Gets or sets Identifier used for identifying Service Edition by External System",
              "format": "int32"
            },
            "serviceEditionVersionName": {
              "type": "string",
              "description": "Gets or sets Identifier used to identify Service Edition Version Name",
              "nullable": true
            },
            "serviceEditionVersionId": {
              "type": "integer",
              "description": "Gets or sets Identifier used to identify Service Edition Version Name",
              "format": "int32"
            },
            "validFrom": {
              "type": "string",
              "description": "Gets or sets Date from when Service is Valid",
              "format": "date-time"
            },
            "validTo": {
              "type": "string",
              "description": "Gets or sets Date till when Service is Valid",
              "format": "date-time"
            },
            "serviceType": {
              "$ref": "#/components/schemas/Altinn.ResourceRegistry.Core.Enums.Altinn2.ServiceType"
            },
            "delegationDescription": {
              "type": "string",
              "description": "Gets or sets the description text for delegations.",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Contains information about an available service"
        },
        "Altinn.Studio.Designer.Configuration.ServiceConfiguration": {
          "type": "object",
          "properties": {
            "repositoryName": {
              "pattern": "^[a-zA-Z]+[a-zA-Z0-9_]*$",
              "type": "string",
              "description": "Gets or sets the repository name",
              "nullable": true
            },
            "serviceName": {
              "type": "string",
              "description": "Gets or sets the name of the service",
              "nullable": true
            },
            "serviceId": {
              "type": "string",
              "description": "Gets or sets the id of the service",
              "nullable": true
            },
            "serviceDescription": {
              "type": "string",
              "description": "Gets or sets the description of the",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Class representation for basic service configuration"
        },
        "Altinn.Studio.Designer.Enums.AltinnCoreFileStatusType": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer",
          "description": "Enum for the different status a file in a AltinnCore service can have",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Enums.AltinnRepositoryType": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "description": "Describes the type of Altinn repository",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Enums.FileStatus": {
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            16384,
            32768,
            -2147483648
          ],
          "type": "integer",
          "description": "Enums with the different file status",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Enums.ReferenceSource": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "description": "Enum for the different reference sources for resources in the resource registry",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Enums.ReferenceType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "description": "Enum for reference types of resources in the resource registry",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Enums.RepositoryStatus": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "description": "Enums with the different repo statuses",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Enums.ResourcePartyType": {
          "enum": [
            "PrivatePerson",
            "LegalEntityEnterprise",
            "Company",
            "BankruptcyEstate",
            "SelfRegisteredUser"
          ],
          "type": "string"
        },
        "Altinn.Studio.Designer.Enums.ResourceType": {
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16
          ],
          "type": "integer",
          "description": "Enum representation of the different types of resources supported by the resource registry",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Models.AccessList": {
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessListMember"
              },
              "nullable": true
            },
            "resourceConnections": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Dto.AccessListResourceConnection"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.AccessListMember": {
          "type": "object",
          "properties": {
            "orgNr": {
              "type": "string",
              "nullable": true
            },
            "orgName": {
              "type": "string",
              "nullable": true
            },
            "isSubParty": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.AltinnCoreFile": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "Gets or sets the FilePath",
              "nullable": true
            },
            "directory": {
              "type": "string",
              "description": "Gets or sets the Directory of the file.",
              "nullable": true
            },
            "repositoryRelativeUrl": {
              "type": "string",
              "description": "Relataive url to the file in the repository.",
              "nullable": true
            },
            "fileName": {
              "type": "string",
              "description": "Gets or sets the FileName",
              "nullable": true
            },
            "fileType": {
              "type": "string",
              "description": "Gets or sets the FileType",
              "nullable": true
            },
            "fileStatus": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.AltinnCoreFileStatusType"
            },
            "description": {
              "type": "string",
              "description": "Gets or sets the Description",
              "nullable": true
            },
            "lastChanged": {
              "type": "string",
              "description": "Gets or sets the last changed date time",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "description": "A entity describing a file that is part of a AltinnCore service"
        },
        "Altinn.Studio.Designer.Models.AltinnStudioSettings": {
          "type": "object",
          "properties": {
            "repoType": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.AltinnRepositoryType"
            }
          },
          "additionalProperties": false,
          "description": "Class representing the settings found in .altinnstudio/settings.json"
        },
        "Altinn.Studio.Designer.Models.App.ApplicationMetadata": {
          "type": "object",
          "properties": {
            "created": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "createdBy": {
              "type": "string",
              "nullable": true
            },
            "lastChanged": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "lastChangedBy": {
              "type": "string",
              "nullable": true
            },
            "versionId": {
              "type": "string",
              "nullable": true
            },
            "org": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            },
            "validFrom": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "validTo": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "processId": {
              "type": "string",
              "nullable": true
            },
            "dataTypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.DataType"
              },
              "nullable": true
            },
            "partyTypesAllowed": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed"
            },
            "autoDeleteOnProcessEnd": {
              "type": "boolean"
            },
            "presentationFields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.DataField"
              },
              "nullable": true
            },
            "dataFields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.DataField"
              },
              "nullable": true
            },
            "eFormidling": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.EFormidlingContract"
            },
            "onEntry": {
              "$ref": "#/components/schemas/Altinn.App.Core.Models.OnEntry"
            },
            "messageBoxConfig": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.MessageBoxConfig"
            },
            "copyInstanceSettings": {
              "$ref": "#/components/schemas/Altinn.Platform.Storage.Interface.Models.CopyInstanceSettings"
            },
            "id": {
              "type": "string",
              "nullable": true
            },
            "features": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean",
                "nullable": true
              },
              "nullable": true
            },
            "logo": {
              "$ref": "#/components/schemas/Altinn.App.Core.Models.Logo"
            },
            "altinnNugetVersion": {
              "type": "string",
              "description": "Gets or sets the altinn nuget version\r\nOverrides the base class property to initialize with null value",
              "nullable": true
            }
          },
          "additionalProperties": { },
          "description": "Studio facade for application metadata model"
        },
        "Altinn.Studio.Designer.Models.ApplicationSettings": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Gets or sets the unique id of the application, e.g. test/app-34",
              "nullable": true
            },
            "versionId": {
              "type": "string",
              "description": "Gets or sets the application version id.",
              "nullable": true
            },
            "org": {
              "type": "string",
              "description": "Gets or sets the short code representing the owner of the service. E.g. nav",
              "nullable": true
            },
            "title": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "description": "Gets or sets the title of the application with language codes.",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.Commit": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "The commit message",
              "nullable": true
            },
            "author": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Signature"
            },
            "comitter": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Signature"
            },
            "sha": {
              "type": "string",
              "description": "The Sha",
              "nullable": true
            },
            "messageShort": {
              "type": "string",
              "description": "Short Message",
              "nullable": true
            },
            "encoding": {
              "type": "string",
              "description": "Encoding of Commit",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Describes a"
        },
        "Altinn.Studio.Designer.Models.CommitInfo": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Gets or sets message for the commit",
              "nullable": true
            },
            "org": {
              "type": "string",
              "description": "Gets or sets organisation for the commit",
              "nullable": true
            },
            "repository": {
              "type": "string",
              "description": "Gets or sets the repository name",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "commit information"
        },
        "Altinn.Studio.Designer.Models.CompetentAuthority": {
          "type": "object",
          "properties": {
            "organization": {
              "type": "string",
              "description": "The organization number",
              "nullable": true
            },
            "orgcode": {
              "type": "string",
              "description": "The organization code",
              "nullable": true
            },
            "name": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "description": "The organization name. If not set it will be retrived from register based on Organization number",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Model representation of Competent Authority part of the ServiceResource model"
        },
        "Altinn.Studio.Designer.Models.ConceptSchema": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string",
              "nullable": true
            },
            "label": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            },
            "versionNumber": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.ContactPoint": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "The type of contact point, phone, email ++",
              "nullable": true
            },
            "email": {
              "type": "string",
              "description": "The contact details. The actual phone number, email adress",
              "nullable": true
            },
            "telephone": {
              "type": "string",
              "description": "Phone details",
              "nullable": true
            },
            "contactPage": {
              "type": "string",
              "description": "Contact page",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Defines a contact point"
        },
        "Altinn.Studio.Designer.Models.DataTheme": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string",
              "nullable": true
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "label": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            },
            "startUse": {
              "type": "string",
              "nullable": true
            },
            "conceptSchema": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ConceptSchema"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.Dto.AccessListResourceConnection": {
          "type": "object",
          "properties": {
            "resourceIdentifier": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.Dto.VersionResponse": {
          "type": "object",
          "properties": {
            "backendVersion": {
              "$ref": "#/components/schemas/NuGet.Versioning.SemanticVersion"
            },
            "frontendVersion": {
              "type": "string",
              "description": "It's string type due to limitation of SemanticVersion class. It doesn't support parsing \"3\" as a valid version.",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.EuroVocTerm": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string",
              "nullable": true
            },
            "code": {
              "type": "string",
              "nullable": true
            },
            "label": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            },
            "children": {
              "type": "array",
              "items": { },
              "nullable": true
            },
            "parents": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "eurovocPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.Keyword": {
          "type": "object",
          "properties": {
            "word": {
              "type": "string",
              "description": "The key word",
              "nullable": true
            },
            "language": {
              "type": "string",
              "description": "Language of the key word",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Model for defining keywords"
        },
        "Altinn.Studio.Designer.Models.LayoutSetConfig": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "nullable": true
            },
            "dataType": {
              "type": "string",
              "nullable": true
            },
            "tasks": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.LayoutSets": {
          "type": "object",
          "properties": {
            "sets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.LayoutSetConfig"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.ListviewServiceResource": {
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The identifier of the resource",
              "nullable": true
            },
            "title": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "The title of service",
              "nullable": true
            },
            "createdBy": {
              "type": "string",
              "description": "The user who created the resource",
              "nullable": true
            },
            "lastChanged": {
              "type": "string",
              "description": "Timestamp for when the resourcefile was last changed",
              "format": "date-time"
            },
            "hasPolicy": {
              "type": "boolean",
              "description": "A bool indicating if the resource has a policy or not",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.LosTerm": {
          "type": "object",
          "properties": {
            "internalId": {
              "type": "string",
              "nullable": true
            },
            "children": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "parents": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "isTheme": {
              "type": "boolean"
            },
            "losPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "name": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            },
            "definition": {
              "type": "string",
              "nullable": true
            },
            "uri": {
              "type": "string",
              "nullable": true
            },
            "synonyms": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "relatedTerms": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "theme": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.PagedAccessListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.AccessList"
              },
              "nullable": true
            },
            "nextPage": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.RepoStatus": {
          "type": "object",
          "properties": {
            "behindBy": {
              "type": "integer",
              "description": "The number of commits behind the",
              "format": "int32",
              "nullable": true
            },
            "aheadBy": {
              "type": "integer",
              "description": "The number of commits before the remote",
              "format": "int32",
              "nullable": true
            },
            "contentStatus": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.RepositoryContent"
              },
              "description": "List over files that has changed",
              "nullable": true
            },
            "repositoryStatus": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.RepositoryStatus"
            },
            "hasMergeConflict": {
              "type": "boolean",
              "description": "Defines if there is any merge conflicts"
            }
          },
          "additionalProperties": false,
          "description": "This class define the Repository status"
        },
        "Altinn.Studio.Designer.Models.RepositoryContent": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "Gets or sets the path of the file",
              "nullable": true
            },
            "fileStatus": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.FileStatus"
            }
          },
          "additionalProperties": false,
          "description": "content of the repository"
        },
        "Altinn.Studio.Designer.Models.ResourceAccessList": {
          "type": "object",
          "properties": {
            "accessListIdentifier": {
              "type": "string",
              "nullable": true
            },
            "resourceIdentifier": {
              "type": "string",
              "nullable": true
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "accessListName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.ResourceReference": {
          "type": "object",
          "properties": {
            "referenceSource": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.ReferenceSource"
            },
            "reference": {
              "type": "string",
              "description": "The reference identifier",
              "nullable": true
            },
            "referenceType": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.ReferenceType"
            }
          },
          "additionalProperties": false,
          "description": "Model representation of the resource reference part of the ServiceResource model"
        },
        "Altinn.Studio.Designer.Models.ResourceVersionInfo": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "nullable": true
            },
            "environment": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.ServiceResource": {
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The identifier of the resource",
              "nullable": true
            },
            "version": {
              "type": "string",
              "description": "The version of the resource",
              "nullable": true
            },
            "title": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "The title of service",
              "nullable": true
            },
            "description": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Description",
              "nullable": true
            },
            "rightDescription": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Description explaining the rights a recipient will receive if given access to the resource",
              "nullable": true
            },
            "homepage": {
              "type": "string",
              "description": "The homepage",
              "nullable": true
            },
            "status": {
              "type": "string",
              "description": "The status",
              "nullable": true
            },
            "spatial": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "spatial coverage\r\nThis property represents that area(s) a Public Service is likely to be available only within, typically the area(s) covered by a particular public authority.",
              "nullable": true
            },
            "contactPoints": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ContactPoint"
              },
              "description": "List of possible contact points",
              "nullable": true
            },
            "produces": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Linkes to the outcome of a public service",
              "nullable": true
            },
            "isPartOf": {
              "type": "string",
              "description": "IsPartOf",
              "nullable": true
            },
            "thematicArea": {
              "type": "string",
              "description": "ThematicArea",
              "nullable": true
            },
            "resourceReferences": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceReference"
              },
              "description": "ResourceReference",
              "nullable": true
            },
            "delegable": {
              "type": "boolean",
              "description": "Is this resource possible to delegate to others or not",
              "nullable": true
            },
            "visible": {
              "type": "boolean",
              "description": "The visibility of the resource",
              "nullable": true
            },
            "hasCompetentAuthority": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.CompetentAuthority"
            },
            "keywords": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.Keyword"
              },
              "description": "Keywords",
              "nullable": true
            },
            "limitedByRRR": {
              "type": "boolean",
              "description": "Defines if the resource is limited by Resource Rights Registry"
            },
            "selfIdentifiedUserEnabled": {
              "type": "boolean",
              "description": "The user acting on behalf of party can be a selfidentifed users"
            },
            "enterpriseUserEnabled": {
              "type": "boolean",
              "description": "The user acting on behalf of party can be an enterprise users"
            },
            "resourceType": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.ResourceType"
            },
            "availableForType": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Enums.ResourcePartyType"
              },
              "description": "Available for type defines which type of entity / person that resource targets",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Model describing a complete resource from the resrouce registry"
        },
        "Altinn.Studio.Designer.Models.ServiceResourceStatus": {
          "type": "object",
          "properties": {
            "policyVersion": {
              "type": "string",
              "nullable": true
            },
            "resourceVersion": {
              "type": "string",
              "nullable": true
            },
            "publishedVersions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.ResourceVersionInfo"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.Designer.Models.Signature": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "The email adress to the user",
              "nullable": true
            },
            "name": {
              "type": "string",
              "description": "The name of the user",
              "nullable": true
            },
            "when": {
              "type": "string",
              "description": "When signture was created",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "description": "The git signature"
        },
        "Altinn.Studio.Designer.Models.TextIdMutation": {
          "type": "object",
          "additionalProperties": false,
          "description": "TextId mutation."
        },
        "Altinn.Studio.Designer.Models.TextResource": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Gets or sets the language. Should be a two letter ISO name.",
              "nullable": true
            },
            "resources": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResourceElement"
              },
              "description": "Gets or sets a list of text resource elements",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Represents a set of texts on a specified language."
        },
        "Altinn.Studio.Designer.Models.TextResourceElement": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Gets or sets the id",
              "nullable": true
            },
            "value": {
              "type": "string",
              "description": "Gets or sets the value",
              "nullable": true
            },
            "variables": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Models.TextResourceVariable"
              },
              "description": "Gets or sets the variables",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Represents the actual texts identified by the key."
        },
        "Altinn.Studio.Designer.Models.TextResourceVariable": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Gets or sets the key",
              "nullable": true
            },
            "dataSource": {
              "type": "string",
              "description": "Gets or sets the dataSource",
              "nullable": true
            },
            "defaultValue": {
              "type": "string",
              "description": "Gets or sets a default value for the variable",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Represents a replacement variable if any element in the text should be replaced."
        },
        "Altinn.Studio.Designer.Repository.Models.BuildEntity": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id",
              "nullable": true
            },
            "status": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.TypedHttpClients.AzureDevOps.Enums.BuildStatus"
            },
            "result": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.TypedHttpClients.AzureDevOps.Enums.BuildResult"
            },
            "started": {
              "type": "string",
              "description": "Started",
              "format": "date-time",
              "nullable": true
            },
            "finished": {
              "type": "string",
              "description": "Finished",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Build entity for a db"
        },
        "Altinn.Studio.Designer.Repository.Models.DeploymentEntity": {
          "type": "object",
          "properties": {
            "created": {
              "type": "string",
              "description": "Created",
              "format": "date-time"
            },
            "createdBy": {
              "type": "string",
              "description": "CreatedBy",
              "nullable": true
            },
            "app": {
              "type": "string",
              "description": "Application name",
              "nullable": true
            },
            "org": {
              "type": "string",
              "description": "Organisation name",
              "nullable": true
            },
            "tagName": {
              "type": "string",
              "description": "TagName",
              "nullable": true
            },
            "envName": {
              "type": "string",
              "description": "Environment Name",
              "nullable": true
            },
            "deployedInEnv": {
              "type": "boolean",
              "description": "Application found in environment"
            },
            "build": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.BuildEntity"
            }
          },
          "additionalProperties": false,
          "description": "Deployment entity for a db"
        },
        "Altinn.Studio.Designer.Repository.Models.ReleaseEntity": {
          "type": "object",
          "properties": {
            "created": {
              "type": "string",
              "description": "Created",
              "format": "date-time"
            },
            "createdBy": {
              "type": "string",
              "description": "CreatedBy",
              "nullable": true
            },
            "app": {
              "type": "string",
              "description": "Application name",
              "nullable": true
            },
            "org": {
              "type": "string",
              "description": "Organisation name",
              "nullable": true
            },
            "tagName": {
              "type": "string",
              "description": "TagName",
              "nullable": true
            },
            "name": {
              "type": "string",
              "description": "Name",
              "nullable": true
            },
            "body": {
              "type": "string",
              "description": "Body",
              "nullable": true
            },
            "targetCommitish": {
              "type": "string",
              "description": "TargetCommitish",
              "nullable": true
            },
            "build": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.BuildEntity"
            }
          },
          "additionalProperties": false,
          "description": "Release entity for a db"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.Branch": {
          "type": "object",
          "properties": {
            "commit": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.PayloadCommit"
            },
            "name": {
              "type": "string",
              "description": "Gets or Sets Name",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Branch represents a repository branch"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.Organization": {
          "type": "object",
          "properties": {
            "avatarUrl": {
              "type": "string",
              "description": "Gets or Sets AvatarUrl",
              "nullable": true
            },
            "description": {
              "type": "string",
              "description": "Gets or Sets Description",
              "nullable": true
            },
            "fullName": {
              "type": "string",
              "description": "Gets or Sets FullName",
              "nullable": true
            },
            "id": {
              "type": "integer",
              "description": "Gets or Sets Id",
              "format": "int64",
              "nullable": true
            },
            "location": {
              "type": "string",
              "description": "Gets or Sets Location",
              "nullable": true
            },
            "username": {
              "type": "string",
              "description": "Gets or Sets Username",
              "nullable": true
            },
            "website": {
              "type": "string",
              "description": "Gets or Sets Website",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Organization represents an organization"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.PayloadCommit": {
          "type": "object",
          "properties": {
            "author": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.PayloadUser"
            },
            "committer": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.PayloadUser"
            },
            "id": {
              "type": "string",
              "description": "sha1 hash of the commit",
              "nullable": true
            },
            "message": {
              "type": "string",
              "description": "Gets or Sets Message",
              "nullable": true
            },
            "timestamp": {
              "type": "string",
              "description": "Gets or Sets Timestamp",
              "nullable": true
            },
            "url": {
              "type": "string",
              "description": "Gets or Sets Url",
              "nullable": true
            },
            "verification": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.PayloadCommitVerification"
            }
          },
          "additionalProperties": false,
          "description": "PayloadCommit represents a commit"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.PayloadCommitVerification": {
          "type": "object",
          "properties": {
            "payload": {
              "type": "string",
              "description": "Gets or Sets Payload",
              "nullable": true
            },
            "reason": {
              "type": "string",
              "description": "Gets or Sets Reason",
              "nullable": true
            },
            "signature": {
              "type": "string",
              "description": "Gets or Sets Signature",
              "nullable": true
            },
            "verified": {
              "type": "boolean",
              "description": "Gets or Sets Verified",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "PayloadCommitVerification represents the GPG verification of a commit"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.PayloadUser": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Gets or Sets Email",
              "nullable": true
            },
            "name": {
              "type": "string",
              "description": "Full name of the commit author",
              "nullable": true
            },
            "username": {
              "type": "string",
              "description": "Gets or Sets Username",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "PayloadUser represents the author or committer of a commit"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.Permission": {
          "type": "object",
          "properties": {
            "admin": {
              "type": "boolean",
              "description": "Gets or Sets Admin",
              "nullable": true
            },
            "pull": {
              "type": "boolean",
              "description": "Gets or Sets Pull",
              "nullable": true
            },
            "push": {
              "type": "boolean",
              "description": "Gets or Sets Push",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Permission represents a set of permissions"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.Repository": {
          "type": "object",
          "properties": {
            "cloneUrl": {
              "type": "string",
              "description": "Gets or Sets CloneUrl",
              "nullable": true
            },
            "createdAt": {
              "type": "string",
              "description": "Gets or Sets CreatedAt",
              "format": "date-time",
              "nullable": true
            },
            "defaultBranch": {
              "type": "string",
              "description": "Gets or Sets DefaultBranch",
              "nullable": true
            },
            "description": {
              "type": "string",
              "description": "Gets or Sets Description",
              "nullable": true
            },
            "empty": {
              "type": "boolean",
              "description": "Gets or Sets Empty",
              "nullable": true
            },
            "fork": {
              "type": "boolean",
              "description": "Gets or Sets Fork",
              "nullable": true
            },
            "forksCount": {
              "type": "integer",
              "description": "Gets or Sets ForksCount",
              "format": "int64",
              "nullable": true
            },
            "fullName": {
              "type": "string",
              "description": "Gets or Sets FullName",
              "nullable": true
            },
            "htmlUrl": {
              "type": "string",
              "description": "Gets or Sets HtmlUrl",
              "nullable": true
            },
            "id": {
              "type": "integer",
              "description": "Gets or Sets Id",
              "format": "int64",
              "nullable": true
            },
            "mirror": {
              "type": "boolean",
              "description": "Gets or Sets Mirror",
              "nullable": true
            },
            "name": {
              "type": "string",
              "description": "Gets or Sets Name",
              "nullable": true
            },
            "openIssuesCount": {
              "type": "integer",
              "description": "Gets or Sets OpenIssuesCount",
              "format": "int64",
              "nullable": true
            },
            "owner": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.User"
            },
            "parent": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
            },
            "permissions": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Permission"
            },
            "isPrivate": {
              "type": "boolean",
              "description": "Gets or Sets _Private",
              "nullable": true
            },
            "size": {
              "type": "integer",
              "description": "Gets or Sets Size",
              "format": "int64",
              "nullable": true
            },
            "sshUrl": {
              "type": "string",
              "description": "Gets or Sets SshUrl",
              "nullable": true
            },
            "starsCount": {
              "type": "integer",
              "description": "Gets or Sets StarsCount",
              "format": "int64",
              "nullable": true
            },
            "updatedAt": {
              "type": "string",
              "description": "Gets or Sets UpdatedAt",
              "format": "date-time",
              "nullable": true
            },
            "watchersCount": {
              "type": "integer",
              "description": "Gets or Sets WatchersCount",
              "format": "int64",
              "nullable": true
            },
            "website": {
              "type": "string",
              "description": "Gets or Sets Website",
              "nullable": true
            },
            "isClonedToLocal": {
              "type": "boolean",
              "description": "Gets or sets whether the repository is cloned to local"
            },
            "repositoryCreatedStatus": {
              "$ref": "#/components/schemas/System.Net.HttpStatusCode"
            }
          },
          "additionalProperties": false,
          "description": "Repository represents a repository"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.SearchResults": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.Repository"
              },
              "description": "Gets or Sets Data",
              "nullable": true
            },
            "ok": {
              "type": "boolean",
              "description": "Gets or Sets Ok",
              "nullable": true
            },
            "totalCount": {
              "type": "integer",
              "description": "Gets or Sets TotalCount",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "description": "Gets or Sets TotalPages",
              "format": "int32"
            }
          },
          "additionalProperties": false,
          "description": "SearchResults results of a successful search"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.User": {
          "type": "object",
          "properties": {
            "avatarUrl": {
              "type": "string",
              "description": "URL to the user's avatar",
              "nullable": true
            },
            "email": {
              "type": "string",
              "description": "Gets or Sets Email",
              "nullable": true
            },
            "fullName": {
              "type": "string",
              "description": "the user's full name",
              "nullable": true
            },
            "id": {
              "type": "integer",
              "description": "the user's id",
              "format": "int64",
              "nullable": true
            },
            "login": {
              "type": "string",
              "description": "the user's username",
              "nullable": true
            },
            "userType": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.RepositoryClient.Model.UserType"
            }
          },
          "additionalProperties": false,
          "description": "User represents a user"
        },
        "Altinn.Studio.Designer.RepositoryClient.Model.UserType": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "description": "Enums that defines if a Gitea User is an organization or user",
          "format": "int32"
        },
        "Altinn.Studio.Designer.Services.Models.EnvironmentModel": {
          "required": [
            "appsUrl",
            "name",
            "platformUrl"
          ],
          "type": "object",
          "properties": {
            "appsUrl": {
              "minLength": 1,
              "type": "string",
              "description": "AppsUrl"
            },
            "platformUrl": {
              "minLength": 1,
              "type": "string",
              "description": "PlatformUrl"
            },
            "hostname": {
              "type": "string",
              "description": "Hostname",
              "nullable": true
            },
            "appPrefix": {
              "type": "string",
              "description": "App prefix",
              "nullable": true
            },
            "platformPrefix": {
              "type": "string",
              "description": "Platform prefix",
              "nullable": true
            },
            "name": {
              "minLength": 1,
              "type": "string",
              "description": "Name"
            },
            "type": {
              "type": "string",
              "description": "Type",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Environment model"
        },
        "Altinn.Studio.Designer.TypedHttpClients.AzureDevOps.Enums.BuildResult": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "description": "The Azure DevOps Build Result\r\nhttps://docs.microsoft.com/en-us/rest/api/azure/devops/build/builds/queue?view=azure-devops-rest-5.1#buildresult",
          "format": "int32"
        },
        "Altinn.Studio.Designer.TypedHttpClients.AzureDevOps.Enums.BuildStatus": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "description": "The Azure DevOps Build Status\r\nhttps://docs.microsoft.com/en-us/rest/api/azure/devops/build/builds/queue?view=azure-devops-rest-5.1#buildstatus",
          "format": "int32"
        },
        "Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsResource": {
          "required": [
            "buildNumber"
          ],
          "type": "object",
          "properties": {
            "buildNumber": {
              "minLength": 1,
              "type": "string",
              "description": "Build number"
            },
            "resourceOwner": {
              "type": "string",
              "description": "Application owner",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Internal class only used for building up an AzureDevOpsWebHookEventModel"
        },
        "Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsWebHookEventModel": {
          "required": [
            "resource"
          ],
          "type": "object",
          "properties": {
            "resource": {
              "$ref": "#/components/schemas/Altinn.Studio.Designer.ViewModels.Request.AzureDevOpsResource"
            }
          },
          "additionalProperties": false,
          "description": "Azure DevOps Web hook event model"
        },
        "Altinn.Studio.Designer.ViewModels.Request.CreateDeploymentRequestViewModel": {
          "required": [
            "envName",
            "tagName"
          ],
          "type": "object",
          "properties": {
            "envName": {
              "minLength": 1,
              "type": "string",
              "description": "Environment Name"
            },
            "tagName": {
              "minLength": 1,
              "type": "string",
              "description": "TagName"
            }
          },
          "additionalProperties": false,
          "description": "Viewmodel for creating a deployment"
        },
        "Altinn.Studio.Designer.ViewModels.Request.CreateModelViewModel": {
          "required": [
            "modelName"
          ],
          "type": "object",
          "properties": {
            "modelName": {
              "maxLength": 250,
              "minLength": 1,
              "type": "string",
              "description": "The logical name of the model, without any file extensions."
            },
            "relativeDirectory": {
              "type": "string",
              "description": "Relative path where the model should be stored. Applies only when creating\r\nmodels in a data models repository. For app repositories the path is determined\r\nwithin the app.",
              "nullable": true
            },
            "altinn2Compatible": {
              "type": "boolean",
              "description": "Determines if the model should be created as an Altinn 2/Seres model,\r\nas opposed to the default which is Altinn 3 or plain Json Schema."
            }
          },
          "additionalProperties": false,
          "description": "Model used when creating a new model"
        },
        "Altinn.Studio.Designer.ViewModels.Request.CreateReleaseRequestViewModel": {
          "required": [
            "name",
            "tagName",
            "targetCommitish"
          ],
          "type": "object",
          "properties": {
            "tagName": {
              "minLength": 1,
              "type": "string",
              "description": "TagName"
            },
            "name": {
              "minLength": 1,
              "type": "string",
              "description": "Name"
            },
            "body": {
              "type": "string",
              "description": "Body",
              "nullable": true
            },
            "targetCommitish": {
              "minLength": 1,
              "type": "string",
              "description": "TargetCommitish"
            }
          },
          "additionalProperties": false,
          "description": "Viewmodel for creating a release"
        },
        "Altinn.Studio.Designer.ViewModels.Request.Enums.SortDirection": {
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "description": "Enum that defines direction for sort",
          "format": "int32"
        },
        "Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.DeploymentEntity]": {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.DeploymentEntity"
              },
              "description": "Results from the search",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "ViewModel for response when returning search results"
        },
        "Altinn.Studio.Designer.ViewModels.Response.SearchResults`1[Altinn.Studio.Designer.Repository.Models.ReleaseEntity]": {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.Designer.Repository.Models.ReleaseEntity"
              },
              "description": "Results from the search",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "ViewModel for response when returning search results"
        },
        "Altinn.Studio.PolicyAdmin.Models.PolicyRule": {
          "type": "object",
          "properties": {
            "ruleId": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "subject": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Altinn.Studio.PolicyAdmin.Models.ResourcePolicy": {
          "type": "object",
          "properties": {
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Altinn.Studio.PolicyAdmin.Models.PolicyRule"
              },
              "nullable": true
            },
            "requiredAuthenticationLevelEndUser": {
              "type": "string",
              "nullable": true
            },
            "requiredAuthenticationLevelOrg": {
              "type": "string",
              "nullable": true
            },
            "version": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Microsoft.AspNetCore.Mvc.ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": { }
        },
        "NuGet.Versioning.SemanticVersion": {
          "type": "object",
          "properties": {
            "major": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "minor": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "patch": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "releaseLabels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "readOnly": true
            },
            "release": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "isPrerelease": {
              "type": "boolean",
              "readOnly": true
            },
            "hasMetadata": {
              "type": "boolean",
              "readOnly": true
            },
            "metadata": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "System.Collections.Generic.KeyValuePair`2[System.String,System.String]": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "nullable": true
            },
            "value": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "System.Net.HttpStatusCode": {
          "enum": [
            100,
            101,
            102,
            103,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            226,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            421,
            422,
            423,
            424,
            426,
            428,
            429,
            431,
            451,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            510,
            511
          ],
          "type": "integer",
          "format": "int32"
        },
        "System.Text.Json.Nodes.JsonNode": {
          "type": "object",
          "properties": {
            "options": {
              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNodeOptions"
            },
            "parent": {
              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
            },
            "root": {
              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
            }
          },
          "additionalProperties": false
        },
        "System.Text.Json.Nodes.JsonNodeOptions": {
          "type": "object",
          "properties": {
            "propertyNameCaseInsensitive": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }