openapi: 3.0.3
info:
  title: BottleCRM API
  version: 1.0.0
  description: Open source CRM application
paths:
  /api/accounts/:
    get:
      operationId: accounts_retrieve
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: string
      tags:
      - Accounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
          description: ''
    post:
      operationId: accounts_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountWriteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
          description: ''
  /api/accounts/{id}/:
    get:
      operationId: accounts_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
          description: ''
    post:
      operationId: accounts_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountDetailEditSwaggerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
          description: ''
    put:
      operationId: accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountWriteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
          description: ''
    delete:
      operationId: accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      responses:
        '204':
          description: No response body
  /api/accounts/{id}/create_mail/:
    post:
      operationId: accounts_create_mail_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailWriteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailWrite'
          description: ''
  /api/accounts/attachment/{id}/:
    delete:
      operationId: accounts_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      responses:
        '204':
          description: No response body
  /api/accounts/comment/{id}/:
    put:
      operationId: accounts_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCommentEditSwaggerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCommentEditSwagger'
          description: ''
    delete:
      operationId: accounts_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Accounts
      responses:
        '204':
          description: No response body
  /api/api-settings/:
    get:
      operationId: api_settings_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Settings
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_settings_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APISettingsSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APISettingsSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APISettingsSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/api-settings/{id}/:
    get:
      operationId: api_settings_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Settings
      responses:
        '200':
          description: No response body
    put:
      operationId: api_settings_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APISettingsSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APISettingsSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APISettingsSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_settings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Settings
      responses:
        '204':
          description: No response body
  /api/auth/google/:
    post:
      operationId: auth_google_create
      description: Login through Google
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/refresh-token/:
    post:
      operationId: auth_refresh_token_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/cases/:
    get:
      operationId: cases_retrieve
      parameters:
      - in: query
        name: account
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: priority
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      tags:
      - Cases
      responses:
        '200':
          description: No response body
    post:
      operationId: cases_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/cases/{id}/:
    get:
      operationId: cases_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      responses:
        '200':
          description: No response body
    post:
      operationId: cases_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseDetailEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    put:
      operationId: cases_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: cases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      responses:
        '204':
          description: No response body
  /api/cases/attachment/{id}/:
    delete:
      operationId: cases_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      responses:
        '204':
          description: No response body
  /api/cases/comment/{id}/:
    put:
      operationId: cases_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseCommentEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: cases_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Cases
      responses:
        '204':
          description: No response body
  /api/contacts/:
    get:
      operationId: contacts_retrieve
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      responses:
        '200':
          description: No response body
    post:
      operationId: contacts_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/contacts/{id}/:
    get:
      operationId: contacts_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: contacts_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactDetailEditSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: contacts_update
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: facebook_url
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: language
        schema:
          type: string
      - in: query
        name: linked_in_url
        schema:
          type: string
      - in: query
        name: mobile_number
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: organization
        schema:
          type: string
      - in: query
        name: pincode
        schema:
          type: string
      - in: query
        name: primary_email
        schema:
          type: string
      - in: query
        name: secondary_email
        schema:
          type: string
      - in: query
        name: secondary_number
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: street
        schema:
          type: string
      - in: query
        name: teams
        schema:
          type: string
      - in: query
        name: twitter_username
        schema:
          type: string
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/contacts/attachment/{id}/:
    delete:
      operationId: contacts_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/contacts/comment/{id}/:
    put:
      operationId: contacts_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactCommentEditSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: contacts_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/dashboard/:
    get:
      operationId: dashboard_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/documents/:
    get:
      operationId: documents_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: shared_to
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - Active
          - In Active
      - in: query
        name: title
        schema:
          type: string
      tags:
      - documents
      responses:
        '200':
          description: No response body
    post:
      operationId: documents_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/documents/{id}/:
    get:
      operationId: documents_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - documents
      responses:
        '200':
          description: No response body
    put:
      operationId: documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - documents
      responses:
        '204':
          description: No response body
  /api/events/:
    get:
      operationId: events_retrieve
      parameters:
      - in: query
        name: assigned_users
        schema:
          type: string
      - in: query
        name: created_by
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      responses:
        '200':
          description: No response body
    post:
      operationId: events_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/events/{id}/:
    get:
      operationId: events_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      responses:
        '200':
          description: No response body
    post:
      operationId: events_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    put:
      operationId: events_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      responses:
        '204':
          description: No response body
  /api/events/attachment/{id}/:
    delete:
      operationId: events_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      responses:
        '204':
          description: No response body
  /api/events/comment/{id}/:
    put:
      operationId: events_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCommentEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: events_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Events
      responses:
        '204':
          description: No response body
  /api/leads/:
    get:
      operationId: leads_retrieve
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - assigned
          - closed
          - converted
          - in process
          - recycled
      - in: query
        name: tags
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      tags:
      - Leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: leads_create
      description: Leads Create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadCreateSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/leads/{id}/:
    get:
      operationId: leads_retrieve_2
      description: Lead Detail
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      responses:
        '200':
          description: No response body
    post:
      operationId: leads_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadDetailEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    put:
      operationId: leads_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: leads_destroy
      description: Lead Delete
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      responses:
        '204':
          description: No response body
  /api/leads/attachment/{id}/:
    delete:
      operationId: leads_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      responses:
        '204':
          description: No response body
  /api/leads/comment/{id}/:
    put:
      operationId: leads_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadCommentEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: leads_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      responses:
        '204':
          description: No response body
  /api/leads/companies:
    get:
      operationId: leads_companies_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Company
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: leads_companies_create
      description: Company Create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanySwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanySwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanySwaggerRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/leads/company/{id}:
    get:
      operationId: leads_company_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Company
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: leads_company_update
      description: Company Update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: leads_company_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Company
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/leads/create-from-site/:
    post:
      operationId: leads_create_from_site_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeadFromSiteSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateLeadFromSiteSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateLeadFromSiteSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/leads/upload/:
    post:
      operationId: leads_upload_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadUploadSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadUploadSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadUploadSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/opportunities/:
    get:
      operationId: opportunities_retrieve
      parameters:
      - in: query
        name: account
        schema:
          type: string
      - in: query
        name: lead_source
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: stage
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: string
      tags:
      - Opportunities
      responses:
        '200':
          description: No response body
    post:
      operationId: opportunities_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpportunityCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpportunityCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/opportunities/{id}/:
    get:
      operationId: opportunities_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      responses:
        '200':
          description: No response body
    post:
      operationId: opportunities_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpportunityDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpportunityDetailEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    put:
      operationId: opportunities_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpportunityCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpportunityCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: opportunities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      responses:
        '204':
          description: No response body
  /api/opportunities/attachment/{id}/:
    delete:
      operationId: opportunities_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      responses:
        '204':
          description: No response body
  /api/opportunities/comment/{id}/:
    put:
      operationId: opportunities_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpportunityCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpportunityCommentEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: opportunities_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Opportunities
      responses:
        '204':
          description: No response body
  /api/org/:
    get:
      operationId: org_retrieve
      description: Just Pass the token, will return ORG list, associated with user
      tags:
      - org
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgProfileCreate'
          description: ''
    post:
      operationId: org_create
      description: Organization and profile Creation api
      tags:
      - org
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgProfileCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrgProfileCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrgProfileCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgProfileCreate'
          description: ''
  /api/profile/:
    get:
      operationId: profile_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: priority
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: No response body
    post:
      operationId: tasks_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '200':
          description: No response body
    post:
      operationId: tasks_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDetailEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskDetailEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskDetailEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreateSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '204':
          description: No response body
  /api/tasks/attachment/{id}/:
    delete:
      operationId: tasks_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '204':
          description: No response body
  /api/tasks/comment/{id}/:
    put:
      operationId: tasks_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCommentEditSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCommentEditSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCommentEditSwaggerRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: tasks_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Tasks
      responses:
        '204':
          description: No response body
  /api/teams/:
    get:
      operationId: teams_retrieve
      parameters:
      - in: query
        name: assigned_users
        schema:
          type: string
      - in: query
        name: created_by
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: team_name
        schema:
          type: string
      tags:
      - Teams
      responses:
        '200':
          description: No response body
    post:
      operationId: teams_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamswaggerCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamswaggerCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamswaggerCreateRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/teams/{id}/:
    get:
      operationId: teams_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Teams
      responses:
        '200':
          description: No response body
    put:
      operationId: teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamswaggerCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamswaggerCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamswaggerCreateRequest'
        required: true
      responses:
        '200':
          description: No response body
    delete:
      operationId: teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - Teams
      responses:
        '204':
          description: No response body
  /api/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/user/{id}/status/:
    post:
      operationId: user_status_create
      description: User Status View
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: org
        schema:
          type: string
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateStatusSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdateStatusSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateStatusSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: users_retrieve
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: string
      - in: query
        name: role
        schema:
          type: string
          enum:
          - ADMIN
          - USER
      - in: query
        name: status
        schema:
          type: string
          enum:
          - Active
          - In Active
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: users_create
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateSwaggerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateSwaggerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateSwaggerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/get-teams-and-users/:
    get:
      operationId: users_get_teams_and_users_retrieve
      parameters:
      - in: header
        name: org
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    APISettingsSwaggerRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
        website:
          type: string
          format: uri
          nullable: true
          minLength: 1
          maxLength: 255
        lead_assigned_to:
          type: array
          items:
            type: string
            format: uuid
        tags:
          type: array
          items:
            type: string
            format: uuid
      required:
      - lead_assigned_to
      - title
    AccountCommentEditSwagger:
      type: object
      properties:
        comment:
          type: string
      required:
      - comment
    AccountCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    AccountDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        account_attachment:
          type: string
          format: binary
      required:
      - account_attachment
      - comment
    AccountRead:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        billing_city:
          type: string
          nullable: true
          title: City
          maxLength: 255
        tags:
          type: array
          items:
            type: string
            format: uuid
      required:
      - name
    AccountWriteRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        phone:
          type: string
          nullable: true
          minLength: 1
          maxLength: 128
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        billing_address_line:
          type: string
          nullable: true
          title: Address
          maxLength: 255
        billing_street:
          type: string
          nullable: true
          title: Street
          maxLength: 55
        billing_city:
          type: string
          nullable: true
          title: City
          maxLength: 255
        billing_state:
          type: string
          nullable: true
          title: State
          maxLength: 255
        billing_postcode:
          type: string
          nullable: true
          title: Post/Zip-code
          maxLength: 64
        billing_country:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BillingCountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        contacts:
          type: array
          items:
            type: string
            format: uuid
        teams:
          type: array
          items:
            type: string
            format: uuid
        assigned_to:
          type: array
          items:
            type: string
            format: uuid
        tags:
          type: array
          items:
            type: string
            format: uuid
        account_attachment:
          type: array
          items:
            type: string
            format: uuid
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        status:
          $ref: '#/components/schemas/AccountWriteStatusEnum'
        lead:
          type: string
          format: uuid
          nullable: true
      required:
      - account_attachment
      - assigned_to
      - contacts
      - email
      - name
      - teams
    AccountWriteStatusEnum:
      enum:
      - open
      - close
      type: string
      description: |-
        * `open` - Open
        * `close` - Close
    BillingCountryEnum:
      enum:
      - GB
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - KH
      - CM
      - CA
      - CV
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KP
      - KR
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MK
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - AN
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SZ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - US
      - UM
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
      description: |-
        * `GB` - United Kingdom
        * `AF` - Afghanistan
        * `AX` - Aland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei Darussalam
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `CV` - Cape Verde
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo, The Democratic Republic of the
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Cote d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CY` - Cyprus
        * `CZ` - Czech Republic
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `FR` - France
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `DE` - Germany
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See (Vatican City State)
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran, Islamic Republic of
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KP` - Korea, Democratic People's Republic of
        * `KR` - Korea, Republic of
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Lao People's Democratic Republic
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libyan Arab Jamahiriya
        * `LI` - Liechtenstein
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MK` - Macedonia, The Former Yugoslav Republic of
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia, Federated States of
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `AN` - Netherlands Antilles
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestinian Territory, Occupied
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Reunion
        * `RO` - Romania
        * `RU` - Russian Federation
        * `RW` - Rwanda
        * `BL` - Saint Barthelemy
        * `SH` - Saint Helena
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SZ` - Swaziland
        * `SE` - Sweden
        * `CH` - Switzerland
        * `SY` - Syrian Arab Republic
        * `TW` - Taiwan, Province of China
        * `TJ` - Tajikistan
        * `TZ` - Tanzania, United Republic of
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Turkey
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `US` - United States
        * `UM` - United States Minor Outlying Islands
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Viet Nam
        * `VG` - Virgin Islands, British
        * `VI` - Virgin Islands, U.S.
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    BlankEnum:
      enum:
      - ''
    CaseCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    CaseCreateSwaggerPriorityEnum:
      enum:
      - Low
      - Normal
      - High
      - Urgent
      type: string
      description: |-
        * `Low` - Low
        * `Normal` - Normal
        * `High` - High
        * `Urgent` - Urgent
    CaseCreateSwaggerRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        status:
          $ref: '#/components/schemas/CaseCreateSwaggerStatusEnum'
        priority:
          $ref: '#/components/schemas/CaseCreateSwaggerPriorityEnum'
        case_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CaseTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        closed_on:
          type: string
          format: date
        teams:
          type: array
          items:
            type: string
            format: uuid
        assigned_to:
          type: array
          items:
            type: string
            format: uuid
        account:
          type: string
          format: uuid
          nullable: true
        case_attachment:
          type: array
          items:
            type: string
            format: uuid
        contacts:
          type: array
          items:
            type: string
            format: uuid
        description:
          type: string
          nullable: true
      required:
      - assigned_to
      - case_attachment
      - closed_on
      - contacts
      - name
      - priority
      - status
      - teams
    CaseCreateSwaggerStatusEnum:
      enum:
      - New
      - Assigned
      - Pending
      - Closed
      - Rejected
      - Duplicate
      type: string
      description: |-
        * `New` - New
        * `Assigned` - Assigned
        * `Pending` - Pending
        * `Closed` - Closed
        * `Rejected` - Rejected
        * `Duplicate` - Duplicate
    CaseDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        case_attachment:
          type: string
          format: binary
      required:
      - case_attachment
      - comment
    CaseTypeEnum:
      enum:
      - Question
      - Incident
      - Problem
      type: string
      description: |-
        * `Question` - Question
        * `Incident` - Incident
        * `Problem` - Problem
    CompanyRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
        org:
          type: string
          format: uuid
          nullable: true
    CompanySwaggerRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
    ContactCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    ContactDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        contact_attachment:
          type: string
          format: binary
      required:
      - comment
      - contact_attachment
    CountryEnum:
      enum:
      - GB
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - KH
      - CM
      - CA
      - CV
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KP
      - KR
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MK
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - AN
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SZ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - US
      - UM
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
      description: |-
        * `GB` - United Kingdom
        * `AF` - Afghanistan
        * `AX` - Aland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei Darussalam
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `CV` - Cape Verde
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo, The Democratic Republic of the
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Cote d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CY` - Cyprus
        * `CZ` - Czech Republic
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `FR` - France
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `DE` - Germany
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See (Vatican City State)
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran, Islamic Republic of
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KP` - Korea, Democratic People's Republic of
        * `KR` - Korea, Republic of
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Lao People's Democratic Republic
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libyan Arab Jamahiriya
        * `LI` - Liechtenstein
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MK` - Macedonia, The Former Yugoslav Republic of
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia, Federated States of
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `AN` - Netherlands Antilles
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestinian Territory, Occupied
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Reunion
        * `RO` - Romania
        * `RU` - Russian Federation
        * `RW` - Rwanda
        * `BL` - Saint Barthelemy
        * `SH` - Saint Helena
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SZ` - Swaziland
        * `SE` - Sweden
        * `CH` - Switzerland
        * `SY` - Syrian Arab Republic
        * `TW` - Taiwan, Province of China
        * `TJ` - Tajikistan
        * `TZ` - Tanzania, United Republic of
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Turkey
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `US` - United States
        * `UM` - United States Minor Outlying Islands
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Viet Nam
        * `VG` - Virgin Islands, British
        * `VI` - Virgin Islands, U.S.
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    CreateContactRequest:
      type: object
      properties:
        salutation:
          type: string
          maxLength: 255
        first_name:
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          type: string
          minLength: 1
          maxLength: 255
        organization:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        title:
          type: string
          maxLength: 255
        primary_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        secondary_email:
          type: string
          format: email
          maxLength: 254
        mobile_number:
          type: string
          nullable: true
          minLength: 1
          maxLength: 128
        secondary_number:
          type: string
          nullable: true
          maxLength: 128
        department:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        country:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        language:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        do_not_call:
          type: boolean
        address:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          nullable: true
        linked_in_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        facebook_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        twitter_username:
          type: string
          nullable: true
          maxLength: 255
      required:
      - first_name
      - last_name
      - primary_email
    CreateLeadFromSiteSwaggerRequest:
      type: object
      properties:
        apikey:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
        first_name:
          type: string
          minLength: 1
        last_name:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        source:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
      required:
      - apikey
      - description
      - email
      - first_name
      - last_name
      - phone
      - source
      - title
    CurrencyEnum:
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHF
      - CLP
      - CNY
      - COP
      - CRC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XCD
      - XOF
      - XPF
      - YER
      - ZAR
      - ZMK
      - ZWL
      type: string
      description: |-
        * `AED` - AED, Dirham
        * `AFN` - AFN, Afghani
        * `ALL` - ALL, Lek
        * `AMD` - AMD, Dram
        * `ANG` - ANG, Guilder
        * `AOA` - AOA, Kwanza
        * `ARS` - ARS, Peso
        * `AUD` - AUD, Dollar
        * `AWG` - AWG, Guilder
        * `AZN` - AZN, Manat
        * `BAM` - BAM, Marka
        * `BBD` - BBD, Dollar
        * `BDT` - BDT, Taka
        * `BGN` - BGN, Lev
        * `BHD` - BHD, Dinar
        * `BIF` - BIF, Franc
        * `BMD` - BMD, Dollar
        * `BND` - BND, Dollar
        * `BOB` - BOB, Boliviano
        * `BRL` - BRL, Real
        * `BSD` - BSD, Dollar
        * `BTN` - BTN, Ngultrum
        * `BWP` - BWP, Pula
        * `BYR` - BYR, Ruble
        * `BZD` - BZD, Dollar
        * `CAD` - CAD, Dollar
        * `CDF` - CDF, Franc
        * `CHF` - CHF, Franc
        * `CLP` - CLP, Peso
        * `CNY` - CNY, Yuan Renminbi
        * `COP` - COP, Peso
        * `CRC` - CRC, Colon
        * `CUP` - CUP, Peso
        * `CVE` - CVE, Escudo
        * `CZK` - CZK, Koruna
        * `DJF` - DJF, Franc
        * `DKK` - DKK, Krone
        * `DOP` - DOP, Peso
        * `DZD` - DZD, Dinar
        * `EGP` - EGP, Pound
        * `ERN` - ERN, Nakfa
        * `ETB` - ETB, Birr
        * `EUR` - EUR, Euro
        * `FJD` - FJD, Dollar
        * `FKP` - FKP, Pound
        * `GBP` - GBP, Pound
        * `GEL` - GEL, Lari
        * `GHS` - GHS, Cedi
        * `GIP` - GIP, Pound
        * `GMD` - GMD, Dalasi
        * `GNF` - GNF, Franc
        * `GTQ` - GTQ, Quetzal
        * `GYD` - GYD, Dollar
        * `HKD` - HKD, Dollar
        * `HNL` - HNL, Lempira
        * `HRK` - HRK, Kuna
        * `HTG` - HTG, Gourde
        * `HUF` - HUF, Forint
        * `IDR` - IDR, Rupiah
        * `ILS` - ILS, Shekel
        * `INR` - INR, Rupee
        * `IQD` - IQD, Dinar
        * `IRR` - IRR, Rial
        * `ISK` - ISK, Krona
        * `JMD` - JMD, Dollar
        * `JOD` - JOD, Dinar
        * `JPY` - JPY, Yen
        * `KES` - KES, Shilling
        * `KGS` - KGS, Som
        * `KHR` - KHR, Riels
        * `KMF` - KMF, Franc
        * `KPW` - KPW, Won
        * `KRW` - KRW, Won
        * `KWD` - KWD, Dinar
        * `KYD` - KYD, Dollar
        * `KZT` - KZT, Tenge
        * `LAK` - LAK, Kip
        * `LBP` - LBP, Pound
        * `LKR` - LKR, Rupee
        * `LRD` - LRD, Dollar
        * `LSL` - LSL, Loti
        * `LTL` - LTL, Litas
        * `LVL` - LVL, Lat
        * `LYD` - LYD, Dinar
        * `MAD` - MAD, Dirham
        * `MDL` - MDL, Leu
        * `MGA` - MGA, Ariary
        * `MKD` - MKD, Denar
        * `MMK` - MMK, Kyat
        * `MNT` - MNT, Tugrik
        * `MOP` - MOP, Pataca
        * `MRO` - MRO, Ouguiya
        * `MUR` - MUR, Rupee
        * `MVR` - MVR, Rufiyaa
        * `MWK` - MWK, Kwacha
        * `MXN` - MXN, Peso
        * `MYR` - MYR, Ringgit
        * `MZN` - MZN, Metical
        * `NAD` - NAD, Dollar
        * `NGN` - NGN, Naira
        * `NIO` - NIO, Cordoba
        * `NOK` - NOK, Krone
        * `NPR` - NPR, Rupee
        * `NZD` - NZD, Dollar
        * `OMR` - OMR, Rial
        * `PAB` - PAB, Balboa
        * `PEN` - PEN, Sol
        * `PGK` - PGK, Kina
        * `PHP` - PHP, Peso
        * `PKR` - PKR, Rupee
        * `PLN` - PLN, Zloty
        * `PYG` - PYG, Guarani
        * `QAR` - QAR, Rial
        * `RON` - RON, Leu
        * `RSD` - RSD, Dinar
        * `RUB` - RUB, Ruble
        * `RWF` - RWF, Franc
        * `SAR` - SAR, Rial
        * `SBD` - SBD, Dollar
        * `SCR` - SCR, Rupee
        * `SDG` - SDG, Pound
        * `SEK` - SEK, Krona
        * `SGD` - SGD, Dollar
        * `SHP` - SHP, Pound
        * `SLL` - SLL, Leone
        * `SOS` - SOS, Shilling
        * `SRD` - SRD, Dollar
        * `SSP` - SSP, Pound
        * `STD` - STD, Dobra
        * `SYP` - SYP, Pound
        * `SZL` - SZL, Lilangeni
        * `THB` - THB, Baht
        * `TJS` - TJS, Somoni
        * `TMT` - TMT, Manat
        * `TND` - TND, Dinar
        * `TOP` - TOP, Paanga
        * `TRY` - TRY, Lira
        * `TTD` - TTD, Dollar
        * `TWD` - TWD, Dollar
        * `TZS` - TZS, Shilling
        * `UAH` - UAH, Hryvnia
        * `UGX` - UGX, Shilling
        * `USD` - $, Dollar
        * `UYU` - UYU, Peso
        * `UZS` - UZS, Som
        * `VEF` - VEF, Bolivar
        * `VND` - VND, Dong
        * `VUV` - VUV, Vatu
        * `WST` - WST, Tala
        * `XAF` - XAF, Franc
        * `XCD` - XCD, Dollar
        * `XOF` - XOF, Franc
        * `XPF` - XPF, Franc
        * `YER` - YER, Rial
        * `ZAR` - ZAR, Rand
        * `ZMK` - ZMK, Kwacha
        * `ZWL` - ZWL, Dollar
    DocumentCreateSwaggerRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        document_file:
          type: string
          format: binary
        teams:
          type: array
          items:
            type: string
            format: uuid
        shared_to:
          type: array
          items:
            type: string
            format: uuid
      required:
      - document_file
      - shared_to
      - teams
    DocumentEditSwaggerRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        document_file:
          type: string
          format: binary
        teams:
          type: array
          items:
            type: string
            format: uuid
        shared_to:
          type: array
          items:
            type: string
            format: uuid
        status:
          $ref: '#/components/schemas/DocumentEditSwaggerStatusEnum'
      required:
      - document_file
      - shared_to
      - teams
    DocumentEditSwaggerStatusEnum:
      enum:
      - active
      - inactive
      type: string
      description: |-
        * `active` - active
        * `inactive` - inactive
    EmailWrite:
      type: object
      properties:
        from_email:
          type: string
          format: email
          maxLength: 254
        recipients:
          type: array
          items:
            type: string
            format: uuid
        message_subject:
          type: string
          nullable: true
        scheduled_later:
          type: boolean
        timezone:
          type: string
          maxLength: 100
        scheduled_date_time:
          type: string
          format: date-time
          nullable: true
        message_body:
          type: string
          nullable: true
      required:
      - from_email
      - recipients
    EmailWriteRequest:
      type: object
      properties:
        from_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        recipients:
          type: array
          items:
            type: string
            format: uuid
        message_subject:
          type: string
          nullable: true
          minLength: 1
        scheduled_later:
          type: boolean
        timezone:
          type: string
          minLength: 1
          maxLength: 100
        scheduled_date_time:
          type: string
          format: date-time
          nullable: true
        message_body:
          type: string
          nullable: true
          minLength: 1
      required:
      - from_email
      - recipients
    EventCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    EventCreateSwaggerRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Event
          maxLength: 64
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        contacts:
          type: array
          items:
            type: string
            format: uuid
        start_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_date:
          type: string
          format: date
        end_time:
          type: string
          format: time
          nullable: true
        teams:
          type: array
          items:
            type: string
            format: uuid
        assigned_to:
          type: array
          items:
            type: string
            format: uuid
        description:
          type: string
          nullable: true
        recurring_days:
          type: string
          minLength: 1
      required:
      - event_type
      - name
      - recurring_days
      - teams
    EventDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        event_attachment:
          type: string
          format: binary
      required:
      - comment
      - event_attachment
    EventTypeEnum:
      enum:
      - Recurring
      - Non-Recurring
      type: string
      description: |-
        * `Recurring` - Recurring
        * `Non-Recurring` - Non-Recurring
    IndustryEnum:
      enum:
      - ADVERTISING
      - AGRICULTURE
      - APPAREL & ACCESSORIES
      - AUTOMOTIVE
      - BANKING
      - BIOTECHNOLOGY
      - BUILDING MATERIALS & EQUIPMENT
      - CHEMICAL
      - COMPUTER
      - EDUCATION
      - ELECTRONICS
      - ENERGY
      - ENTERTAINMENT & LEISURE
      - FINANCE
      - FOOD & BEVERAGE
      - GROCERY
      - HEALTHCARE
      - INSURANCE
      - LEGAL
      - MANUFACTURING
      - PUBLISHING
      - REAL ESTATE
      - SERVICE
      - SOFTWARE
      - SPORTS
      - TECHNOLOGY
      - TELECOMMUNICATIONS
      - TELEVISION
      - TRANSPORTATION
      - VENTURE CAPITAL
      type: string
      description: |-
        * `ADVERTISING` - ADVERTISING
        * `AGRICULTURE` - AGRICULTURE
        * `APPAREL & ACCESSORIES` - APPAREL & ACCESSORIES
        * `AUTOMOTIVE` - AUTOMOTIVE
        * `BANKING` - BANKING
        * `BIOTECHNOLOGY` - BIOTECHNOLOGY
        * `BUILDING MATERIALS & EQUIPMENT` - BUILDING MATERIALS & EQUIPMENT
        * `CHEMICAL` - CHEMICAL
        * `COMPUTER` - COMPUTER
        * `EDUCATION` - EDUCATION
        * `ELECTRONICS` - ELECTRONICS
        * `ENERGY` - ENERGY
        * `ENTERTAINMENT & LEISURE` - ENTERTAINMENT & LEISURE
        * `FINANCE` - FINANCE
        * `FOOD & BEVERAGE` - FOOD & BEVERAGE
        * `GROCERY` - GROCERY
        * `HEALTHCARE` - HEALTHCARE
        * `INSURANCE` - INSURANCE
        * `LEGAL` - LEGAL
        * `MANUFACTURING` - MANUFACTURING
        * `PUBLISHING` - PUBLISHING
        * `REAL ESTATE` - REAL ESTATE
        * `SERVICE` - SERVICE
        * `SOFTWARE` - SOFTWARE
        * `SPORTS` - SPORTS
        * `TECHNOLOGY` - TECHNOLOGY
        * `TELECOMMUNICATIONS` - TELECOMMUNICATIONS
        * `TELEVISION` - TELEVISION
        * `TRANSPORTATION` - TRANSPORTATION
        * `VENTURE CAPITAL` - VENTURE CAPITAL
    LeadCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    LeadCreateSwaggerRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 64
        first_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        last_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
        account_name:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 128
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        lead_attachment:
          type: array
          items:
            type: string
            format: uuid
        opportunity_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        website:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        teams:
          type: array
          items:
            type: string
            format: uuid
        assigned_to:
          type: array
          items:
            type: string
            format: uuid
        contacts:
          type: array
          items:
            type: string
            format: uuid
        status:
          nullable: true
          title: Status of Lead
          oneOf:
          - $ref: '#/components/schemas/LeadCreateSwaggerStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        source:
          nullable: true
          title: Source of Lead
          oneOf:
          - $ref: '#/components/schemas/SourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address_line:
          type: string
          nullable: true
          title: Address
          maxLength: 255
        street:
          type: string
          nullable: true
          maxLength: 55
        city:
          type: string
          nullable: true
          maxLength: 255
        state:
          type: string
          nullable: true
          maxLength: 255
        postcode:
          type: string
          nullable: true
          title: Post/Zip-code
          maxLength: 64
        country:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        tags:
          type: array
          items:
            type: string
            format: uuid
        company:
          type: string
          format: uuid
          nullable: true
        probability:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        industry:
          nullable: true
          title: Industry Type
          oneOf:
          - $ref: '#/components/schemas/IndustryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        skype_ID:
          type: string
          nullable: true
          maxLength: 100
      required:
      - assigned_to
      - contacts
      - lead_attachment
      - teams
      - title
    LeadCreateSwaggerStatusEnum:
      enum:
      - assigned
      - in process
      - converted
      - recycled
      - closed
      type: string
      description: |-
        * `assigned` - Assigned
        * `in process` - In Process
        * `converted` - Converted
        * `recycled` - Recycled
        * `closed` - Closed
    LeadDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        lead_attachment:
          type: string
          format: binary
      required:
      - comment
      - lead_attachment
    LeadSourceEnum:
      enum:
      - NONE
      - CALL
      - EMAIL
      - EXISTING CUSTOMER
      - PARTNER
      - PUBLIC RELATIONS
      - CAMPAIGN
      - WEBSITE
      - OTHER
      type: string
      description: |-
        * `NONE` - NONE
        * `CALL` - CALL
        * `EMAIL` -  EMAIL
        * `EXISTING CUSTOMER` - EXISTING CUSTOMER
        * `PARTNER` - PARTNER
        * `PUBLIC RELATIONS` - PUBLIC RELATIONS
        * `CAMPAIGN` - CAMPAIGN
        * `WEBSITE` - WEBSITE
        * `OTHER` - OTHER
    LeadUploadSwaggerRequest:
      type: object
      properties:
        leads_file:
          type: string
          format: binary
      required:
      - leads_file
    NullEnum:
      enum:
      - null
    OpportunityCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    OpportunityCreateSwaggerRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        account:
          type: string
          format: uuid
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          title: Opportunity Amount
        currency:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        stage:
          $ref: '#/components/schemas/StageEnum'
        teams:
          type: array
          items:
            type: string
            format: uuid
        lead_source:
          nullable: true
          title: Source of Lead
          oneOf:
          - $ref: '#/components/schemas/LeadSourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        probability:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        description:
          type: string
          nullable: true
        assigned_to:
          type: array
          items:
            type: string
            format: uuid
        contacts:
          type: array
          items:
            type: string
            format: uuid
        due_date:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
            format: uuid
        opportunity_attachment:
          type: string
          format: binary
      required:
      - assigned_to
      - contacts
      - due_date
      - name
      - opportunity_attachment
      - stage
      - teams
    OpportunityDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        opportunity_attachment:
          type: string
          format: binary
      required:
      - comment
      - opportunity_attachment
    OrgProfileCreate:
      type: object
      description: It is for creating organization
      properties:
        name:
          type: string
          maxLength: 255
      required:
      - name
    OrgProfileCreateRequest:
      type: object
      description: It is for creating organization
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
    RoleEnum:
      enum:
      - ADMIN
      - USER
      type: string
      description: |-
        * `ADMIN` - ADMIN
        * `USER` - USER
    SocialLoginRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 1
      required:
      - token
    SourceEnum:
      enum:
      - call
      - email
      - existing customer
      - partner
      - public relations
      - compaign
      - other
      type: string
      description: |-
        * `call` - Call
        * `email` - Email
        * `existing customer` - Existing Customer
        * `partner` - Partner
        * `public relations` - Public Relations
        * `compaign` - Campaign
        * `other` - Other
    StageEnum:
      enum:
      - QUALIFICATION
      - NEEDS ANALYSIS
      - VALUE PROPOSITION
      - ID.DECISION MAKERS
      - PERCEPTION ANALYSIS
      - PROPOSAL/PRICE QUOTE
      - NEGOTIATION/REVIEW
      - CLOSED WON
      - CLOSED LOST
      type: string
      description: |-
        * `QUALIFICATION` - QUALIFICATION
        * `NEEDS ANALYSIS` - NEEDS ANALYSIS
        * `VALUE PROPOSITION` - VALUE PROPOSITION
        * `ID.DECISION MAKERS` - ID.DECISION MAKERS
        * `PERCEPTION ANALYSIS` - PERCEPTION ANALYSIS
        * `PROPOSAL/PRICE QUOTE` - PROPOSAL/PRICE QUOTE
        * `NEGOTIATION/REVIEW` - NEGOTIATION/REVIEW
        * `CLOSED WON` - CLOSED WON
        * `CLOSED LOST` - CLOSED LOST
    TaskCommentEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
      required:
      - comment
    TaskCreateSwaggerPriorityEnum:
      enum:
      - Low
      - Medium
      - High
      type: string
      description: |-
        * `Low` - Low
        * `Medium` - Medium
        * `High` - High
    TaskCreateSwaggerRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        status:
          $ref: '#/components/schemas/TaskCreateSwaggerStatusEnum'
        priority:
          $ref: '#/components/schemas/TaskCreateSwaggerPriorityEnum'
        due_date:
          type: string
          format: date
          nullable: true
        account:
          type: string
          format: uuid
          nullable: true
        contacts:
          type: array
          items:
            type: string
            format: uuid
        teams:
          type: array
          items:
            type: string
            format: uuid
        assigned_to:
          type: array
          items:
            type: string
            format: uuid
      required:
      - assigned_to
      - contacts
      - priority
      - status
      - teams
      - title
    TaskCreateSwaggerStatusEnum:
      enum:
      - New
      - In Progress
      - Completed
      type: string
      description: |-
        * `New` - New
        * `In Progress` - In Progress
        * `Completed` - Completed
    TaskDetailEditSwaggerRequest:
      type: object
      properties:
        comment:
          type: string
          minLength: 1
        task_attachment:
          type: string
          format: binary
      required:
      - comment
      - task_attachment
    TeamswaggerCreateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        users:
          type: array
          items:
            type: string
            format: uuid
      required:
      - description
      - name
      - users
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    UserCreateSwaggerRequest:
      type: object
      description: It is swagger for creating or updating user
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 1000
        role:
          $ref: '#/components/schemas/RoleEnum'
        phone:
          type: string
          minLength: 1
          maxLength: 12
        alternate_phone:
          type: string
          minLength: 1
          maxLength: 12
        address_line:
          type: string
          minLength: 1
          maxLength: 10000
        street:
          type: string
          minLength: 1
          maxLength: 1000
        city:
          type: string
          minLength: 1
          maxLength: 1000
        state:
          type: string
          minLength: 1
          maxLength: 1000
        pincode:
          type: string
          minLength: 1
          maxLength: 1000
        country:
          type: string
          minLength: 1
          maxLength: 1000
      required:
      - address_line
      - alternate_phone
      - city
      - country
      - email
      - phone
      - pincode
      - role
      - state
      - street
    UserUpdateStatusSwaggerRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/UserUpdateStatusSwaggerStatusEnum'
      required:
      - status
    UserUpdateStatusSwaggerStatusEnum:
      enum:
      - Active
      - Inactive
      type: string
      description: |-
        * `Active` - Active
        * `Inactive` - Inactive
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
