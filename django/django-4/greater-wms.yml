openapi: 3.0.3
info:
  title: GreaterWMS
  version: 2.1.48
  description: GreaterWMS API Documents
paths:
  /asn/detail/:
    get:
      operationId: asn_detail_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - asn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedASNDetailGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedASNDetailGetList'
          description: ''
    post:
      operationId: asn_detail_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNDetailPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNDetailPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNDetailPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNDetailPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNDetailPost'
          description: ''
    put:
      operationId: asn_detail_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNDetailUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNDetailUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNDetailUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNDetailUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNDetailUpdate'
          description: ''
  /asn/detail/{id}/:
    get:
      operationId: asn_detail_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNDetailGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNDetailGet'
          description: ''
  /asn/filedetail/:
    get:
      operationId: asn_filedetail_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - asn
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASNFileDetailRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASNFileDetailRender'
          description: ''
  /asn/filelist/:
    get:
      operationId: asn_filelist_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - asn
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASNFileListRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASNFileListRender'
          description: ''
  /asn/list/:
    get:
      operationId: asn_list_list
      description: |-
        retrieve:
            Response a data list（get）
        list:
            Response a data list（all）
        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - asn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedASNListGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedASNListGetList'
          description: ''
    post:
      operationId: asn_list_create
      description: |-
        retrieve:
            Response a data list（get）
        list:
            Response a data list（all）
        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNListPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNListPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNListPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNListPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNListPost'
          description: ''
  /asn/list/{id}/:
    get:
      operationId: asn_list_retrieve
      description: |-
        retrieve:
            Response a data list（get）
        list:
            Response a data list（all）
        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNListGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNListGet'
          description: ''
    put:
      operationId: asn_list_update
      description: |-
        retrieve:
            Response a data list（get）
        list:
            Response a data list（all）
        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNListUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNListUpdate'
          description: ''
    patch:
      operationId: asn_list_partial_update
      description: |-
        retrieve:
            Response a data list（get）
        list:
            Response a data list（all）
        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedASNListPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedASNListPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedASNListPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNListPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNListPartialUpdate'
          description: ''
    delete:
      operationId: asn_list_destroy
      description: |-
        retrieve:
            Response a data list（get）
        list:
            Response a data list（all）
        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      responses:
        '204':
          description: No response body
  /asn/movetobin/:
    put:
      operationId: asn_movetobin_update
      description: |-
        create:
            Create a data line（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsnMoveToBin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AsnMoveToBin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AsnMoveToBin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsnMoveToBin'
            text/csv:
              schema:
                $ref: '#/components/schemas/AsnMoveToBin'
          description: ''
  /asn/movetobin/{id}/:
    post:
      operationId: asn_movetobin_create
      description: |-
        create:
            Create a data line（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsnMoveToBin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AsnMoveToBin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AsnMoveToBin'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsnMoveToBin'
            text/csv:
              schema:
                $ref: '#/components/schemas/AsnMoveToBin'
          description: ''
  /asn/preload/{id}/:
    post:
      operationId: asn_preload_create
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNListPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNListPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNListPartialUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNListPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNListPartialUpdate'
          description: ''
  /asn/presort/{id}/:
    post:
      operationId: asn_presort_create
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNListUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNListUpdate'
          description: ''
  /asn/sorted/:
    put:
      operationId: asn_sorted_update
      description: |-
        create:
            Finish Sorted

        update:
            All Sorted
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNSortedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNSortedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNSortedPost'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNSortedPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNSortedPost'
          description: ''
  /asn/sorted/{id}/:
    post:
      operationId: asn_sorted_create
      description: |-
        create:
            Finish Sorted

        update:
            All Sorted
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASNSortedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ASNSortedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ASNSortedPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNSortedPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNSortedPost'
          description: ''
  /asn/viewprint/{id}/:
    get:
      operationId: asn_viewprint_retrieve
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - asn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASNDetailGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/ASNDetailGet'
          description: ''
  /binproperty/:
    get:
      operationId: binproperty_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: bin_property
        schema:
          type: string
      - in: query
        name: bin_property__contains
        schema:
          type: string
      - in: query
        name: bin_property__icontains
        schema:
          type: string
      - in: query
        name: bin_property__iexact
        schema:
          type: string
      - in: query
        name: create_time__day
        schema:
          type: number
      - in: query
        name: create_time__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__month
        schema:
          type: number
      - in: query
        name: create_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: create_time__week_day
        schema:
          type: number
      - in: query
        name: create_time__year
        schema:
          type: number
      - in: query
        name: creater
        schema:
          type: string
      - in: query
        name: creater__contains
        schema:
          type: string
      - in: query
        name: creater__icontains
        schema:
          type: string
      - in: query
        name: creater__iexact
        schema:
          type: string
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: id__gte
        schema:
          type: integer
      - in: query
        name: id__iexact
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: id__isnull
        schema:
          type: boolean
      - in: query
        name: id__lt
        schema:
          type: integer
      - in: query
        name: id__lte
        schema:
          type: integer
      - in: query
        name: id__range
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: is_delete
        schema:
          type: boolean
      - in: query
        name: is_delete__iexact
        schema:
          type: boolean
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: update_time__day
        schema:
          type: number
      - in: query
        name: update_time__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__month
        schema:
          type: number
      - in: query
        name: update_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: update_time__week_day
        schema:
          type: number
      - in: query
        name: update_time__year
        schema:
          type: number
      tags:
      - binproperty
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBinpropertyGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedBinpropertyGetList'
          description: ''
  /binset/:
    get:
      operationId: binset_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - binset
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBinsetGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedBinsetGetList'
          description: ''
    post:
      operationId: binset_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - binset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BinsetPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BinsetPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BinsetPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsetPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsetPost'
          description: ''
  /binset/{id}/:
    get:
      operationId: binset_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binset
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsetGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsetGet'
          description: ''
    put:
      operationId: binset_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BinsetUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BinsetUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BinsetUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsetUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsetUpdate'
          description: ''
    patch:
      operationId: binset_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBinsetPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBinsetPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBinsetPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsetPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsetPartialUpdate'
          description: ''
    delete:
      operationId: binset_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binset
      responses:
        '204':
          description: No response body
  /binset/file/:
    get:
      operationId: binset_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - binset
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinSetFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinSetFileRender'
          description: ''
  /binset/scannerbintag/{bar_code}/:
    get:
      operationId: binset_scannerbintag_retrieve
      description: |-
        retrieve:
            Response a data list（get）

            http://127.0.0.1:8008/binset/scannerbintag/3d89ad23d185d5f206d860745c5c4121/
      parameters:
      - in: path
        name: bar_code
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - binset
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScannerBinsetTagGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/ScannerBinsetTagGet'
          description: ''
  /binsize/:
    get:
      operationId: binsize_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - binsize
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBinsizeGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedBinsizeGetList'
          description: ''
    post:
      operationId: binsize_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - binsize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BinsizePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BinsizePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BinsizePost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsizePost'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsizePost'
          description: ''
  /binsize/{id}/:
    get:
      operationId: binsize_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binsize
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsizeGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsizeGet'
          description: ''
    put:
      operationId: binsize_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binsize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BinsizeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BinsizeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BinsizeUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsizeUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsizeUpdate'
          description: ''
    patch:
      operationId: binsize_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binsize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBinsizePartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBinsizePartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBinsizePartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinsizePartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/BinsizePartialUpdate'
          description: ''
    delete:
      operationId: binsize_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - binsize
      responses:
        '204':
          description: No response body
  /binsize/file/:
    get:
      operationId: binsize_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - binsize
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinSizeFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinSizeFileRender'
          description: ''
  /capital/:
    get:
      operationId: capital_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - capital
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCapitalGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedCapitalGetList'
          description: ''
    post:
      operationId: capital_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - capital
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapitalPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CapitalPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CapitalPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/CapitalPost'
          description: ''
  /capital/{id}/:
    get:
      operationId: capital_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - capital
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/CapitalGet'
          description: ''
    put:
      operationId: capital_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - capital
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapitalUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CapitalUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CapitalUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CapitalUpdate'
          description: ''
    patch:
      operationId: capital_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - capital
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCapitalPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCapitalPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCapitalPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CapitalPartialUpdate'
          description: ''
    delete:
      operationId: capital_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - capital
      responses:
        '204':
          description: No response body
  /capital/file/:
    get:
      operationId: capital_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - capital
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CapitalFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CapitalFileRender'
          description: ''
  /company/:
    get:
      operationId: company_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyGetList'
          description: ''
    post:
      operationId: company_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/CompanyPost'
          description: ''
  /company/{id}/:
    get:
      operationId: company_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - company
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/CompanyGet'
          description: ''
    put:
      operationId: company_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CompanyUpdate'
          description: ''
    patch:
      operationId: company_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CompanyPartialUpdate'
          description: ''
    delete:
      operationId: company_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - company
      responses:
        '204':
          description: No response body
  /customer/:
    get:
      operationId: customer_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - customer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerGetList'
          description: ''
    post:
      operationId: customer_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerPost'
          description: ''
  /customer/{id}/:
    get:
      operationId: customer_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - customer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerGet'
          description: ''
    put:
      operationId: customer_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerUpdate'
          description: ''
    patch:
      operationId: customer_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerPartialUpdate'
          description: ''
    delete:
      operationId: customer_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - customer
      responses:
        '204':
          description: No response body
  /customer/file/:
    get:
      operationId: customer_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - customer
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomereFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomereFileRender'
          description: ''
  /cyclecount/:
    get:
      operationId: cyclecount_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - cyclecount
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclecountGet'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclecountGet'
          description: ''
    post:
      operationId: cyclecount_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - cyclecount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyclecountPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CyclecountPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CyclecountPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclecountPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/CyclecountPost'
          description: ''
    put:
      operationId: cyclecount_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - cyclecount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyclecountUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CyclecountUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CyclecountUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclecountUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/CyclecountUpdate'
          description: ''
  /cyclecount/cyclecountrecorder/:
    get:
      operationId: cyclecount_cyclecountrecorder_list
      description: |-
        list:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - cyclecount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCyclecountGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedCyclecountGetList'
          description: ''
  /cyclecount/filecyclecountall/:
    get:
      operationId: cyclecount_filecyclecountall_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - cyclecount
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclecountFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclecountFileRender'
          description: ''
  /cyclecount/filecyclecountday/:
    get:
      operationId: cyclecount_filecyclecountday_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - cyclecount
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclecountFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CyclecountFileRender'
          description: ''
  /cyclecount/getgoodscyclecount/:
    get:
      operationId: cyclecount_getgoodscyclecount_list
      description: |-
        list:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - cyclecount
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockBinGet'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockBinGet'
          description: ''
  /cyclecount/manualcyclecount/:
    get:
      operationId: cyclecount_manualcyclecount_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - cyclecount
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManualCyclecountGet'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManualCyclecountGet'
          description: ''
    post:
      operationId: cyclecount_manualcyclecount_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - cyclecount
      responses:
        '201':
          description: No response body
  /cyclecount/manualcyclecountrecorder/:
    get:
      operationId: cyclecount_manualcyclecountrecorder_list
      description: |-
        list:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - cyclecount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedManualCyclecountGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedManualCyclecountGetList'
          description: ''
  /cyclecount/manualfilecyclecount/:
    get:
      operationId: cyclecount_manualfilecyclecount_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - cyclecount
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManualFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManualFileRender'
          description: ''
  /cyclecount/qtyrecorviewset/:
    get:
      operationId: cyclecount_qtyrecorviewset_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - cyclecount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQTYRecorderList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedQTYRecorderList'
          description: ''
  /dashboard/receipts/:
    get:
      operationId: dashboard_receipts_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - dashboard
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASNDetailGet'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ASNDetailGet'
          description: ''
  /dashboard/sales/:
    get:
      operationId: dashboard_sales_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - dashboard
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNDetailGet'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNDetailGet'
          description: ''
  /dn/detail/:
    get:
      operationId: dn_detail_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDNDetailGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedDNDetailGetList'
          description: ''
    post:
      operationId: dn_detail_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNDetailPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNDetailPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNDetailPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNDetailPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNDetailPost'
          description: ''
    put:
      operationId: dn_detail_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNDetailUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNDetailUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNDetailUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNDetailUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNDetailUpdate'
          description: ''
  /dn/detail/{id}/:
    get:
      operationId: dn_detail_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNDetailGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNDetailGet'
          description: ''
    delete:
      operationId: dn_detail_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      responses:
        '204':
          description: No response body
  /dn/dispatch/{id}/:
    post:
      operationId: dn_dispatch_create
      description: |-
        create:
            Confirm Dispatch
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
  /dn/filedetail/:
    get:
      operationId: dn_filedetail_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - dn
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNFileDetailRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNFileDetailRender'
          description: ''
  /dn/filelist/:
    get:
      operationId: dn_filelist_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - dn
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNFileListRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNFileListRender'
          description: ''
  /dn/list/:
    get:
      operationId: dn_list_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDNListGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedDNListGetList'
          description: ''
    post:
      operationId: dn_list_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListPost'
          description: ''
  /dn/list/{id}/:
    get:
      operationId: dn_list_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListGet'
          description: ''
    put:
      operationId: dn_list_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
    patch:
      operationId: dn_list_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDNListPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDNListPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDNListPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListPartialUpdate'
          description: ''
    delete:
      operationId: dn_list_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      responses:
        '204':
          description: No response body
  /dn/neworder/{id}/:
    post:
      operationId: dn_neworder_create
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListPartialUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListPartialUpdate'
          description: ''
  /dn/orderrelease/:
    post:
      operationId: dn_orderrelease_create
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
  /dn/orderrelease/{id}/:
    put:
      operationId: dn_orderrelease_update
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
  /dn/picked/:
    put:
      operationId: dn_picked_update
      description: |-
        create:
            Finish Picked
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
  /dn/picked/{id}/:
    post:
      operationId: dn_picked_create
      description: |-
        create:
            Finish Picked
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
    put:
      operationId: dn_picked_update_2
      description: |-
        create:
            Finish Picked
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
  /dn/pickinglist/{id}/:
    get:
      operationId: dn_pickinglist_retrieve
      description: |-
        retrieve:
            Picklist for pk
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListGet'
          description: ''
  /dn/pickinglistfilter/:
    get:
      operationId: dn_pickinglistfilter_list
      description: |-
        list:
            Picklist for Filter
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDNPickingCheckGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedDNPickingCheckGetList'
          description: ''
  /dn/pod/{id}/:
    post:
      operationId: dn_pod_create
      description: |-
        create:
            Confirm Dispatch
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DNListUpdate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNListUpdate'
          description: ''
  /dn/viewprint/{id}/:
    get:
      operationId: dn_viewprint_retrieve
      description: |-
        retrieve:
            Response a data list（get）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - dn
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNDetailGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/DNDetailGet'
          description: ''
  /driver/:
    get:
      operationId: driver_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - driver
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDriverGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedDriverGetList'
          description: ''
    post:
      operationId: driver_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - driver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/DriverPost'
          description: ''
  /driver/{id}/:
    get:
      operationId: driver_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - driver
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/DriverGet'
          description: ''
    put:
      operationId: driver_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - driver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DriverUpdate'
          description: ''
    patch:
      operationId: driver_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - driver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDriverPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDriverPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDriverPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/DriverPartialUpdate'
          description: ''
    delete:
      operationId: driver_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - driver
      responses:
        '204':
          description: No response body
  /driver/dispatchlist/:
    get:
      operationId: driver_dispatchlist_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - driver
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDispatchListGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedDispatchListGetList'
          description: ''
  /driver/dispatchlist/{id}/:
    get:
      operationId: driver_dispatchlist_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - driver
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchListGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/DispatchListGet'
          description: ''
  /driver/file/:
    get:
      operationId: driver_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - driver
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverFileRender'
          description: ''
  /goods/:
    get:
      operationId: goods_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goods
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsGetList'
          description: ''
    post:
      operationId: goods_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsPost'
          description: ''
  /goods/{id}/:
    get:
      operationId: goods_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goods
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsGet'
          description: ''
    put:
      operationId: goods_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsUpdate'
          description: ''
    patch:
      operationId: goods_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsPartialUpdate'
          description: ''
    delete:
      operationId: goods_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goods
      responses:
        '204':
          description: No response body
  /goods/file/:
    get:
      operationId: goods_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - goods
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GOODSFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GOODSFileRender'
          description: ''
  /goods/goodstag/{bar_code}/:
    get:
      operationId: goods_goodstag_retrieve
      description: |-
        retrieve:
            Response a data retrieve（get）
      parameters:
      - in: path
        name: bar_code
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goods
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsGet'
          description: ''
  /goodsbrand/:
    get:
      operationId: goodsbrand_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodsbrand
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsbrandGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsbrandGetList'
          description: ''
    post:
      operationId: goodsbrand_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodsbrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsbrandPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsbrandPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsbrandPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsbrandPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsbrandPost'
          description: ''
  /goodsbrand/{id}/:
    get:
      operationId: goodsbrand_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsbrand
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsbrandGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsbrandGet'
          description: ''
    put:
      operationId: goodsbrand_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsbrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsbrandUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsbrandUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsbrandUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsbrandUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsbrandUpdate'
          description: ''
    patch:
      operationId: goodsbrand_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsbrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsbrandPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsbrandPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsbrandPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsbrandPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsbrandPartialUpdate'
          description: ''
    delete:
      operationId: goodsbrand_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsbrand
      responses:
        '204':
          description: No response body
  /goodsclass/:
    get:
      operationId: goodsclass_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodsclass
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsclassGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsclassGetList'
          description: ''
    post:
      operationId: goodsclass_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodsclass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsclassPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsclassPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsclassPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsclassPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsclassPost'
          description: ''
  /goodsclass/{id}/:
    get:
      operationId: goodsclass_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsclass
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsclassGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsclassGet'
          description: ''
    put:
      operationId: goodsclass_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsclass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsclassUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsclassUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsclassUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsclassUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsclassUpdate'
          description: ''
    patch:
      operationId: goodsclass_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsclass
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsclassPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsclassPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsclassPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsclassPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsclassPartialUpdate'
          description: ''
    delete:
      operationId: goodsclass_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsclass
      responses:
        '204':
          description: No response body
  /goodscolor/:
    get:
      operationId: goodscolor_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodscolor
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodscolorGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodscolorGetList'
          description: ''
    post:
      operationId: goodscolor_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodscolor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodscolorPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodscolorPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodscolorPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodscolorPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodscolorPost'
          description: ''
  /goodscolor/{id}/:
    get:
      operationId: goodscolor_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodscolor
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodscolorGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodscolorGet'
          description: ''
    put:
      operationId: goodscolor_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodscolor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodscolorUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodscolorUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodscolorUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodscolorUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodscolorUpdate'
          description: ''
    patch:
      operationId: goodscolor_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodscolor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodscolorPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodscolorPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodscolorPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodscolorPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodscolorPartialUpdate'
          description: ''
    delete:
      operationId: goodscolor_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodscolor
      responses:
        '204':
          description: No response body
  /goodsorigin/:
    get:
      operationId: goodsorigin_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodsorigin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsoriginGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsoriginGetList'
          description: ''
    post:
      operationId: goodsorigin_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodsorigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsoriginPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsoriginPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsoriginPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsoriginPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsoriginPost'
          description: ''
  /goodsorigin/{id}/:
    get:
      operationId: goodsorigin_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsorigin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsoriginGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsoriginGet'
          description: ''
    put:
      operationId: goodsorigin_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsorigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsoriginUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsoriginUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsoriginUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsoriginUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsoriginUpdate'
          description: ''
    patch:
      operationId: goodsorigin_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsorigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsoriginPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsoriginPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsoriginPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsoriginPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsoriginPartialUpdate'
          description: ''
    delete:
      operationId: goodsorigin_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsorigin
      responses:
        '204':
          description: No response body
  /goodsshape/:
    get:
      operationId: goodsshape_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodsshape
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsshapeGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsshapeGetList'
          description: ''
    post:
      operationId: goodsshape_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodsshape
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsshapePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsshapePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsshapePost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsshapePost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsshapePost'
          description: ''
  /goodsshape/{id}/:
    get:
      operationId: goodsshape_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsshape
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsshapeGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsshapeGet'
          description: ''
    put:
      operationId: goodsshape_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsshape
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsshapeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsshapeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsshapeUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsshapeUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsshapeUpdate'
          description: ''
    patch:
      operationId: goodsshape_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsshape
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsshapePartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsshapePartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsshapePartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsshapePartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsshapePartialUpdate'
          description: ''
    delete:
      operationId: goodsshape_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsshape
      responses:
        '204':
          description: No response body
  /goodsspecs/:
    get:
      operationId: goodsspecs_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodsspecs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsspecsGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsspecsGetList'
          description: ''
    post:
      operationId: goodsspecs_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodsspecs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsspecsPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsspecsPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsspecsPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsspecsPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsspecsPost'
          description: ''
  /goodsspecs/{id}/:
    get:
      operationId: goodsspecs_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsspecs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsspecsGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsspecsGet'
          description: ''
    put:
      operationId: goodsspecs_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsspecs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsspecsUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsspecsUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsspecsUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsspecsUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsspecsUpdate'
          description: ''
    patch:
      operationId: goodsspecs_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsspecs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsspecsPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsspecsPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsspecsPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsspecsPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsspecsPartialUpdate'
          description: ''
    delete:
      operationId: goodsspecs_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsspecs
      responses:
        '204':
          description: No response body
  /goodsunit/:
    get:
      operationId: goodsunit_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - goodsunit
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsunitGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedGoodsunitGetList'
          description: ''
    post:
      operationId: goodsunit_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - goodsunit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsunitPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsunitPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsunitPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsunitPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsunitPost'
          description: ''
  /goodsunit/{id}/:
    get:
      operationId: goodsunit_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsunit
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsunitGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsunitGet'
          description: ''
    put:
      operationId: goodsunit_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsunit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsunitUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoodsunitUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoodsunitUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsunitUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsunitUpdate'
          description: ''
    patch:
      operationId: goodsunit_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsunit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoodsunitPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoodsunitPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoodsunitPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsunitPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/GoodsunitPartialUpdate'
          description: ''
    delete:
      operationId: goodsunit_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - goodsunit
      responses:
        '204':
          description: No response body
  /payment/freight/:
    get:
      operationId: payment_freight_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payment
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFreightGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedFreightGetList'
          description: ''
    post:
      operationId: payment_freight_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreightPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreightPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreightPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreightPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/FreightPost'
          description: ''
  /payment/freight/{id}/:
    get:
      operationId: payment_freight_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - payment
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreightGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/FreightGet'
          description: ''
    put:
      operationId: payment_freight_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreightUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreightUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreightUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreightUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/FreightUpdate'
          description: ''
    patch:
      operationId: payment_freight_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFreightPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFreightPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFreightPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreightPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/FreightPartialUpdate'
          description: ''
    delete:
      operationId: payment_freight_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - payment
      responses:
        '204':
          description: No response body
  /payment/freightfile/:
    get:
      operationId: payment_freightfile_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - payment
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreightfileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreightfileRender'
          description: ''
  /scanner/:
    get:
      operationId: scanner_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - scanner
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedListGetList'
          description: ''
  /scanner/list/{bar_code}/:
    get:
      operationId: scanner_list_retrieve
      description: |-
        Retrieve:
            Response a data retrieve
      parameters:
      - in: path
        name: bar_code
        schema:
          type: string
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - scanner
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/ListGet'
          description: ''
  /scanner/sanerpicking/:
    get:
      operationId: scanner_sanerpicking_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - scanner
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSannerDnDetailPickingListGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedSannerDnDetailPickingListGetList'
          description: ''
  /staff/:
    get:
      operationId: staff_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - staff
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedStaffGetList'
          description: ''
    post:
      operationId: staff_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/StaffPost'
          description: ''
  /staff/{id}/:
    get:
      operationId: staff_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - staff
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/StaffGet'
          description: ''
    put:
      operationId: staff_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/StaffUpdate'
          description: ''
    patch:
      operationId: staff_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/StaffPartialUpdate'
          description: ''
    delete:
      operationId: staff_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - staff
      responses:
        '204':
          description: No response body
  /staff/file/:
    get:
      operationId: staff_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - staff
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffFileRender'
          description: ''
  /staff/type/:
    get:
      operationId: staff_type_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: create_time__day
        schema:
          type: number
      - in: query
        name: create_time__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__month
        schema:
          type: number
      - in: query
        name: create_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: create_time__week_day
        schema:
          type: number
      - in: query
        name: create_time__year
        schema:
          type: number
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: id__gte
        schema:
          type: integer
      - in: query
        name: id__iexact
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: id__isnull
        schema:
          type: boolean
      - in: query
        name: id__lt
        schema:
          type: integer
      - in: query
        name: id__lte
        schema:
          type: integer
      - in: query
        name: id__range
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: staff_type
        schema:
          type: string
      - in: query
        name: staff_type__contains
        schema:
          type: string
      - in: query
        name: staff_type__icontains
        schema:
          type: string
      - in: query
        name: staff_type__iexact
        schema:
          type: string
      - in: query
        name: update_time__day
        schema:
          type: number
      - in: query
        name: update_time__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__month
        schema:
          type: number
      - in: query
        name: update_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: update_time__week_day
        schema:
          type: number
      - in: query
        name: update_time__year
        schema:
          type: number
      tags:
      - staff
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffTypeGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedStaffTypeGetList'
          description: ''
  /stock/bin/:
    get:
      operationId: stock_bin_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - stock
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockBinGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedStockBinGetList'
          description: ''
    put:
      operationId: stock_bin_update
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - stock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockBinPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockBinPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockBinPost'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockBinPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/StockBinPost'
          description: ''
  /stock/bin/{id}/:
    get:
      operationId: stock_bin_retrieve
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - stock
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockBinGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/StockBinGet'
          description: ''
    post:
      operationId: stock_bin_create
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - stock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockBinPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockBinPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockBinPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockBinPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/StockBinPost'
          description: ''
  /stock/filebinlist/:
    get:
      operationId: stock_filebinlist_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - stock
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockFileBinListRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockFileBinListRender'
          description: ''
  /stock/filelist/:
    get:
      operationId: stock_filelist_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - stock
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockFileListRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockFileListRender'
          description: ''
  /stock/list/:
    get:
      operationId: stock_list_list
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - stock
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockListGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedStockListGetList'
          description: ''
  /stock/list/{id}/:
    get:
      operationId: stock_list_retrieve
      description: |-
        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - stock
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockListGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/StockListGet'
          description: ''
  /supplier/:
    get:
      operationId: supplier_list
      description: |-
        retrieve:
            Response a data （get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - supplier
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierGetList'
          description: ''
    post:
      operationId: supplier_create
      description: |-
        retrieve:
            Response a data （get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - supplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierPost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierPost'
            text/csv:
              schema:
                $ref: '#/components/schemas/SupplierPost'
          description: ''
  /supplier/{id}/:
    get:
      operationId: supplier_retrieve
      description: |-
        retrieve:
            Response a data （get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - supplier
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/SupplierGet'
          description: ''
    put:
      operationId: supplier_update
      description: |-
        retrieve:
            Response a data （get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - supplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/SupplierUpdate'
          description: ''
    patch:
      operationId: supplier_partial_update
      description: |-
        retrieve:
            Response a data （get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - supplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplierPartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplierPartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplierPartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierPartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/SupplierPartialUpdate'
          description: ''
    delete:
      operationId: supplier_destroy
      description: |-
        retrieve:
            Response a data （get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - supplier
      responses:
        '204':
          description: No response body
  /supplier/file/:
    get:
      operationId: supplier_file_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - supplier
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierFileRender'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierFileRender'
          description: ''
  /uploadfile/capitalfile/:
    post:
      operationId: uploadfile_capitalfile_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/capitalfileadd/:
    post:
      operationId: uploadfile_capitalfileadd_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/customerfile/:
    post:
      operationId: uploadfile_customerfile_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/customerfileadd/:
    post:
      operationId: uploadfile_customerfileadd_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/freightfile/:
    post:
      operationId: uploadfile_freightfile_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/freightfileadd/:
    post:
      operationId: uploadfile_freightfileadd_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/goodslistfile/:
    post:
      operationId: uploadfile_goodslistfile_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/goodslistfileadd/:
    post:
      operationId: uploadfile_goodslistfileadd_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/supplierfile/:
    post:
      operationId: uploadfile_supplierfile_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /uploadfile/supplierfileadd/:
    post:
      operationId: uploadfile_supplierfileadd_create
      description: |-
        create:
            Upload One Excel（post）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - uploadfile
      responses:
        '200':
          description: No response body
  /warehouse/:
    get:
      operationId: warehouse_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - warehouse
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWarehouseGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedWarehouseGetList'
          description: ''
    post:
      operationId: warehouse_create
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      tags:
      - warehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehousePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WarehousePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WarehousePost'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehousePost'
            text/csv:
              schema:
                $ref: '#/components/schemas/WarehousePost'
          description: ''
  /warehouse/{id}/:
    get:
      operationId: warehouse_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - warehouse
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/WarehouseGet'
          description: ''
    put:
      operationId: warehouse_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - warehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WarehouseUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WarehouseUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/WarehouseUpdate'
          description: ''
    patch:
      operationId: warehouse_partial_update
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - warehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWarehousePartialUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWarehousePartialUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWarehousePartialUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehousePartialUpdate'
            text/csv:
              schema:
                $ref: '#/components/schemas/WarehousePartialUpdate'
          description: ''
    delete:
      operationId: warehouse_destroy
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）

        create:
            Create a data line（post）

        delete:
            Delete a data line（delete)

        partial_update:
            Partial_update a data（patch：partial_update）

        update:
            Update a data（put：update）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - warehouse
      responses:
        '204':
          description: No response body
  /warehouse/multiple/:
    get:
      operationId: warehouse_multiple_list
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）
      parameters:
      - in: query
        name: create_time__day
        schema:
          type: number
      - in: query
        name: create_time__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: create_time__month
        schema:
          type: number
      - in: query
        name: create_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: create_time__week_day
        schema:
          type: number
      - in: query
        name: create_time__year
        schema:
          type: number
      - in: query
        name: creater
        schema:
          type: string
      - in: query
        name: creater__contains
        schema:
          type: string
      - in: query
        name: creater__icontains
        schema:
          type: string
      - in: query
        name: creater__iexact
        schema:
          type: string
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: id__gte
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: id__isnull
        schema:
          type: boolean
      - in: query
        name: id__lt
        schema:
          type: integer
      - in: query
        name: id__lte
        schema:
          type: integer
      - in: query
        name: id__range
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: is_delete
        schema:
          type: boolean
      - in: query
        name: is_delete__iexact
        schema:
          type: boolean
      - name: max_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: update_time__day
        schema:
          type: number
      - in: query
        name: update_time__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: update_time__month
        schema:
          type: number
      - in: query
        name: update_time__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: update_time__week_day
        schema:
          type: number
      - in: query
        name: update_time__year
        schema:
          type: number
      - in: query
        name: warehouse_address
        schema:
          type: string
      - in: query
        name: warehouse_address__contains
        schema:
          type: string
      - in: query
        name: warehouse_address__icontains
        schema:
          type: string
      - in: query
        name: warehouse_address__iexact
        schema:
          type: string
      - in: query
        name: warehouse_city
        schema:
          type: string
      - in: query
        name: warehouse_city__contains
        schema:
          type: string
      - in: query
        name: warehouse_city__icontains
        schema:
          type: string
      - in: query
        name: warehouse_city__iexact
        schema:
          type: string
      - in: query
        name: warehouse_contact
        schema:
          type: string
      - in: query
        name: warehouse_contact__gt
        schema:
          type: string
      - in: query
        name: warehouse_contact__gte
        schema:
          type: string
      - in: query
        name: warehouse_contact__iexact
        schema:
          type: string
      - in: query
        name: warehouse_contact__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: warehouse_contact__isnull
        schema:
          type: boolean
      - in: query
        name: warehouse_contact__lt
        schema:
          type: string
      - in: query
        name: warehouse_contact__lte
        schema:
          type: string
      - in: query
        name: warehouse_contact__range
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: warehouse_manager
        schema:
          type: string
      - in: query
        name: warehouse_manager__contains
        schema:
          type: string
      - in: query
        name: warehouse_manager__icontains
        schema:
          type: string
      - in: query
        name: warehouse_manager__iexact
        schema:
          type: string
      - in: query
        name: warehouse_name
        schema:
          type: string
      - in: query
        name: warehouse_name__contains
        schema:
          type: string
      - in: query
        name: warehouse_name__icontains
        schema:
          type: string
      - in: query
        name: warehouse_name__iexact
        schema:
          type: string
      tags:
      - warehouse
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWarehouseGetList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedWarehouseGetList'
          description: ''
  /warehouse/multiple/{id}/:
    get:
      operationId: warehouse_multiple_retrieve
      description: |-
        retrieve:
            Response a data list（get）

        list:
            Response a data list（all）
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - warehouse
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseGet'
            text/csv:
              schema:
                $ref: '#/components/schemas/WarehouseGet'
          description: ''
components:
  schemas:
    ASNDetailGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
          readOnly: true
        supplier:
          type: string
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        goods_actual_qty:
          type: integer
          readOnly: true
        sorted_qty:
          type: integer
          readOnly: true
        goods_shortage_qty:
          type: integer
          readOnly: true
        goods_more_qty:
          type: integer
          readOnly: true
        goods_damage_qty:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        asn_status:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
      required:
      - asn_code
      - create_time
      - creater
      - goods_actual_qty
      - goods_code
      - goods_damage_qty
      - goods_desc
      - goods_more_qty
      - goods_qty
      - goods_shortage_qty
      - id
      - sorted_qty
      - supplier
      - update_time
    ASNDetailPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        asn_code:
          type: string
        supplier:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        creater:
          type: string
        asn_status:
          type: integer
        goods_actual_qty:
          type: integer
        sorted_qty:
          type: integer
        goods_shortage_qty:
          type: integer
        goods_more_qty:
          type: integer
        goods_damage_qty:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - create_time
      - creater
      - goods_code
      - goods_qty
      - id
      - supplier
      - update_time
    ASNDetailUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
        supplier:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        creater:
          type: string
        asn_status:
          type: integer
        goods_actual_qty:
          type: integer
        sorted_qty:
          type: integer
        goods_shortage_qty:
          type: integer
        goods_more_qty:
          type: integer
        goods_damage_qty:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - create_time
      - creater
      - goods_code
      - goods_qty
      - id
      - supplier
      - update_time
    ASNFileDetailRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
        asn_status:
          type: integer
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        goods_actual_qty:
          type: integer
        sorted_qty:
          type: integer
        goods_shortage_qty:
          type: integer
        goods_more_qty:
          type: integer
        goods_damage_qty:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        supplier:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - id
      - update_time
    ASNFileListRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
        asn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        supplier:
          type: string
        creater:
          type: string
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        bar_code:
          type: string
          maxLength: 255
      required:
      - bar_code
      - create_time
      - id
      - update_time
    ASNListGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
          readOnly: true
        asn_status:
          type: integer
          readOnly: true
        supplier:
          type: string
          readOnly: true
        bar_code:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        transportation_fee:
          type: object
          additionalProperties: {}
      required:
      - asn_code
      - asn_status
      - bar_code
      - create_time
      - creater
      - id
      - supplier
      - update_time
    ASNListPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
        asn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        supplier:
          type: string
          title: ASN Supplier
          maxLength: 255
        creater:
          type: string
          title: Who Created
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
        openid:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - bar_code
      - create_time
      - creater
      - id
      - openid
      - supplier
      - update_time
    ASNListPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        asn_code:
          type: string
        supplier:
          type: string
        bar_code:
          type: string
        creater:
          type: string
        asn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - bar_code
      - create_time
      - creater
      - id
      - update_time
    ASNListUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
        asn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        supplier:
          type: string
          title: ASN Supplier
          maxLength: 255
        creater:
          type: string
          title: Who Created
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
        openid:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - bar_code
      - create_time
      - creater
      - id
      - openid
      - supplier
      - update_time
    ASNSortedPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        asn_code:
          type: string
        supplier:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        creater:
          type: string
        asn_status:
          type: integer
        goods_actual_qty:
          type: integer
        sorted_qty:
          type: integer
        goods_shortage_qty:
          type: integer
        goods_more_qty:
          type: integer
        goods_damage_qty:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - create_time
      - creater
      - goods_code
      - goods_qty
      - id
      - supplier
      - update_time
    AsnMoveToBin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
        qty:
          type: integer
        asn_code:
          type: string
          maxLength: 255
        asn_status:
          type: integer
        supplier:
          type: string
          title: ASN Supplier
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_desc:
          type: string
          title: Goods Description
          maxLength: 255
        goods_qty:
          type: integer
        goods_actual_qty:
          type: integer
        sorted_qty:
          type: integer
        goods_shortage_qty:
          type: integer
        goods_more_qty:
          type: integer
        goods_damage_qty:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        creater:
          type: string
          title: Who Created
          maxLength: 255
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - asn_code
      - bin_name
      - create_time
      - creater
      - goods_code
      - goods_desc
      - id
      - qty
      - supplier
      - update_time
    BinSetFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
        bin_size:
          type: string
        bin_property:
          type: string
        empty_label:
          type: boolean
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        bar_code:
          type: string
          maxLength: 255
      required:
      - bar_code
      - create_time
      - id
      - update_time
    BinSizeFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_size:
          type: string
        bin_size_w:
          type: number
          format: double
        bin_size_d:
          type: number
          format: double
        bin_size_h:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - id
      - update_time
    BinpropertyGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_property:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - bin_property
      - create_time
      - creater
      - id
      - update_time
    BinsetGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
          readOnly: true
        bin_size:
          type: string
          readOnly: true
        bin_property:
          type: string
          readOnly: true
        empty_label:
          type: boolean
          readOnly: true
        creater:
          type: string
          readOnly: true
        bar_code:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - bar_code
      - bin_name
      - bin_property
      - bin_size
      - create_time
      - creater
      - empty_label
      - id
      - update_time
    BinsetPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
        bin_size:
          type: string
        bin_property:
          type: string
        creater:
          type: string
        empty_label:
          type: boolean
        bar_code:
          type: string
          maxLength: 255
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bar_code
      - create_time
      - id
      - update_time
    BinsetPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        bin_name:
          type: string
        bin_size:
          type: string
        bin_property:
          type: string
        bar_code:
          type: string
        creater:
          type: string
        empty_label:
          type: boolean
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bar_code
      - bin_name
      - bin_property
      - bin_size
      - create_time
      - creater
      - id
      - update_time
    BinsetUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
          readOnly: true
        bin_size:
          type: string
        bin_property:
          type: string
          readOnly: true
        creater:
          type: string
        bar_code:
          type: string
        empty_label:
          type: boolean
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bin_name
      - bin_property
      - bin_size
      - create_time
      - creater
      - id
      - update_time
    BinsizeGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_size:
          type: string
          readOnly: true
        bin_size_w:
          type: number
          format: double
          readOnly: true
        bin_size_d:
          type: number
          format: double
          readOnly: true
        bin_size_h:
          type: number
          format: double
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - bin_size
      - bin_size_d
      - bin_size_h
      - bin_size_w
      - create_time
      - creater
      - id
      - update_time
    BinsizePartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_size:
          type: string
        bin_size_w:
          type: number
          format: double
        bin_size_d:
          type: number
          format: double
        bin_size_h:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    BinsizePost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        bin_size:
          type: string
        bin_size_w:
          type: number
          format: double
        bin_size_d:
          type: number
          format: double
        bin_size_h:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bin_size
      - bin_size_d
      - bin_size_h
      - bin_size_w
      - create_time
      - creater
      - id
      - update_time
    BinsizeUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_size:
          type: string
        bin_size_w:
          type: number
          format: double
        bin_size_d:
          type: number
          format: double
        bin_size_h:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bin_size
      - bin_size_d
      - bin_size_h
      - bin_size_w
      - create_time
      - creater
      - id
      - update_time
    CapitalFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        capital_name:
          type: string
        capital_qty:
          type: integer
        capital_cost:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - id
      - update_time
    CapitalGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        capital_name:
          type: string
          readOnly: true
        capital_qty:
          type: integer
          readOnly: true
        capital_cost:
          type: number
          format: double
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - capital_cost
      - capital_name
      - capital_qty
      - create_time
      - creater
      - id
      - update_time
    CapitalPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        capital_name:
          type: string
        capital_qty:
          type: integer
        capital_cost:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - update_time
    CapitalPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        capital_name:
          type: string
        capital_qty:
          type: integer
        capital_cost:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - capital_cost
      - capital_name
      - capital_qty
      - create_time
      - creater
      - id
      - update_time
    CapitalUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        capital_name:
          type: string
        capital_qty:
          type: integer
        capital_cost:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - capital_cost
      - capital_name
      - capital_qty
      - create_time
      - creater
      - id
      - update_time
    CompanyGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          readOnly: true
        company_city:
          type: string
          readOnly: true
        company_address:
          type: string
          readOnly: true
        company_contact:
          type: string
          readOnly: true
        company_manager:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - company_address
      - company_city
      - company_contact
      - company_manager
      - company_name
      - create_time
      - creater
      - id
      - update_time
    CompanyPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
        company_city:
          type: string
        company_address:
          type: string
        company_contact:
          type: string
        company_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    CompanyPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        company_name:
          type: string
        company_city:
          type: string
        company_address:
          type: string
        company_contact:
          type: string
        company_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - company_address
      - company_city
      - company_contact
      - company_manager
      - company_name
      - create_time
      - creater
      - id
      - update_time
    CompanyUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
        company_city:
          type: string
        company_address:
          type: string
        company_contact:
          type: string
        company_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - company_address
      - company_city
      - company_contact
      - company_manager
      - company_name
      - create_time
      - creater
      - id
      - update_time
    CustomerGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_name:
          type: string
          readOnly: true
        customer_city:
          type: string
          readOnly: true
        customer_address:
          type: string
          readOnly: true
        customer_contact:
          type: string
          readOnly: true
        customer_manager:
          type: string
          readOnly: true
        customer_level:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - customer_address
      - customer_city
      - customer_contact
      - customer_level
      - customer_manager
      - customer_name
      - id
      - update_time
    CustomerPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_name:
          type: string
        customer_city:
          type: string
        customer_address:
          type: string
        customer_contact:
          type: string
        customer_manager:
          type: string
        customer_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    CustomerPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        customer_name:
          type: string
        customer_city:
          type: string
        customer_address:
          type: string
        customer_contact:
          type: string
        customer_manager:
          type: string
        customer_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - customer_address
      - customer_city
      - customer_contact
      - customer_level
      - customer_manager
      - customer_name
      - id
      - update_time
    CustomerUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_name:
          type: string
        customer_city:
          type: string
        customer_address:
          type: string
        customer_contact:
          type: string
        customer_manager:
          type: string
        customer_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - customer_address
      - customer_city
      - customer_contact
      - customer_level
      - customer_manager
      - customer_name
      - id
      - update_time
    CustomereFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_name:
          type: string
        customer_city:
          type: string
        customer_address:
          type: string
        customer_contact:
          type: string
        customer_manager:
          type: string
        customer_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - id
      - update_time
    CyclecountFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creater:
          type: string
        physical_inventory:
          type: string
          readOnly: true
        difference:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        cyclecount_status:
          type: integer
          title: Cycle Count Status
        bin_name:
          type: string
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_qty:
          type: integer
          title: On Hand Stock
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
      required:
      - bin_name
      - create_time
      - difference
      - goods_code
      - id
      - physical_inventory
      - t_code
      - update_time
    CyclecountGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        cyclecount_status:
          type: integer
          title: Cycle Count Status
        bin_name:
          type: string
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_qty:
          type: integer
          title: On Hand Stock
        physical_inventory:
          type: integer
          title: Goods Code
        difference:
          type: integer
          title: Goods Code
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
      required:
      - bin_name
      - create_time
      - creater
      - goods_code
      - id
      - t_code
      - update_time
    CyclecountPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        creater:
          type: string
        cyclecount_status:
          type: integer
          title: Cycle Count Status
        bin_name:
          type: string
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_qty:
          type: integer
          title: On Hand Stock
        physical_inventory:
          type: integer
          title: Goods Code
        difference:
          type: integer
          title: Goods Code
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bin_name
      - create_time
      - creater
      - goods_code
      - id
      - t_code
      - update_time
    CyclecountUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        creater:
          type: string
        cyclecount_status:
          type: integer
          title: Cycle Count Status
        bin_name:
          type: string
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_qty:
          type: integer
          title: On Hand Stock
        physical_inventory:
          type: integer
          title: Goods Code
        difference:
          type: integer
          title: Goods Code
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bin_name
      - create_time
      - creater
      - goods_code
      - id
      - t_code
      - update_time
    DNDetailGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
          readOnly: true
        dn_status:
          type: integer
          readOnly: true
        customer:
          type: string
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        pick_qty:
          type: integer
          readOnly: true
        picked_qty:
          type: integer
          readOnly: true
        intransit_qty:
          type: integer
          readOnly: true
        delivery_actual_qty:
          type: integer
          readOnly: true
        delivery_shortage_qty:
          type: integer
          readOnly: true
        delivery_more_qty:
          type: integer
          readOnly: true
        delivery_damage_qty:
          type: integer
          readOnly: true
        goods_weight:
          type: number
          format: double
          readOnly: true
        goods_volume:
          type: number
          format: double
          readOnly: true
        goods_cost:
          type: number
          format: double
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        back_order_label:
          type: boolean
          readOnly: true
      required:
      - back_order_label
      - create_time
      - creater
      - customer
      - delivery_actual_qty
      - delivery_damage_qty
      - delivery_more_qty
      - delivery_shortage_qty
      - dn_code
      - dn_status
      - goods_code
      - goods_cost
      - goods_desc
      - goods_qty
      - goods_volume
      - goods_weight
      - id
      - intransit_qty
      - pick_qty
      - picked_qty
      - update_time
    DNDetailPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        dn_code:
          type: string
        customer:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        creater:
          type: string
        dn_status:
          type: integer
        pick_qty:
          type: integer
          title: Goods Pre Pick QTY
        picked_qty:
          type: integer
          title: Goods Picked QTY
        intransit_qty:
          type: integer
        delivery_actual_qty:
          type: integer
        delivery_shortage_qty:
          type: integer
        delivery_more_qty:
          type: integer
        delivery_damage_qty:
          type: integer
          title: Delivery More QTY
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        back_order_label:
          type: boolean
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - customer
      - dn_code
      - goods_code
      - goods_qty
      - id
      - update_time
    DNDetailUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
        customer:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        creater:
          type: string
        dn_status:
          type: integer
        pick_qty:
          type: integer
          title: Goods Pre Pick QTY
        picked_qty:
          type: integer
          title: Goods Picked QTY
        intransit_qty:
          type: integer
        delivery_actual_qty:
          type: integer
        delivery_shortage_qty:
          type: integer
        delivery_more_qty:
          type: integer
        delivery_damage_qty:
          type: integer
          title: Delivery More QTY
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        back_order_label:
          type: boolean
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - customer
      - dn_code
      - goods_code
      - goods_qty
      - id
      - update_time
    DNFileDetailRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
        dn_status:
          type: integer
        customer:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        pick_qty:
          type: integer
        picked_qty:
          type: integer
        intransit_qty:
          type: integer
        delivery_actual_qty:
          type: integer
        delivery_shortage_qty:
          type: integer
        delivery_more_qty:
          type: integer
        delivery_damage_qty:
          type: integer
        goods_weight:
          type: number
          format: double
        goods_volume:
          type: number
          format: double
        goods_cost:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        back_order_label:
          type: boolean
      required:
      - create_time
      - id
      - update_time
    DNFileListRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
        dn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        customer:
          type: string
        creater:
          type: string
        back_order_label:
          type: boolean
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        bar_code:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
      required:
      - bar_code
      - create_time
      - id
      - update_time
    DNListGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
          readOnly: true
        dn_status:
          type: integer
          readOnly: true
        customer:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        bar_code:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        back_order_label:
          type: boolean
        transportation_fee:
          type: object
          additionalProperties: {}
      required:
      - bar_code
      - create_time
      - creater
      - customer
      - dn_code
      - dn_status
      - id
      - update_time
    DNListPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
        dn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        customer:
          type: string
          title: DN Customer
          maxLength: 255
        creater:
          type: string
          title: Who Created
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
        back_order_label:
          type: boolean
        openid:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bar_code
      - create_time
      - creater
      - customer
      - dn_code
      - id
      - openid
      - update_time
    DNListPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        dn_code:
          type: string
        customer:
          type: string
        bar_code:
          type: string
        creater:
          type: string
        dn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        back_order_label:
          type: boolean
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bar_code
      - create_time
      - creater
      - dn_code
      - id
      - update_time
    DNListUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
        dn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        customer:
          type: string
          title: DN Customer
          maxLength: 255
        creater:
          type: string
          title: Who Created
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
        back_order_label:
          type: boolean
        openid:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bar_code
      - create_time
      - creater
      - customer
      - dn_code
      - id
      - openid
      - update_time
    DNPickingCheckGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
          readOnly: true
        bin_name:
          type: string
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        picking_status:
          type: integer
        pick_qty:
          type: integer
          readOnly: true
        picked_qty:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
      required:
      - bin_name
      - create_time
      - creater
      - dn_code
      - goods_code
      - id
      - pick_qty
      - picked_qty
      - t_code
      - update_time
    DispatchListGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_name:
          type: string
          readOnly: true
        dn_code:
          type: string
          readOnly: true
        contact:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - contact
      - create_time
      - creater
      - dn_code
      - driver_name
      - id
      - update_time
    DriverFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_name:
          type: string
        license_palate:
          type: integer
        contact:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        license_plate:
          type: string
          maxLength: 255
      required:
      - create_time
      - id
      - license_plate
      - update_time
    DriverGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_name:
          type: string
          readOnly: true
        license_plate:
          type: string
          readOnly: true
        contact:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        creater:
          type: string
          title: Who Created
          maxLength: 255
      required:
      - contact
      - create_time
      - creater
      - driver_name
      - id
      - license_plate
      - update_time
    DriverPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_name:
          type: string
        license_plate:
          type: string
        contact:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    DriverPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        driver_name:
          type: string
        contact:
          type: string
        license_plate:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - contact
      - create_time
      - creater
      - driver_name
      - id
      - license_plate
      - update_time
    DriverUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_name:
          type: string
        license_plate:
          type: string
        contact:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - contact
      - create_time
      - creater
      - driver_name
      - id
      - license_plate
      - update_time
    FreightGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        send_city:
          type: string
          readOnly: true
        receiver_city:
          type: string
          readOnly: true
        weight_fee:
          type: number
          format: double
          readOnly: true
        volume_fee:
          type: number
          format: double
          readOnly: true
        transportation_supplier:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        min_payment:
          type: number
          format: double
      required:
      - create_time
      - creater
      - id
      - receiver_city
      - send_city
      - transportation_supplier
      - update_time
      - volume_fee
      - weight_fee
    FreightPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        send_city:
          type: string
        receiver_city:
          type: string
        weight_fee:
          type: number
          format: double
        volume_fee:
          type: number
          format: double
        transportation_supplier:
          type: string
        creater:
          type: string
        min_payment:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    FreightPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        send_city:
          type: string
        receiver_city:
          type: string
        weight_fee:
          type: number
          format: double
        volume_fee:
          type: number
          format: double
        transportation_supplier:
          type: string
        creater:
          type: string
        min_payment:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - receiver_city
      - send_city
      - transportation_supplier
      - update_time
      - volume_fee
      - weight_fee
    FreightUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        send_city:
          type: string
        receiver_city:
          type: string
        weight_fee:
          type: number
          format: double
        volume_fee:
          type: number
          format: double
        transportation_supplier:
          type: string
        creater:
          type: string
        min_payment:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - receiver_city
      - send_city
      - transportation_supplier
      - update_time
      - volume_fee
      - weight_fee
    FreightfileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        send_city:
          type: string
          readOnly: true
        receiver_city:
          type: string
          readOnly: true
        weight_fee:
          type: number
          format: double
          readOnly: true
        volume_fee:
          type: number
          format: double
          readOnly: true
        transportation_supplier:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        min_payment:
          type: number
          format: double
      required:
      - create_time
      - creater
      - id
      - receiver_city
      - send_city
      - transportation_supplier
      - update_time
      - volume_fee
      - weight_fee
    GOODSFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_supplier:
          type: string
        goods_weight:
          type: number
          format: double
        goods_w:
          type: number
          format: double
        goods_d:
          type: number
          format: double
        goods_h:
          type: number
          format: double
        unit_volume:
          type: number
          format: double
        goods_unit:
          type: string
        goods_class:
          type: string
        goods_brand:
          type: string
        goods_color:
          type: string
        goods_shape:
          type: string
        goods_specs:
          type: string
        goods_origin:
          type: string
        goods_cost:
          type: number
          format: double
        goods_price:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        safety_stock:
          type: integer
          title: Goods Safety Stock
        bar_code:
          type: string
          maxLength: 255
      required:
      - bar_code
      - create_time
      - id
      - update_time
    GoodsGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_supplier:
          type: string
          readOnly: true
        goods_weight:
          type: number
          format: double
          readOnly: true
        goods_w:
          type: number
          format: double
          readOnly: true
        goods_d:
          type: number
          format: double
          readOnly: true
        goods_h:
          type: number
          format: double
          readOnly: true
        unit_volume:
          type: number
          format: double
          readOnly: true
        goods_unit:
          type: string
          readOnly: true
        goods_class:
          type: string
          readOnly: true
        goods_brand:
          type: string
          readOnly: true
        goods_color:
          type: string
          readOnly: true
        goods_shape:
          type: string
          readOnly: true
        goods_specs:
          type: string
          readOnly: true
        goods_origin:
          type: string
          readOnly: true
        goods_cost:
          type: number
          format: double
          readOnly: true
        goods_price:
          type: number
          format: double
          readOnly: true
        creater:
          type: string
          readOnly: true
        bar_code:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        safety_stock:
          type: integer
          title: Goods Safety Stock
      required:
      - bar_code
      - create_time
      - creater
      - goods_brand
      - goods_class
      - goods_code
      - goods_color
      - goods_cost
      - goods_d
      - goods_desc
      - goods_h
      - goods_origin
      - goods_price
      - goods_shape
      - goods_specs
      - goods_supplier
      - goods_unit
      - goods_w
      - goods_weight
      - id
      - unit_volume
      - update_time
    GoodsPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
          minLength: 1
        goods_desc:
          type: string
        goods_supplier:
          type: string
        goods_weight:
          type: number
          format: double
        goods_w:
          type: number
          format: double
        goods_d:
          type: number
          format: double
        goods_h:
          type: number
          format: double
        unit_volume:
          type: number
          format: double
        goods_unit:
          type: string
        goods_class:
          type: string
        goods_brand:
          type: string
        goods_color:
          type: string
        goods_shape:
          type: string
        goods_specs:
          type: string
        goods_origin:
          type: string
        goods_cost:
          type: number
          format: double
        goods_price:
          type: number
          format: double
        creater:
          type: string
        bar_code:
          type: string
        safety_stock:
          type: integer
          title: Goods Safety Stock
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_code:
          type: string
          minLength: 1
        goods_desc:
          type: string
        goods_supplier:
          type: string
        goods_weight:
          type: number
          format: double
        goods_w:
          type: number
          format: double
        goods_d:
          type: number
          format: double
        goods_h:
          type: number
          format: double
        unit_volume:
          type: number
          format: double
        goods_unit:
          type: string
        goods_class:
          type: string
        goods_brand:
          type: string
        goods_color:
          type: string
        goods_shape:
          type: string
        goods_specs:
          type: string
        goods_origin:
          type: string
        goods_cost:
          type: number
          format: double
        goods_price:
          type: number
          format: double
        creater:
          type: string
        bar_code:
          type: string
        safety_stock:
          type: integer
          title: Goods Safety Stock
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bar_code
      - create_time
      - creater
      - goods_brand
      - goods_class
      - goods_code
      - goods_color
      - goods_cost
      - goods_d
      - goods_desc
      - goods_h
      - goods_origin
      - goods_price
      - goods_shape
      - goods_specs
      - goods_supplier
      - goods_unit
      - goods_w
      - goods_weight
      - id
      - unit_volume
      - update_time
    GoodsUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
          minLength: 1
        goods_desc:
          type: string
        goods_supplier:
          type: string
        goods_weight:
          type: number
          format: double
        goods_w:
          type: number
          format: double
        goods_d:
          type: number
          format: double
        goods_h:
          type: number
          format: double
        unit_volume:
          type: number
          format: double
        goods_unit:
          type: string
        goods_class:
          type: string
        goods_brand:
          type: string
        goods_color:
          type: string
        goods_shape:
          type: string
        goods_specs:
          type: string
        goods_origin:
          type: string
        goods_cost:
          type: number
          format: double
        goods_price:
          type: number
          format: double
        creater:
          type: string
        bar_code:
          type: string
        safety_stock:
          type: integer
          title: Goods Safety Stock
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_brand
      - goods_class
      - goods_code
      - goods_color
      - goods_cost
      - goods_d
      - goods_desc
      - goods_h
      - goods_origin
      - goods_price
      - goods_shape
      - goods_specs
      - goods_supplier
      - goods_unit
      - goods_w
      - goods_weight
      - id
      - unit_volume
      - update_time
    GoodsbrandGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_brand:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_brand
      - id
      - update_time
    GoodsbrandPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_brand:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsbrandPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_brand:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_brand
      - id
      - update_time
    GoodsbrandUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_brand:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_brand
      - id
      - update_time
    GoodsclassGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_class:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_class
      - id
      - update_time
    GoodsclassPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_class:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsclassPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_class:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_class
      - id
      - update_time
    GoodsclassUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_class:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_class
      - id
      - update_time
    GoodscolorGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_color:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_color
      - id
      - update_time
    GoodscolorPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_color:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodscolorPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_color:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_color
      - id
      - update_time
    GoodscolorUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_color:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_color
      - id
      - update_time
    GoodsoriginGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_origin:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_origin
      - id
      - update_time
    GoodsoriginPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_origin:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsoriginPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_origin:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_origin
      - id
      - update_time
    GoodsoriginUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_origin:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_origin
      - id
      - update_time
    GoodsshapeGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_shape:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_shape
      - id
      - update_time
    GoodsshapePartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_shape:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsshapePost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_shape:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_shape
      - id
      - update_time
    GoodsshapeUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_shape:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_shape
      - id
      - update_time
    GoodsspecsGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_specs:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_specs
      - id
      - update_time
    GoodsspecsPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_specs:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsspecsPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_specs:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_specs
      - id
      - update_time
    GoodsspecsUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_specs:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_specs
      - id
      - update_time
    GoodsunitGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_unit:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - goods_unit
      - id
      - update_time
    GoodsunitPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_unit:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    GoodsunitPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        goods_unit:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_unit
      - id
      - update_time
    GoodsunitUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_unit:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - goods_unit
      - id
      - update_time
    ListGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        request_time:
          type: string
          readOnly: true
        mode:
          type: string
          title: Request Mode
          maxLength: 255
        code:
          type: string
          title: Request Code
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
      required:
      - bar_code
      - code
      - create_time
      - creater
      - id
      - mode
      - request_time
      - update_time
    ManualCyclecountGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        cyclecount_status:
          type: integer
          title: Cycle Count Status
        bin_name:
          type: string
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_qty:
          type: integer
          title: On Hand Stock
        physical_inventory:
          type: integer
          title: Goods Code
        difference:
          type: integer
          title: Goods Code
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
      required:
      - bin_name
      - create_time
      - creater
      - goods_code
      - id
      - t_code
      - update_time
    ManualFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creater:
          type: string
        physical_inventory:
          type: string
          readOnly: true
        difference:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        cyclecount_status:
          type: integer
          title: Cycle Count Status
        bin_name:
          type: string
          maxLength: 255
        goods_code:
          type: string
          maxLength: 255
        goods_qty:
          type: integer
          title: On Hand Stock
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
      required:
      - bin_name
      - create_time
      - difference
      - goods_code
      - id
      - physical_inventory
      - t_code
      - update_time
    PaginatedASNDetailGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ASNDetailGet'
    PaginatedASNListGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ASNListGet'
    PaginatedBinpropertyGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BinpropertyGet'
    PaginatedBinsetGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BinsetGet'
    PaginatedBinsizeGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BinsizeGet'
    PaginatedCapitalGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CapitalGet'
    PaginatedCompanyGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyGet'
    PaginatedCustomerGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerGet'
    PaginatedCyclecountGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CyclecountGet'
    PaginatedDNDetailGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DNDetailGet'
    PaginatedDNListGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DNListGet'
    PaginatedDNPickingCheckGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DNPickingCheckGet'
    PaginatedDispatchListGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DispatchListGet'
    PaginatedDriverGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DriverGet'
    PaginatedFreightGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FreightGet'
    PaginatedGoodsGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsGet'
    PaginatedGoodsbrandGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsbrandGet'
    PaginatedGoodsclassGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsclassGet'
    PaginatedGoodscolorGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodscolorGet'
    PaginatedGoodsoriginGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsoriginGet'
    PaginatedGoodsshapeGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsshapeGet'
    PaginatedGoodsspecsGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsspecsGet'
    PaginatedGoodsunitGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoodsunitGet'
    PaginatedListGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListGet'
    PaginatedManualCyclecountGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ManualCyclecountGet'
    PaginatedQTYRecorderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/QTYRecorder'
    PaginatedSannerDnDetailPickingListGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SannerDnDetailPickingListGet'
    PaginatedStaffGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffGet'
    PaginatedStaffTypeGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffTypeGet'
    PaginatedStockBinGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StockBinGet'
    PaginatedStockListGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StockListGet'
    PaginatedSupplierGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SupplierGet'
    PaginatedWarehouseGetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WarehouseGet'
    PatchedASNListPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        asn_code:
          type: string
        asn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        supplier:
          type: string
          title: ASN Supplier
          maxLength: 255
        creater:
          type: string
          title: Who Created
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
        openid:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedBinsetPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
        bin_size:
          type: string
        bin_property:
          type: string
        creater:
          type: string
        empty_label:
          type: boolean
        bar_code:
          type: string
          maxLength: 255
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedBinsizePartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_size:
          type: string
        bin_size_w:
          type: number
          format: double
        bin_size_d:
          type: number
          format: double
        bin_size_h:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedCapitalPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        capital_name:
          type: string
        capital_qty:
          type: integer
        capital_cost:
          type: number
          format: double
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedCompanyPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
        company_city:
          type: string
        company_address:
          type: string
        company_contact:
          type: string
        company_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedCustomerPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_name:
          type: string
        customer_city:
          type: string
        customer_address:
          type: string
        customer_contact:
          type: string
        customer_manager:
          type: string
        customer_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedDNListPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dn_code:
          type: string
        dn_status:
          type: integer
        total_weight:
          type: number
          format: double
        total_volume:
          type: number
          format: double
        total_cost:
          type: number
          format: double
        customer:
          type: string
          title: DN Customer
          maxLength: 255
        creater:
          type: string
          title: Who Created
          maxLength: 255
        bar_code:
          type: string
          maxLength: 255
        back_order_label:
          type: boolean
        openid:
          type: string
          maxLength: 255
        transportation_fee:
          type: object
          additionalProperties: {}
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedDriverPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_name:
          type: string
        license_plate:
          type: string
        contact:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedFreightPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        send_city:
          type: string
        receiver_city:
          type: string
        weight_fee:
          type: number
          format: double
        volume_fee:
          type: number
          format: double
        transportation_supplier:
          type: string
        creater:
          type: string
        min_payment:
          type: number
          format: double
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
          minLength: 1
        goods_desc:
          type: string
        goods_supplier:
          type: string
        goods_weight:
          type: number
          format: double
        goods_w:
          type: number
          format: double
        goods_d:
          type: number
          format: double
        goods_h:
          type: number
          format: double
        unit_volume:
          type: number
          format: double
        goods_unit:
          type: string
        goods_class:
          type: string
        goods_brand:
          type: string
        goods_color:
          type: string
        goods_shape:
          type: string
        goods_specs:
          type: string
        goods_origin:
          type: string
        goods_cost:
          type: number
          format: double
        goods_price:
          type: number
          format: double
        creater:
          type: string
        bar_code:
          type: string
        safety_stock:
          type: integer
          title: Goods Safety Stock
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsbrandPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_brand:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsclassPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_class:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodscolorPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_color:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsoriginPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_origin:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsshapePartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_shape:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsspecsPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_specs:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGoodsunitPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_unit:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedStaffPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_name:
          type: string
        staff_type:
          type: string
        check_code:
          type: integer
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        error_check_code_counter:
          type: integer
          title: Check_code error counter
        is_lock:
          type: boolean
          title: Whether the lock
    PatchedSupplierPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier_name:
          type: string
        supplier_city:
          type: string
        supplier_address:
          type: string
        supplier_contact:
          type: string
        supplier_manager:
          type: string
        supplier_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedWarehousePartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        warehouse_name:
          type: string
          maxLength: 45
          minLength: 1
        warehouse_city:
          type: string
        warehouse_address:
          type: string
        warehouse_contact:
          type: string
        warehouse_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    QTYRecorder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mode_code:
          type: string
          readOnly: true
        bin_name:
          type: string
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        store_code:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - bin_name
      - create_time
      - creater
      - goods_code
      - goods_desc
      - goods_qty
      - id
      - mode_code
      - store_code
      - update_time
    SannerDnDetailPickingListGet:
      type: object
      properties:
        dn_code:
          type: string
          readOnly: true
        dn_status:
          type: integer
          readOnly: true
        customer:
          type: string
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        pick_qty:
          type: integer
          readOnly: true
        picked_qty:
          type: integer
          readOnly: true
        intransit_qty:
          type: integer
          readOnly: true
        delivery_actual_qty:
          type: integer
          readOnly: true
        delivery_shortage_qty:
          type: integer
          readOnly: true
        delivery_more_qty:
          type: integer
          readOnly: true
        delivery_damage_qty:
          type: integer
          readOnly: true
        goods_weight:
          type: number
          format: double
          readOnly: true
        goods_volume:
          type: number
          format: double
          readOnly: true
        goods_cost:
          type: number
          format: double
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        back_order_label:
          type: boolean
          readOnly: true
      required:
      - back_order_label
      - create_time
      - creater
      - customer
      - delivery_actual_qty
      - delivery_damage_qty
      - delivery_more_qty
      - delivery_shortage_qty
      - dn_code
      - dn_status
      - goods_code
      - goods_cost
      - goods_qty
      - goods_volume
      - goods_weight
      - intransit_qty
      - pick_qty
      - picked_qty
      - update_time
    ScannerBinsetTagGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
          readOnly: true
        bin_size:
          type: string
          readOnly: true
        bin_property:
          type: string
          readOnly: true
        empty_label:
          type: boolean
          readOnly: true
        creater:
          type: string
          readOnly: true
        bar_code:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - bar_code
      - bin_name
      - bin_property
      - bin_size
      - create_time
      - creater
      - empty_label
      - id
      - update_time
    StaffFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_name:
          type: string
        staff_type:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        check_code:
          type: integer
        error_check_code_counter:
          type: integer
          title: Check_code error counter
        is_lock:
          type: boolean
          title: Whether the lock
      required:
      - create_time
      - id
      - update_time
    StaffGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_name:
          type: string
          readOnly: true
        staff_type:
          type: string
          readOnly: true
        check_code:
          type: integer
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        error_check_code_counter:
          type: integer
          title: Check_code error counter
        is_lock:
          type: boolean
          title: Whether the lock
      required:
      - check_code
      - create_time
      - id
      - staff_name
      - staff_type
      - update_time
    StaffPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_name:
          type: string
        staff_type:
          type: string
        check_code:
          type: integer
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        error_check_code_counter:
          type: integer
          title: Check_code error counter
        is_lock:
          type: boolean
          title: Whether the lock
      required:
      - create_time
      - id
      - update_time
    StaffPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        staff_name:
          type: string
        staff_type:
          type: string
        check_code:
          type: integer
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        error_check_code_counter:
          type: integer
          title: Check_code error counter
        is_lock:
          type: boolean
          title: Whether the lock
      required:
      - check_code
      - create_time
      - id
      - staff_name
      - staff_type
      - update_time
    StaffTypeGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_type:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - id
      - staff_type
      - update_time
    StaffUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_name:
          type: string
        staff_type:
          type: string
        check_code:
          type: integer
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        error_check_code_counter:
          type: integer
          title: Check_code error counter
        is_lock:
          type: boolean
          title: Whether the lock
      required:
      - create_time
      - id
      - staff_name
      - staff_type
      - update_time
    StockBinGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        pick_qty:
          type: integer
          readOnly: true
        picked_qty:
          type: integer
          readOnly: true
        bin_size:
          type: string
          readOnly: true
        bin_property:
          type: string
          readOnly: true
        qty:
          type: string
          readOnly: true
        t_code:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - bin_name
      - bin_property
      - bin_size
      - create_time
      - goods_code
      - goods_desc
      - goods_qty
      - id
      - pick_qty
      - picked_qty
      - qty
      - t_code
      - update_time
    StockBinPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        bin_name:
          type: string
          readOnly: true
        move_to_bin:
          type: string
          readOnly: true
        move_qty:
          type: string
          readOnly: true
        goods_code:
          type: string
          maxLength: 255
        goods_desc:
          type: string
          title: Goods Description
          maxLength: 255
        goods_qty:
          type: integer
          title: Binstock Qty
        pick_qty:
          type: integer
          title: BinPick Qty
        picked_qty:
          type: integer
          title: BinPicked Qty
        bin_size:
          type: string
          maxLength: 255
        bin_property:
          type: string
          maxLength: 255
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - bin_name
      - bin_property
      - bin_size
      - create_time
      - goods_code
      - goods_desc
      - id
      - move_qty
      - move_to_bin
      - t_code
      - update_time
    StockFileBinListRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bin_name:
          type: string
        goods_code:
          type: string
        goods_desc:
          type: string
        goods_qty:
          type: integer
        pick_qty:
          type: integer
        picked_qty:
          type: integer
        bin_size:
          type: string
        bin_property:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        t_code:
          type: string
          title: Transaction Code
          maxLength: 255
      required:
      - create_time
      - id
      - t_code
      - update_time
    StockFileListRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        onhand_stock:
          type: integer
          readOnly: true
        can_order_stock:
          type: integer
          readOnly: true
        inspect_stock:
          type: integer
          readOnly: true
        hold_stock:
          type: integer
          readOnly: true
        damage_stock:
          type: integer
          readOnly: true
        asn_stock:
          type: integer
          readOnly: true
        dn_stock:
          type: integer
          readOnly: true
        pre_load_stock:
          type: integer
          readOnly: true
        pre_sort_stock:
          type: integer
          readOnly: true
        sorted_stock:
          type: integer
          readOnly: true
        pick_stock:
          type: integer
          readOnly: true
        picked_stock:
          type: integer
          readOnly: true
        back_order_stock:
          type: integer
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        ordered_stock:
          type: integer
        supplier:
          type: string
          title: Goods Supplier
          maxLength: 255
      required:
      - asn_stock
      - back_order_stock
      - can_order_stock
      - create_time
      - damage_stock
      - dn_stock
      - goods_code
      - goods_desc
      - goods_qty
      - hold_stock
      - id
      - inspect_stock
      - onhand_stock
      - pick_stock
      - picked_stock
      - pre_load_stock
      - pre_sort_stock
      - sorted_stock
      - update_time
    StockListGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goods_code:
          type: string
          readOnly: true
        goods_desc:
          type: string
          readOnly: true
        goods_qty:
          type: integer
          readOnly: true
        onhand_stock:
          type: integer
          readOnly: true
        can_order_stock:
          type: integer
          readOnly: true
        inspect_stock:
          type: integer
          readOnly: true
        hold_stock:
          type: integer
          readOnly: true
        damage_stock:
          type: integer
          readOnly: true
        asn_stock:
          type: integer
          readOnly: true
        dn_stock:
          type: integer
          readOnly: true
        pre_load_stock:
          type: integer
          readOnly: true
        pre_sort_stock:
          type: integer
          readOnly: true
        sorted_stock:
          type: integer
          readOnly: true
        pick_stock:
          type: integer
          readOnly: true
        picked_stock:
          type: integer
          readOnly: true
        back_order_stock:
          type: integer
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
        ordered_stock:
          type: integer
        supplier:
          type: string
          title: Goods Supplier
          maxLength: 255
      required:
      - asn_stock
      - back_order_stock
      - can_order_stock
      - create_time
      - damage_stock
      - dn_stock
      - goods_code
      - goods_desc
      - goods_qty
      - hold_stock
      - id
      - inspect_stock
      - onhand_stock
      - pick_stock
      - picked_stock
      - pre_load_stock
      - pre_sort_stock
      - sorted_stock
      - update_time
    SupplierFileRender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier_name:
          type: string
        supplier_city:
          type: string
        supplier_address:
          type: string
        supplier_contact:
          type: string
        supplier_manager:
          type: string
        supplier_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - id
      - update_time
    SupplierGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier_name:
          type: string
          readOnly: true
        supplier_city:
          type: string
          readOnly: true
        supplier_address:
          type: string
          readOnly: true
        supplier_contact:
          type: string
          readOnly: true
        supplier_manager:
          type: string
          readOnly: true
        supplier_level:
          type: integer
          readOnly: true
        creater:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - id
      - supplier_address
      - supplier_city
      - supplier_contact
      - supplier_level
      - supplier_manager
      - supplier_name
      - update_time
    SupplierPartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier_name:
          type: string
        supplier_city:
          type: string
        supplier_address:
          type: string
        supplier_contact:
          type: string
        supplier_manager:
          type: string
        supplier_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
    SupplierPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        supplier_name:
          type: string
        supplier_city:
          type: string
        supplier_address:
          type: string
        supplier_contact:
          type: string
        supplier_manager:
          type: string
        supplier_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - supplier_address
      - supplier_city
      - supplier_contact
      - supplier_level
      - supplier_manager
      - supplier_name
      - update_time
    SupplierUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier_name:
          type: string
        supplier_city:
          type: string
        supplier_address:
          type: string
        supplier_contact:
          type: string
        supplier_manager:
          type: string
        supplier_level:
          type: integer
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - supplier_address
      - supplier_city
      - supplier_contact
      - supplier_level
      - supplier_manager
      - supplier_name
      - update_time
    WarehouseGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        warehouse_name:
          type: string
          readOnly: true
        warehouse_city:
          type: string
          readOnly: true
        warehouse_address:
          type: string
          readOnly: true
        warehouse_contact:
          type: string
          readOnly: true
        warehouse_manager:
          type: string
          readOnly: true
        creater:
          type: string
          readOnly: true
        openid:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_time
      - creater
      - id
      - openid
      - update_time
      - warehouse_address
      - warehouse_city
      - warehouse_contact
      - warehouse_manager
      - warehouse_name
    WarehousePartialUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        warehouse_name:
          type: string
          maxLength: 45
          minLength: 1
        warehouse_city:
          type: string
        warehouse_address:
          type: string
        warehouse_contact:
          type: string
        warehouse_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - id
      - update_time
      - warehouse_name
    WarehousePost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        openid:
          type: string
        warehouse_name:
          type: string
          maxLength: 45
          minLength: 1
        warehouse_city:
          type: string
        warehouse_address:
          type: string
        warehouse_contact:
          type: string
        warehouse_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - update_time
      - warehouse_address
      - warehouse_city
      - warehouse_contact
      - warehouse_manager
      - warehouse_name
    WarehouseUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        warehouse_name:
          type: string
          maxLength: 45
          minLength: 1
        warehouse_city:
          type: string
        warehouse_address:
          type: string
        warehouse_contact:
          type: string
        warehouse_manager:
          type: string
        creater:
          type: string
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_time
      - creater
      - id
      - update_time
      - warehouse_address
      - warehouse_city
      - warehouse_contact
      - warehouse_manager
      - warehouse_name
