openapi: 3.0.3
info:
  title: wger
  version: 2.2.0a4
  description: Self hosted FLOSS workout and fitness tracker
paths:
  /api/v2/check-permission/:
    get:
      operationId: check_permission_retrieve
      description: Checks whether the user has a django permission
      parameters:
      - in: query
        name: permission
        schema:
          type: string
        description: The name of the django permission such as "exercises.change_muscle"
      tags:
      - check-permission
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
        '400':
          description: Please pass a permission name in the 'permission' parameter
  /api/v2/day/:
    get:
      operationId: day_list
      description: API endpoint for routine day objects
      parameters:
      - in: query
        name: day
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: training
        schema:
          type: integer
      tags:
      - day
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDayList'
          description: ''
    post:
      operationId: day_create
      description: Check for creation (PUT, POST)
      tags:
      - day
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DayRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DayRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DayRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
  /api/v2/day/{id}/:
    get:
      operationId: day_retrieve
      description: API endpoint for routine day objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this day.
        required: true
      tags:
      - day
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    put:
      operationId: day_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this day.
        required: true
      tags:
      - day
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DayRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DayRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DayRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    patch:
      operationId: day_partial_update
      description: API endpoint for routine day objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this day.
        required: true
      tags:
      - day
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDayRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDayRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDayRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
          description: ''
    delete:
      operationId: day_destroy
      description: API endpoint for routine day objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this day.
        required: true
      tags:
      - day
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/daysofweek/:
    get:
      operationId: daysofweek_list
      description: |-
        API endpoint for the days of the week (monday, tuesday, etc.).

        This has historical reasons, and it's better and easier to just define a simple enum
      parameters:
      - in: query
        name: day_of_week
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - daysofweek
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDaysOfWeekList'
          description: ''
  /api/v2/daysofweek/{id}/:
    get:
      operationId: daysofweek_retrieve
      description: |-
        API endpoint for the days of the week (monday, tuesday, etc.).

        This has historical reasons, and it's better and easier to just define a simple enum
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this days of week.
        required: true
      tags:
      - daysofweek
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaysOfWeek'
          description: ''
  /api/v2/deletion-log/:
    get:
      operationId: deletion_log_list
      description: |-
        API endpoint for exercise deletion logs

        This lists objects that where deleted on a wger instance and should be deleted
        as well when performing a sync (e.g. because many exercises where submitted at
        once or an image was uploaded that hasn't a CC license)
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: model_type
        schema:
          type: string
          enum:
          - base
          - image
          - translation
          - video
        description: |-
          * `base` - base
          * `translation` - translation
          * `image` - image
          * `video` - video
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - deletion-log
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeletionLogList'
          description: ''
  /api/v2/deletion-log/{id}/:
    get:
      operationId: deletion_log_retrieve
      description: |-
        API endpoint for exercise deletion logs

        This lists objects that where deleted on a wger instance and should be deleted
        as well when performing a sync (e.g. because many exercises where submitted at
        once or an image was uploaded that hasn't a CC license)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deletion log.
        required: true
      tags:
      - deletion-log
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletionLog'
          description: ''
  /api/v2/equipment/:
    get:
      operationId: equipment_list
      description: API endpoint for equipment objects
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - equipment
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipmentList'
          description: ''
  /api/v2/equipment/{id}/:
    get:
      operationId: equipment_retrieve
      description: API endpoint for equipment objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this equipment.
        required: true
      tags:
      - equipment
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
  /api/v2/exercise/:
    get:
      operationId: exercise_list
      description: |-
        API endpoint for exercise objects, use /api/v2/exercisebaseinfo/ instead.

        This is only kept for backwards compatibility and will be removed in the future
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: exercise_base
        schema:
          type: integer
      - in: query
        name: language
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - exercise
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseList'
          description: ''
  /api/v2/exercise-base/:
    get:
      operationId: exercise_base_list
      description: |-
        API endpoint for exercise base objects.

        For a read-only endpoint with all the information of an exercise, see /api/v2/exercisebaseinfo/
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: equipment
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: muscles
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: muscles_secondary
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - exercise-base
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseBaseList'
          description: ''
    post:
      operationId: exercise_base_create
      description: |-
        API endpoint for exercise base objects.

        For a read-only endpoint with all the information of an exercise, see /api/v2/exercisebaseinfo/
      tags:
      - exercise-base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseBaseRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseBase'
          description: ''
  /api/v2/exercise-base/{id}/:
    get:
      operationId: exercise_base_retrieve
      description: |-
        API endpoint for exercise base objects.

        For a read-only endpoint with all the information of an exercise, see /api/v2/exercisebaseinfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise base.
        required: true
      tags:
      - exercise-base
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseBase'
          description: ''
    put:
      operationId: exercise_base_update
      description: |-
        API endpoint for exercise base objects.

        For a read-only endpoint with all the information of an exercise, see /api/v2/exercisebaseinfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise base.
        required: true
      tags:
      - exercise-base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseBaseRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseBase'
          description: ''
    patch:
      operationId: exercise_base_partial_update
      description: |-
        API endpoint for exercise base objects.

        For a read-only endpoint with all the information of an exercise, see /api/v2/exercisebaseinfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise base.
        required: true
      tags:
      - exercise-base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseBaseRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseBase'
          description: ''
    delete:
      operationId: exercise_base_destroy
      description: |-
        API endpoint for exercise base objects.

        For a read-only endpoint with all the information of an exercise, see /api/v2/exercisebaseinfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise base.
        required: true
      tags:
      - exercise-base
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/exercise-translation/:
    get:
      operationId: exercise_translation_list
      description: API endpoint for editing or adding exercise translation objects.
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: exercise_base
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - exercise-translation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseTranslationList'
          description: ''
    post:
      operationId: exercise_translation_create
      description: API endpoint for editing or adding exercise translation objects.
      tags:
      - exercise-translation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseTranslationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseTranslationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseTranslationRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseTranslation'
          description: ''
  /api/v2/exercise-translation/{id}/:
    get:
      operationId: exercise_translation_retrieve
      description: API endpoint for editing or adding exercise translation objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exercise-translation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseTranslation'
          description: ''
    put:
      operationId: exercise_translation_update
      description: API endpoint for editing or adding exercise translation objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exercise-translation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseTranslationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseTranslationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseTranslationRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseTranslation'
          description: ''
    patch:
      operationId: exercise_translation_partial_update
      description: API endpoint for editing or adding exercise translation objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exercise-translation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseTranslationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseTranslationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseTranslationRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseTranslation'
          description: ''
    delete:
      operationId: exercise_translation_destroy
      description: API endpoint for editing or adding exercise translation objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exercise-translation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/exercise/{id}/:
    get:
      operationId: exercise_retrieve
      description: |-
        API endpoint for exercise objects, use /api/v2/exercisebaseinfo/ instead.

        This is only kept for backwards compatibility and will be removed in the future
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exercise
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
          description: ''
  /api/v2/exercise/search/:
    get:
      operationId: exercise_search_retrieve
      description: |-
        Searches for exercises.

        This format is currently used by the exercise search autocompleter
      parameters:
      - in: query
        name: language
        schema:
          type: string
        description: Comma separated list of language codes to search
        required: true
      - in: query
        name: term
        schema:
          type: string
        description: The name of the exercise to search
        required: true
      tags:
      - exercise
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseSearchResponse'
          description: ''
  /api/v2/exercisealias/:
    get:
      operationId: exercisealias_list
      description: API endpoint for exercise aliases objects
      parameters:
      - in: query
        name: alias
        schema:
          type: string
      - in: query
        name: exercise
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - exercisealias
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseAliasList'
          description: ''
    post:
      operationId: exercisealias_create
      description: API endpoint for exercise aliases objects
      tags:
      - exercisealias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseAliasRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseAliasRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseAliasRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseAlias'
          description: ''
  /api/v2/exercisealias/{id}/:
    get:
      operationId: exercisealias_retrieve
      description: API endpoint for exercise aliases objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alias.
        required: true
      tags:
      - exercisealias
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseAlias'
          description: ''
    put:
      operationId: exercisealias_update
      description: API endpoint for exercise aliases objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alias.
        required: true
      tags:
      - exercisealias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseAliasRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseAliasRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseAliasRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseAlias'
          description: ''
    patch:
      operationId: exercisealias_partial_update
      description: API endpoint for exercise aliases objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alias.
        required: true
      tags:
      - exercisealias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseAliasRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseAliasRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseAliasRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseAlias'
          description: ''
    delete:
      operationId: exercisealias_destroy
      description: API endpoint for exercise aliases objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alias.
        required: true
      tags:
      - exercisealias
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/exercisebaseinfo/:
    get:
      operationId: exercisebaseinfo_list
      description: |-
        Read-only info API endpoint for exercise objects, grouped by the exercise
        base. Returns nested data structures for more easy and faster parsing and
        is the recommended way to access the exercise data.
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: equipment
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: license
        schema:
          type: integer
      - in: query
        name: license_author
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: muscles
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: muscles_secondary
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: variations
        schema:
          type: integer
      tags:
      - exercisebaseinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseBaseInfoList'
          description: ''
  /api/v2/exercisebaseinfo/{id}/:
    get:
      operationId: exercisebaseinfo_retrieve
      description: |-
        Read-only info API endpoint for exercise objects, grouped by the exercise
        base. Returns nested data structures for more easy and faster parsing and
        is the recommended way to access the exercise data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise base.
        required: true
      tags:
      - exercisebaseinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseBaseInfo'
          description: ''
  /api/v2/exercisecategory/:
    get:
      operationId: exercisecategory_list
      description: API endpoint for exercise categories objects
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - exercisecategory
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseCategoryList'
          description: ''
  /api/v2/exercisecategory/{id}/:
    get:
      operationId: exercisecategory_retrieve
      description: API endpoint for exercise categories objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise category.
        required: true
      tags:
      - exercisecategory
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseCategory'
          description: ''
  /api/v2/exercisecomment/:
    get:
      operationId: exercisecomment_list
      description: API endpoint for exercise comment objects
      parameters:
      - in: query
        name: comment
        schema:
          type: string
      - in: query
        name: exercise
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - exercisecomment
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseCommentList'
          description: ''
    post:
      operationId: exercisecomment_create
      description: API endpoint for exercise comment objects
      tags:
      - exercisecomment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseCommentRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseComment'
          description: ''
  /api/v2/exercisecomment/{id}/:
    get:
      operationId: exercisecomment_retrieve
      description: API endpoint for exercise comment objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise comment.
        required: true
      tags:
      - exercisecomment
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseComment'
          description: ''
    put:
      operationId: exercisecomment_update
      description: API endpoint for exercise comment objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise comment.
        required: true
      tags:
      - exercisecomment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseCommentRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseComment'
          description: ''
    patch:
      operationId: exercisecomment_partial_update
      description: API endpoint for exercise comment objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise comment.
        required: true
      tags:
      - exercisecomment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseCommentRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseComment'
          description: ''
    delete:
      operationId: exercisecomment_destroy
      description: API endpoint for exercise comment objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise comment.
        required: true
      tags:
      - exercisecomment
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/exerciseimage/:
    get:
      operationId: exerciseimage_list
      description: API endpoint for exercise image objects
      parameters:
      - in: query
        name: exercise_base
        schema:
          type: integer
      - in: query
        name: is_main
        schema:
          type: boolean
      - in: query
        name: license
        schema:
          type: integer
      - in: query
        name: license_author
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - exerciseimage
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseImageList'
          description: ''
    post:
      operationId: exerciseimage_create
      description: API endpoint for exercise image objects
      tags:
      - exerciseimage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseImageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseImageRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseImage'
          description: ''
  /api/v2/exerciseimage/{id}/:
    get:
      operationId: exerciseimage_retrieve
      description: API endpoint for exercise image objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise image.
        required: true
      tags:
      - exerciseimage
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseImage'
          description: ''
    put:
      operationId: exerciseimage_update
      description: API endpoint for exercise image objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise image.
        required: true
      tags:
      - exerciseimage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseImageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseImageRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseImage'
          description: ''
    patch:
      operationId: exerciseimage_partial_update
      description: API endpoint for exercise image objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise image.
        required: true
      tags:
      - exerciseimage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseImageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseImageRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseImage'
          description: ''
    delete:
      operationId: exerciseimage_destroy
      description: API endpoint for exercise image objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise image.
        required: true
      tags:
      - exerciseimage
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/exerciseimage/{id}/thumbnails/:
    get:
      operationId: exerciseimage_thumbnails_retrieve
      description: Return a list of the image's thumbnails
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise image.
        required: true
      tags:
      - exerciseimage
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseImage'
          description: ''
  /api/v2/exerciseinfo/:
    get:
      operationId: exerciseinfo_list
      description: API endpoint for exercise objects, use /api/v2/exercisebaseinfo/
        instead.
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: exercise_base
        schema:
          type: integer
      - in: query
        name: license
        schema:
          type: integer
      - in: query
        name: license_author
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - exerciseinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseInfoList'
          description: ''
  /api/v2/exerciseinfo/{id}/:
    get:
      operationId: exerciseinfo_retrieve
      description: API endpoint for exercise objects, use /api/v2/exercisebaseinfo/
        instead.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exerciseinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseInfo'
          description: ''
  /api/v2/gallery/:
    get:
      operationId: gallery_list
      description: API endpoint for gallery image
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - gallery
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageList'
          description: ''
    post:
      operationId: gallery_create
      description: API endpoint for gallery image
      tags:
      - gallery
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /api/v2/gallery/{id}/:
    get:
      operationId: gallery_retrieve
      description: API endpoint for gallery image
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - gallery
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: gallery_update
      description: API endpoint for gallery image
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - gallery
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: gallery_partial_update
      description: API endpoint for gallery image
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - gallery
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImageRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: gallery_destroy
      description: API endpoint for gallery image
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - gallery
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/ingredient/:
    get:
      operationId: ingredient_list
      description: |-
        API endpoint for ingredient objects. For a read-only endpoint with all
        the information of an ingredient, see /api/v2/ingredientinfo/
      parameters:
      - in: query
        name: carbohydrates
        schema:
          type: number
      - in: query
        name: carbohydrates_sugar
        schema:
          type: number
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: created__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: energy
        schema:
          type: integer
      - in: query
        name: fat
        schema:
          type: number
      - in: query
        name: fat_saturated
        schema:
          type: number
      - in: query
        name: fibres
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: language
        schema:
          type: integer
      - in: query
        name: last_update
        schema:
          type: string
          format: date-time
      - in: query
        name: last_update__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: last_update__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: license
        schema:
          type: integer
      - in: query
        name: license_author
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: protein
        schema:
          type: number
      - in: query
        name: sodium
        schema:
          type: number
      - in: query
        name: status
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
        description: |-
          * `1` - Pending
          * `2` - Accepted
          * `3` - Declined
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - ingredient
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIngredientList'
          description: ''
  /api/v2/ingredient-image/:
    get:
      operationId: ingredient_image_list
      description: API endpoint for ingredient images
      parameters:
      - in: query
        name: ingredient__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: ingredient_id
        schema:
          type: integer
          nullable: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - ingredient-image
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIngredientImageList'
          description: ''
  /api/v2/ingredient-image/{id}/:
    get:
      operationId: ingredient_image_retrieve
      description: API endpoint for ingredient images
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - ingredient-image
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientImage'
          description: ''
  /api/v2/ingredient/{id}/:
    get:
      operationId: ingredient_retrieve
      description: |-
        API endpoint for ingredient objects. For a read-only endpoint with all
        the information of an ingredient, see /api/v2/ingredientinfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - ingredient
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
  /api/v2/ingredient/{id}/get_values/:
    get:
      operationId: ingredient_get_values_retrieve
      description: |-
        Calculates the nutritional values for current ingredient and
        the given amount and unit.

        This function basically just performs a multiplication (in the model), and
        is a candidate to be moved to pure AJAX calls, however doing it like this
        keeps the logic nicely hidden and respects the DRY principle.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - ingredient
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
  /api/v2/ingredient/search/:
    get:
      operationId: ingredient_search_retrieve
      description: |-
        Searches for ingredients.

        This format is currently used by the ingredient search autocompleter
      parameters:
      - in: query
        name: language
        schema:
          type: string
        description: Comma separated list of language codes to search
        required: true
      - in: query
        name: term
        schema:
          type: string
        description: The name of the ingredient to search"
        required: true
      tags:
      - ingredient
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientSearchResponse'
          description: ''
  /api/v2/ingredientinfo/:
    get:
      operationId: ingredientinfo_list
      description: |-
        Read-only info API endpoint for ingredient objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: query
        name: carbohydrates
        schema:
          type: number
      - in: query
        name: carbohydrates_sugar
        schema:
          type: number
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: created__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: energy
        schema:
          type: integer
      - in: query
        name: fat
        schema:
          type: number
      - in: query
        name: fat_saturated
        schema:
          type: number
      - in: query
        name: fibres
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: language
        schema:
          type: integer
      - in: query
        name: last_update
        schema:
          type: string
          format: date-time
      - in: query
        name: last_update__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: last_update__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: license
        schema:
          type: integer
      - in: query
        name: license_author
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: protein
        schema:
          type: number
      - in: query
        name: sodium
        schema:
          type: number
      - in: query
        name: status
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
        description: |-
          * `1` - Pending
          * `2` - Accepted
          * `3` - Declined
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - ingredientinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIngredientInfoList'
          description: ''
  /api/v2/ingredientinfo/{id}/:
    get:
      operationId: ingredientinfo_retrieve
      description: |-
        Read-only info API endpoint for ingredient objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - ingredientinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientInfo'
          description: ''
  /api/v2/ingredientinfo/{id}/get_values/:
    get:
      operationId: ingredientinfo_get_values_retrieve
      description: |-
        Calculates the nutritional values for current ingredient and
        the given amount and unit.

        This function basically just performs a multiplication (in the model), and
        is a candidate to be moved to pure AJAX calls, however doing it like this
        keeps the logic nicely hidden and respects the DRY principle.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - ingredientinfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientInfo'
          description: ''
  /api/v2/ingredientweightunit/:
    get:
      operationId: ingredientweightunit_list
      description: API endpoint for many-to-many table ingredient-weight unit objects
      parameters:
      - in: query
        name: amount
        schema:
          type: number
      - in: query
        name: gram
        schema:
          type: integer
      - in: query
        name: ingredient
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: unit
        schema:
          type: integer
      tags:
      - ingredientweightunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIngredientWeightUnitList'
          description: ''
  /api/v2/ingredientweightunit/{id}/:
    get:
      operationId: ingredientweightunit_retrieve
      description: API endpoint for many-to-many table ingredient-weight unit objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient weight unit.
        required: true
      tags:
      - ingredientweightunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientWeightUnit'
          description: ''
  /api/v2/language/:
    get:
      operationId: language_list
      description: API endpoint for the languages used in the application
      parameters:
      - in: query
        name: full_name
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: short_name
        schema:
          type: string
      tags:
      - language
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageList'
          description: ''
  /api/v2/language/{id}/:
    get:
      operationId: language_retrieve
      description: API endpoint for the languages used in the application
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - language
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
  /api/v2/license/:
    get:
      operationId: license_list
      description: API endpoint for license objects
      parameters:
      - in: query
        name: full_name
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: short_name
        schema:
          type: string
      - in: query
        name: url
        schema:
          type: string
      tags:
      - license
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLicenseList'
          description: ''
  /api/v2/license/{id}/:
    get:
      operationId: license_retrieve
      description: API endpoint for license objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this license.
        required: true
      tags:
      - license
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ''
  /api/v2/login/:
    post:
      operationId: login_create
      description: |-
        API login endpoint. Returns a token that can subsequently passed in the
        header.

        Note that it is recommended to use token authorization instead.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'
          description: ''
  /api/v2/meal/:
    get:
      operationId: meal_list
      description: API endpoint for meal objects
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: plan
        schema:
          type: integer
      - in: query
        name: time
        schema:
          type: string
          format: time
      tags:
      - meal
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMealList'
          description: ''
    post:
      operationId: meal_create
      description: Check for creation (PUT, POST)
      tags:
      - meal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
  /api/v2/meal/{id}/:
    get:
      operationId: meal_retrieve
      description: API endpoint for meal objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - meal
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
    put:
      operationId: meal_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - meal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
    patch:
      operationId: meal_partial_update
      description: API endpoint for meal objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - meal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMealRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
    delete:
      operationId: meal_destroy
      description: API endpoint for meal objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - meal
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/meal/{id}/nutritional_values/:
    get:
      operationId: meal_nutritional_values_retrieve
      description: Return an overview of the nutritional plan's values
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - meal
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
  /api/v2/mealitem/:
    get:
      operationId: mealitem_list
      description: API endpoint for meal item objects
      parameters:
      - in: query
        name: amount
        schema:
          type: number
      - in: query
        name: ingredient
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: meal
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: weight_unit
        schema:
          type: integer
      tags:
      - mealitem
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMealItemList'
          description: ''
    post:
      operationId: mealitem_create
      description: Check for creation (PUT, POST)
      tags:
      - mealitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealItemRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealItem'
          description: ''
  /api/v2/mealitem/{id}/:
    get:
      operationId: mealitem_retrieve
      description: API endpoint for meal item objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal item.
        required: true
      tags:
      - mealitem
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealItem'
          description: ''
    put:
      operationId: mealitem_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal item.
        required: true
      tags:
      - mealitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MealItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MealItemRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealItem'
          description: ''
    patch:
      operationId: mealitem_partial_update
      description: API endpoint for meal item objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal item.
        required: true
      tags:
      - mealitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMealItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMealItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMealItemRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealItem'
          description: ''
    delete:
      operationId: mealitem_destroy
      description: API endpoint for meal item objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal item.
        required: true
      tags:
      - mealitem
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/mealitem/{id}/nutritional_values/:
    get:
      operationId: mealitem_nutritional_values_retrieve
      description: Return an overview of the nutritional plan's values
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal item.
        required: true
      tags:
      - mealitem
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealItem'
          description: ''
  /api/v2/measurement/:
    get:
      operationId: measurement_list
      description: API endpoint for measurements
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: id
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: number
      tags:
      - measurement
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeasurementList'
          description: ''
    post:
      operationId: measurement_create
      description: API endpoint for measurements
      tags:
      - measurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
  /api/v2/measurement-category/:
    get:
      operationId: measurement_category_list
      description: API endpoint for measurement units
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: unit
        schema:
          type: string
      tags:
      - measurement-category
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUnitList'
          description: ''
    post:
      operationId: measurement_category_create
      description: API endpoint for measurement units
      tags:
      - measurement-category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnitRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
  /api/v2/measurement-category/{id}/:
    get:
      operationId: measurement_category_retrieve
      description: API endpoint for measurement units
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - measurement-category
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
    put:
      operationId: measurement_category_update
      description: API endpoint for measurement units
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - measurement-category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnitRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
    patch:
      operationId: measurement_category_partial_update
      description: API endpoint for measurement units
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - measurement-category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUnitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUnitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUnitRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
    delete:
      operationId: measurement_category_destroy
      description: API endpoint for measurement units
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - measurement-category
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/measurement/{id}/:
    get:
      operationId: measurement_retrieve
      description: API endpoint for measurements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement.
        required: true
      tags:
      - measurement
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
    put:
      operationId: measurement_update
      description: API endpoint for measurements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement.
        required: true
      tags:
      - measurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
    patch:
      operationId: measurement_partial_update
      description: API endpoint for measurements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement.
        required: true
      tags:
      - measurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeasurementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeasurementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeasurementRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: ''
    delete:
      operationId: measurement_destroy
      description: API endpoint for measurements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement.
        required: true
      tags:
      - measurement
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/min-app-version/:
    get:
      operationId: min_app_version_retrieve
      description: |-
        Returns the minimum required version of flutter app to access this server
        such as 1.4.2 or 3.0.0
      tags:
      - min-app-version
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v2/muscle/:
    get:
      operationId: muscle_list
      description: API endpoint for muscle objects
      parameters:
      - in: query
        name: is_front
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name_en
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - muscle
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMuscleList'
          description: ''
  /api/v2/muscle/{id}/:
    get:
      operationId: muscle_retrieve
      description: API endpoint for muscle objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this muscle.
        required: true
      tags:
      - muscle
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Muscle'
          description: ''
  /api/v2/nutritiondiary/:
    get:
      operationId: nutritiondiary_list
      description: API endpoint for a meal log item
      parameters:
      - in: query
        name: amount
        schema:
          type: number
      - in: query
        name: datetime
        schema:
          type: string
          format: date-time
      - in: query
        name: datetime__date
        schema:
          type: string
          format: date
      - in: query
        name: ingredient
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: plan
        schema:
          type: integer
      - in: query
        name: weight_unit
        schema:
          type: integer
      tags:
      - nutritiondiary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogItemList'
          description: ''
    post:
      operationId: nutritiondiary_create
      description: Check for creation (PUT, POST)
      tags:
      - nutritiondiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogItemRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItem'
          description: ''
  /api/v2/nutritiondiary/{id}/:
    get:
      operationId: nutritiondiary_retrieve
      description: API endpoint for a meal log item
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this log item.
        required: true
      tags:
      - nutritiondiary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItem'
          description: ''
    put:
      operationId: nutritiondiary_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this log item.
        required: true
      tags:
      - nutritiondiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogItemRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItem'
          description: ''
    patch:
      operationId: nutritiondiary_partial_update
      description: API endpoint for a meal log item
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this log item.
        required: true
      tags:
      - nutritiondiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLogItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogItemRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItem'
          description: ''
    delete:
      operationId: nutritiondiary_destroy
      description: API endpoint for a meal log item
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this log item.
        required: true
      tags:
      - nutritiondiary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/nutritiondiary/{id}/nutritional_values/:
    get:
      operationId: nutritiondiary_nutritional_values_retrieve
      description: Return an overview of the nutritional plan's values
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this log item.
        required: true
      tags:
      - nutritiondiary
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItem'
          description: ''
  /api/v2/nutritionplan/:
    get:
      operationId: nutritionplan_list
      description: |-
        API endpoint for nutrition plan objects. For a read-only endpoint with all
        the information of nutritional plan(s), see /api/v2/nutritionplaninfo/
      parameters:
      - in: query
        name: creation_date
        schema:
          type: string
          format: date
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: has_goal_calories
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - nutritionplan
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNutritionPlanList'
          description: ''
    post:
      operationId: nutritionplan_create
      description: |-
        API endpoint for nutrition plan objects. For a read-only endpoint with all
        the information of nutritional plan(s), see /api/v2/nutritionplaninfo/
      tags:
      - nutritionplan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NutritionPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NutritionPlanRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlan'
          description: ''
  /api/v2/nutritionplan/{id}/:
    get:
      operationId: nutritionplan_retrieve
      description: |-
        API endpoint for nutrition plan objects. For a read-only endpoint with all
        the information of nutritional plan(s), see /api/v2/nutritionplaninfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplan
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlan'
          description: ''
    put:
      operationId: nutritionplan_update
      description: |-
        API endpoint for nutrition plan objects. For a read-only endpoint with all
        the information of nutritional plan(s), see /api/v2/nutritionplaninfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NutritionPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NutritionPlanRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlan'
          description: ''
    patch:
      operationId: nutritionplan_partial_update
      description: |-
        API endpoint for nutrition plan objects. For a read-only endpoint with all
        the information of nutritional plan(s), see /api/v2/nutritionplaninfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNutritionPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNutritionPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNutritionPlanRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlan'
          description: ''
    delete:
      operationId: nutritionplan_destroy
      description: |-
        API endpoint for nutrition plan objects. For a read-only endpoint with all
        the information of nutritional plan(s), see /api/v2/nutritionplaninfo/
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplan
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/nutritionplan/{id}/nutritional_values/:
    get:
      operationId: nutritionplan_nutritional_values_retrieve
      description: Return an overview of the nutritional plan's values
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplan
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlan'
          description: ''
  /api/v2/nutritionplaninfo/:
    get:
      operationId: nutritionplaninfo_list
      description: |-
        Read-only info API endpoint for nutrition plan objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: query
        name: creation_date
        schema:
          type: string
          format: date
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: has_goal_calories
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - nutritionplaninfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNutritionPlanInfoList'
          description: ''
    post:
      operationId: nutritionplaninfo_create
      description: |-
        Read-only info API endpoint for nutrition plan objects. Returns nested data
        structures for more easy parsing.
      tags:
      - nutritionplaninfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionPlanInfoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NutritionPlanInfoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NutritionPlanInfoRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlanInfo'
          description: ''
  /api/v2/nutritionplaninfo/{id}/:
    get:
      operationId: nutritionplaninfo_retrieve
      description: |-
        Read-only info API endpoint for nutrition plan objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplaninfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlanInfo'
          description: ''
    put:
      operationId: nutritionplaninfo_update
      description: |-
        Read-only info API endpoint for nutrition plan objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplaninfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionPlanInfoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NutritionPlanInfoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NutritionPlanInfoRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlanInfo'
          description: ''
    patch:
      operationId: nutritionplaninfo_partial_update
      description: |-
        Read-only info API endpoint for nutrition plan objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplaninfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNutritionPlanInfoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNutritionPlanInfoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNutritionPlanInfoRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlanInfo'
          description: ''
    delete:
      operationId: nutritionplaninfo_destroy
      description: |-
        Read-only info API endpoint for nutrition plan objects. Returns nested data
        structures for more easy parsing.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplaninfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/nutritionplaninfo/{id}/nutritional_values/:
    get:
      operationId: nutritionplaninfo_nutritional_values_retrieve
      description: Return an overview of the nutritional plan's values
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this nutrition plan.
        required: true
      tags:
      - nutritionplaninfo
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionPlanInfo'
          description: ''
  /api/v2/public-templates/:
    get:
      operationId: public_templates_list
      description: API endpoint for public workout templates objects
      parameters:
      - in: query
        name: creation_date
        schema:
          type: string
          format: date
      - in: query
        name: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - public-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkoutList'
          description: ''
    post:
      operationId: public_templates_create
      description: API endpoint for public workout templates objects
      tags:
      - public-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /api/v2/public-templates/{id}/:
    get:
      operationId: public_templates_retrieve
      description: API endpoint for public workout templates objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - public-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    put:
      operationId: public_templates_update
      description: API endpoint for public workout templates objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - public-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    patch:
      operationId: public_templates_partial_update
      description: API endpoint for public workout templates objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - public-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    delete:
      operationId: public_templates_destroy
      description: API endpoint for public workout templates objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - public-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/register/:
    post:
      operationId: register_create
      description: API endpoint
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'
          description: ''
  /api/v2/schedule/:
    get:
      operationId: schedule_list
      description: API endpoint for schedule objects
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_loop
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - schedule
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleList'
          description: ''
    post:
      operationId: schedule_create
      description: API endpoint for schedule objects
      tags:
      - schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/v2/schedule/{id}/:
    get:
      operationId: schedule_retrieve
      description: API endpoint for schedule objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedule
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: schedule_update
      description: API endpoint for schedule objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: schedule_partial_update
      description: API endpoint for schedule objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScheduleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScheduleRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: schedule_destroy
      description: API endpoint for schedule objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedule
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/schedulestep/:
    get:
      operationId: schedulestep_list
      description: API endpoint for schedule step objects
      parameters:
      - in: query
        name: duration
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: schedule
        schema:
          type: integer
      - in: query
        name: workout
        schema:
          type: integer
      tags:
      - schedulestep
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleStepList'
          description: ''
    post:
      operationId: schedulestep_create
      description: Check for creation (PUT, POST)
      tags:
      - schedulestep
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleStepRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleStep'
          description: ''
  /api/v2/schedulestep/{id}/:
    get:
      operationId: schedulestep_retrieve
      description: API endpoint for schedule step objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule step.
        required: true
      tags:
      - schedulestep
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleStep'
          description: ''
    put:
      operationId: schedulestep_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule step.
        required: true
      tags:
      - schedulestep
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleStepRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleStep'
          description: ''
    patch:
      operationId: schedulestep_partial_update
      description: API endpoint for schedule step objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule step.
        required: true
      tags:
      - schedulestep
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScheduleStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScheduleStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScheduleStepRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleStep'
          description: ''
    delete:
      operationId: schedulestep_destroy
      description: API endpoint for schedule step objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule step.
        required: true
      tags:
      - schedulestep
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/schema:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v2/set/:
    get:
      operationId: set_list
      description: API endpoint for workout set objects
      parameters:
      - in: query
        name: exerciseday
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: sets
        schema:
          type: integer
      tags:
      - set
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSetList'
          description: ''
    post:
      operationId: set_create
      description: Check for creation (PUT, POST)
      tags:
      - set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
          description: ''
  /api/v2/set/{id}/:
    get:
      operationId: set_retrieve
      description: API endpoint for workout set objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this set.
        required: true
      tags:
      - set
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
          description: ''
    put:
      operationId: set_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this set.
        required: true
      tags:
      - set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
          description: ''
    patch:
      operationId: set_partial_update
      description: API endpoint for workout set objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this set.
        required: true
      tags:
      - set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSetRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
          description: ''
    delete:
      operationId: set_destroy
      description: API endpoint for workout set objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this set.
        required: true
      tags:
      - set
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/set/{id}/computed_settings/:
    get:
      operationId: set_computed_settings_retrieve
      description: Returns the synthetic settings for this set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this set.
        required: true
      tags:
      - set
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
          description: ''
  /api/v2/setting/:
    get:
      operationId: setting_list
      description: API endpoint for repetition setting objects
      parameters:
      - in: query
        name: exercise_base
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: reps
        schema:
          type: integer
      - in: query
        name: set
        schema:
          type: integer
      - in: query
        name: weight
        schema:
          type: number
      tags:
      - setting
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSettingList'
          description: ''
    post:
      operationId: setting_create
      description: Check for creation (PUT, POST)
      tags:
      - setting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SettingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SettingRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
          description: ''
  /api/v2/setting-repetitionunit/:
    get:
      operationId: setting_repetitionunit_list
      description: API endpoint for repetition units objects
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - setting-repetitionunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRepetitionUnitList'
          description: ''
  /api/v2/setting-repetitionunit/{id}/:
    get:
      operationId: setting_repetitionunit_retrieve
      description: API endpoint for repetition units objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this repetition unit.
        required: true
      tags:
      - setting-repetitionunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepetitionUnit'
          description: ''
  /api/v2/setting-weightunit/:
    get:
      operationId: setting_weightunit_list
      description: API endpoint for weight units objects
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - setting-weightunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoutineWeightUnitList'
          description: ''
  /api/v2/setting-weightunit/{id}/:
    get:
      operationId: setting_weightunit_retrieve
      description: API endpoint for weight units objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weight unit.
        required: true
      tags:
      - setting-weightunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutineWeightUnit'
          description: ''
  /api/v2/setting/{id}/:
    get:
      operationId: setting_retrieve
      description: API endpoint for repetition setting objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this setting.
        required: true
      tags:
      - setting
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
          description: ''
    put:
      operationId: setting_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this setting.
        required: true
      tags:
      - setting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SettingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SettingRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
          description: ''
    patch:
      operationId: setting_partial_update
      description: API endpoint for repetition setting objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this setting.
        required: true
      tags:
      - setting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSettingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSettingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSettingRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
          description: ''
    delete:
      operationId: setting_destroy
      description: API endpoint for repetition setting objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this setting.
        required: true
      tags:
      - setting
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/templates/:
    get:
      operationId: templates_list
      description: API endpoint for routine template objects
      parameters:
      - in: query
        name: creation_date
        schema:
          type: string
          format: date
      - in: query
        name: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkoutTemplateList'
          description: ''
  /api/v2/templates/{id}/:
    get:
      operationId: templates_retrieve
      description: API endpoint for routine template objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutTemplate'
          description: ''
  /api/v2/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v2/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v2/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/v2/userprofile/:
    get:
      operationId: userprofile_list
      description: Customized list view, that returns only the current user's data
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - userprofile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserprofileList'
          description: ''
    post:
      operationId: userprofile_create
      description: |-
        API endpoint for the user profile

        This endpoint works somewhat differently than the others since it always
        returns the data for the currently logged-in user's profile. To update
        the profile, use a POST request with the new data, not a PATCH.
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserprofileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserprofileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserprofileRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userprofile'
          description: ''
  /api/v2/userprofile/{id}/:
    get:
      operationId: userprofile_retrieve
      description: |-
        API endpoint for the user profile

        This endpoint works somewhat differently than the others since it always
        returns the data for the currently logged-in user's profile. To update
        the profile, use a POST request with the new data, not a PATCH.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userprofile'
          description: ''
    put:
      operationId: userprofile_update
      description: |-
        API endpoint for the user profile

        This endpoint works somewhat differently than the others since it always
        returns the data for the currently logged-in user's profile. To update
        the profile, use a POST request with the new data, not a PATCH.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserprofileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserprofileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserprofileRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userprofile'
          description: ''
    patch:
      operationId: userprofile_partial_update
      description: |-
        API endpoint for the user profile

        This endpoint works somewhat differently than the others since it always
        returns the data for the currently logged-in user's profile. To update
        the profile, use a POST request with the new data, not a PATCH.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserprofileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserprofileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserprofileRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userprofile'
          description: ''
    delete:
      operationId: userprofile_destroy
      description: |-
        API endpoint for the user profile

        This endpoint works somewhat differently than the others since it always
        returns the data for the currently logged-in user's profile. To update
        the profile, use a POST request with the new data, not a PATCH.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/userprofile/verify-email/:
    get:
      operationId: userprofile_verify_email_retrieve
      description: Return the username
      tags:
      - userprofile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userprofile'
          description: ''
  /api/v2/variation/:
    get:
      operationId: variation_list
      description: API endpoint for exercise variation objects
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - variation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseVariationList'
          description: ''
    post:
      operationId: variation_create
      description: API endpoint for exercise variation objects
      tags:
      - variation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVariation'
          description: ''
  /api/v2/variation/{id}/:
    get:
      operationId: variation_retrieve
      description: API endpoint for exercise variation objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variation.
        required: true
      tags:
      - variation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVariation'
          description: ''
    put:
      operationId: variation_update
      description: API endpoint for exercise variation objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variation.
        required: true
      tags:
      - variation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVariation'
          description: ''
    patch:
      operationId: variation_partial_update
      description: API endpoint for exercise variation objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variation.
        required: true
      tags:
      - variation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVariation'
          description: ''
    delete:
      operationId: variation_destroy
      description: API endpoint for exercise variation objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variation.
        required: true
      tags:
      - variation
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/version/:
    get:
      operationId: version_retrieve
      description: Returns the application's version
      tags:
      - version
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v2/video/:
    get:
      operationId: video_list
      description: API endpoint for exercise video objects
      parameters:
      - in: query
        name: exercise_base
        schema:
          type: integer
      - in: query
        name: is_main
        schema:
          type: boolean
      - in: query
        name: license
        schema:
          type: integer
      - in: query
        name: license_author
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - video
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseVideoList'
          description: ''
    post:
      operationId: video_create
      description: API endpoint for exercise video objects
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseVideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseVideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseVideoRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVideo'
          description: ''
  /api/v2/video/{id}/:
    get:
      operationId: video_retrieve
      description: API endpoint for exercise video objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise video.
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVideo'
          description: ''
    put:
      operationId: video_update
      description: API endpoint for exercise video objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise video.
        required: true
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseVideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseVideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseVideoRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVideo'
          description: ''
    patch:
      operationId: video_partial_update
      description: API endpoint for exercise video objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise video.
        required: true
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseVideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseVideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseVideoRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseVideo'
          description: ''
    delete:
      operationId: video_destroy
      description: API endpoint for exercise video objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise video.
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/weightentry/:
    get:
      operationId: weightentry_list
      description: API endpoint for nutrition plan objects
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: weight
        schema:
          type: number
      tags:
      - weightentry
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWeightEntryList'
          description: ''
    post:
      operationId: weightentry_create
      description: API endpoint for nutrition plan objects
      tags:
      - weightentry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeightEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeightEntryRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightEntry'
          description: ''
  /api/v2/weightentry/{id}/:
    get:
      operationId: weightentry_retrieve
      description: API endpoint for nutrition plan objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Weight entry.
        required: true
      tags:
      - weightentry
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightEntry'
          description: ''
    put:
      operationId: weightentry_update
      description: API endpoint for nutrition plan objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Weight entry.
        required: true
      tags:
      - weightentry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeightEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeightEntryRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightEntry'
          description: ''
    patch:
      operationId: weightentry_partial_update
      description: API endpoint for nutrition plan objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Weight entry.
        required: true
      tags:
      - weightentry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWeightEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWeightEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWeightEntryRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightEntry'
          description: ''
    delete:
      operationId: weightentry_destroy
      description: API endpoint for nutrition plan objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Weight entry.
        required: true
      tags:
      - weightentry
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/weightunit/:
    get:
      operationId: weightunit_list
      description: API endpoint for weight unit objects
      parameters:
      - in: query
        name: language
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - weightunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWeightUnitList'
          description: ''
  /api/v2/weightunit/{id}/:
    get:
      operationId: weightunit_retrieve
      description: API endpoint for weight unit objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this weight unit.
        required: true
      tags:
      - weightunit
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeightUnit'
          description: ''
  /api/v2/workout/:
    get:
      operationId: workout_list
      description: API endpoint for routine objects
      parameters:
      - in: query
        name: creation_date
        schema:
          type: string
          format: date
      - in: query
        name: description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - workout
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkoutList'
          description: ''
    post:
      operationId: workout_create
      description: API endpoint for routine objects
      tags:
      - workout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /api/v2/workout/{id}/:
    get:
      operationId: workout_retrieve
      description: API endpoint for routine objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - workout
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    put:
      operationId: workout_update
      description: API endpoint for routine objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - workout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    patch:
      operationId: workout_partial_update
      description: API endpoint for routine objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - workout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    delete:
      operationId: workout_destroy
      description: API endpoint for routine objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - workout
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/workout/{id}/canonical_representation/:
    get:
      operationId: workout_canonical_representation_retrieve
      description: |-
        Output the canonical representation of a workout

        This is basically the same form as used in the application
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - workout
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /api/v2/workout/{id}/log_data/:
    get:
      operationId: workout_log_data_retrieve
      description: |-
        Returns processed log data for graphing

        Basically, these are the logs for the workout and for a specific exercise base.

        If on a day there are several entries with the same number of repetitions,
        but different weights, only the entry with the higher weight is shown in the chart
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout.
        required: true
      tags:
      - workout
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /api/v2/workoutlog/:
    get:
      operationId: workoutlog_list
      description: API endpoint for workout log objects
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: exercise_base
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repetition_unit
        schema:
          type: integer
      - in: query
        name: reps
        schema:
          type: integer
      - in: query
        name: weight
        schema:
          type: number
      - in: query
        name: weight_unit
        schema:
          type: integer
      - in: query
        name: workout
        schema:
          type: integer
      tags:
      - workoutlog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkoutLogList'
          description: ''
    post:
      operationId: workoutlog_create
      description: Check for creation (PUT, POST)
      tags:
      - workoutlog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutLogRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutLog'
          description: ''
  /api/v2/workoutlog/{id}/:
    get:
      operationId: workoutlog_retrieve
      description: API endpoint for workout log objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout log.
        required: true
      tags:
      - workoutlog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutLog'
          description: ''
    put:
      operationId: workoutlog_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout log.
        required: true
      tags:
      - workoutlog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutLogRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutLog'
          description: ''
    patch:
      operationId: workoutlog_partial_update
      description: API endpoint for workout log objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout log.
        required: true
      tags:
      - workoutlog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutLogRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutLog'
          description: ''
    delete:
      operationId: workoutlog_destroy
      description: API endpoint for workout log objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout log.
        required: true
      tags:
      - workoutlog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/workoutsession/:
    get:
      operationId: workoutsession_list
      description: API endpoint for workout sessions objects
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: impression
        schema:
          type: string
          title: General impression
          enum:
          - '1'
          - '2'
          - '3'
        description: |-
          Your impression about this workout session. Did you exercise as well as you could?

          * `1` - Bad
          * `2` - Neutral
          * `3` - Good
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: notes
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: time_end
        schema:
          type: string
          format: time
      - in: query
        name: time_start
        schema:
          type: string
          format: time
      - in: query
        name: workout
        schema:
          type: integer
      tags:
      - workoutsession
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkoutSessionList'
          description: ''
    post:
      operationId: workoutsession_create
      description: Check for creation (PUT, POST)
      tags:
      - workoutsession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutSessionRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutSession'
          description: ''
  /api/v2/workoutsession/{id}/:
    get:
      operationId: workoutsession_retrieve
      description: API endpoint for workout sessions objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout session.
        required: true
      tags:
      - workoutsession
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutSession'
          description: ''
    put:
      operationId: workoutsession_update
      description: Check for updates (PUT, PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout session.
        required: true
      tags:
      - workoutsession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkoutSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkoutSessionRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutSession'
          description: ''
    patch:
      operationId: workoutsession_partial_update
      description: API endpoint for workout sessions objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout session.
        required: true
      tags:
      - workoutsession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkoutSessionRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutSession'
          description: ''
    delete:
      operationId: workoutsession_destroy
      description: API endpoint for workout sessions objects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this workout session.
        required: true
      tags:
      - workoutsession
      security:
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Day:
      type: object
      description: Workout day serializer
      properties:
        id:
          type: integer
          readOnly: true
        training:
          type: integer
        description:
          type: string
          description: A description of what is done on this day (e.g. "Pull day")
            or what body parts are trained (e.g. "Arms and abs")
          maxLength: 100
        day:
          type: array
          items:
            type: integer
      required:
      - day
      - description
      - id
      - training
    DayRequest:
      type: object
      description: Workout day serializer
      properties:
        training:
          type: integer
        description:
          type: string
          minLength: 1
          description: A description of what is done on this day (e.g. "Pull day")
            or what body parts are trained (e.g. "Arms and abs")
          maxLength: 100
        day:
          type: array
          items:
            type: integer
      required:
      - day
      - description
      - training
    DaysOfWeek:
      type: object
      description: DaysOfWeek serializer
      properties:
        day_of_week:
          type: string
          title: Day of the week
          maxLength: 9
      required:
      - day_of_week
    DeletionLog:
      type: object
      description: Deletion log serializer
      properties:
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
        uuid:
          type: string
          format: uuid
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          description: UUID of the object replaced by the deleted one. At the moment
            only available for exercise bases
        timestamp:
          type: string
          format: date-time
          readOnly: true
        comment:
          type: string
          maxLength: 200
      required:
      - model_type
      - replaced_by
      - timestamp
      - uuid
    Equipment:
      type: object
      description: Equipment serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Exercise:
      type: object
      description: |-
        Exercise serializer

        The fields from the new ExerciseBase are retrieved here as to retain
        compatibility with the old model where all the fields where in Exercise.
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        exercise_base:
          type: integer
          title: ExerciseBase
        description:
          type: string
          minLength: 40
          maxLength: 2000
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        category:
          type: integer
        muscles:
          type: array
          items:
            type: integer
        muscles_secondary:
          type: array
          items:
            type: integer
        equipment:
          type: array
          items:
            type: integer
        language:
          type: integer
        license:
          type: integer
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        variations:
          type: array
          items:
            type: integer
        author_history:
          type: array
          items:
            type: string
      required:
      - author_history
      - category
      - created
      - description
      - equipment
      - id
      - language
      - muscles
      - muscles_secondary
      - name
      - uuid
      - variations
    ExerciseAlias:
      type: object
      description: ExerciseAlias serializer
      properties:
        id:
          type: integer
          readOnly: true
        exercise:
          type: integer
        alias:
          type: string
          title: Alias for an exercise
          maxLength: 200
      required:
      - alias
      - exercise
      - id
    ExerciseAliasRequest:
      type: object
      description: ExerciseAlias serializer
      properties:
        exercise:
          type: integer
        alias:
          type: string
          minLength: 1
          title: Alias for an exercise
          maxLength: 200
      required:
      - alias
      - exercise
    ExerciseBase:
      type: object
      description: Exercise base serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        last_update:
          type: string
          format: date-time
          readOnly: true
          title: Date
        category:
          type: integer
        muscles:
          type: array
          items:
            type: integer
            title: Primary muscles
          title: Primary muscles
        muscles_secondary:
          type: array
          items:
            type: integer
            title: Secondary muscles
          title: Secondary muscles
        equipment:
          type: array
          items:
            type: integer
        variations:
          type: integer
          nullable: true
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
      required:
      - category
      - created
      - id
      - last_update
      - uuid
    ExerciseBaseInfo:
      type: object
      description: Exercise base info serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        last_update:
          type: string
          format: date-time
          readOnly: true
          title: Date
        last_update_global:
          type: string
          format: date-time
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/ExerciseCategory'
          readOnly: true
        muscles:
          type: array
          items:
            $ref: '#/components/schemas/Muscle'
          readOnly: true
        muscles_secondary:
          type: array
          items:
            $ref: '#/components/schemas/Muscle'
          readOnly: true
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
          readOnly: true
        license:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        images:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseImage'
          readOnly: true
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseTranslationBaseInfo'
          readOnly: true
        variations:
          type: integer
          readOnly: true
        videos:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseVideo'
          readOnly: true
        author_history:
          type: array
          items:
            type: string
        total_authors_history:
          type: array
          items:
            type: string
      required:
      - author_history
      - category
      - created
      - equipment
      - exercises
      - id
      - images
      - last_update
      - last_update_global
      - license
      - muscles
      - muscles_secondary
      - total_authors_history
      - uuid
      - variations
      - videos
    ExerciseBaseRequest:
      type: object
      description: Exercise base serializer
      properties:
        category:
          type: integer
        muscles:
          type: array
          items:
            type: integer
            title: Primary muscles
          title: Primary muscles
        muscles_secondary:
          type: array
          items:
            type: integer
            title: Secondary muscles
          title: Secondary muscles
        equipment:
          type: array
          items:
            type: integer
        variations:
          type: integer
          nullable: true
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
      required:
      - category
    ExerciseCategory:
      type: object
      description: ExerciseCategory serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    ExerciseComment:
      type: object
      description: ExerciseComment serializer
      properties:
        id:
          type: integer
          readOnly: true
        exercise:
          type: integer
        comment:
          type: string
          description: A comment about how to correctly do this exercise.
          maxLength: 200
      required:
      - comment
      - exercise
      - id
    ExerciseCommentRequest:
      type: object
      description: ExerciseComment serializer
      properties:
        exercise:
          type: integer
        comment:
          type: string
          minLength: 1
          description: A comment about how to correctly do this exercise.
          maxLength: 200
      required:
      - comment
      - exercise
    ExerciseImage:
      type: object
      description: ExerciseImage serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        exercise_base:
          type: integer
          title: Exercise
        exercise_base_uuid:
          type: string
          format: uuid
          readOnly: true
        image:
          type: string
          format: uri
          description: Only PNG and JPEG formats are supported
        is_main:
          type: boolean
          title: Main picture
          description: Tick the box if you want to set this image as the main one
            for the exercise (will be shown e.g. in the search). The first image is
            automatically marked by the system.
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: |-
            The art style of your image

            * `1` - Line
            * `2` - 3D
            * `3` - Low-poly
            * `4` - Photo
            * `5` - Other
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
        author_history:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - author_history
      - exercise_base
      - exercise_base_uuid
      - id
      - image
      - uuid
    ExerciseImageRequest:
      type: object
      description: ExerciseImage serializer
      properties:
        exercise_base:
          type: integer
          title: Exercise
        image:
          type: string
          format: binary
          description: Only PNG and JPEG formats are supported
        is_main:
          type: boolean
          title: Main picture
          description: Tick the box if you want to set this image as the main one
            for the exercise (will be shown e.g. in the search). The first image is
            automatically marked by the system.
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: |-
            The art style of your image

            * `1` - Line
            * `2` - 3D
            * `3` - Low-poly
            * `4` - Photo
            * `5` - Other
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - exercise_base
      - image
    ExerciseInfo:
      type: object
      description: Exercise info serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseInfoAlias'
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        exercise_base_id:
          type: integer
          title: ExerciseBase
          readOnly: true
        description:
          type: string
          minLength: 40
          maxLength: 2000
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        category:
          allOf:
          - $ref: '#/components/schemas/ExerciseCategory'
          readOnly: true
        muscles:
          type: array
          items:
            $ref: '#/components/schemas/Muscle'
          readOnly: true
        muscles_secondary:
          type: array
          items:
            $ref: '#/components/schemas/Muscle'
          readOnly: true
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
          readOnly: true
        language:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        license:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        images:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseImage'
          readOnly: true
        videos:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseVideo'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseComment'
          readOnly: true
        variations:
          type: array
          items:
            type: string
          readOnly: true
        author_history:
          type: array
          items:
            type: string
      required:
      - aliases
      - author_history
      - category
      - comments
      - created
      - description
      - equipment
      - exercise_base_id
      - id
      - images
      - language
      - license
      - muscles
      - muscles_secondary
      - name
      - uuid
      - variations
      - videos
    ExerciseInfoAlias:
      type: object
      description: Exercise alias serializer for info endpoint
      properties:
        id:
          type: integer
          readOnly: true
        alias:
          type: string
          title: Alias for an exercise
          maxLength: 200
      required:
      - alias
      - id
    ExerciseSearchItemResponse:
      type: object
      properties:
        id:
          type: integer
        base_id:
          type: integer
        name:
          type: string
        category:
          type: string
        image:
          type: string
        image_thumbnail:
          type: string
      required:
      - base_id
      - category
      - id
      - image
      - image_thumbnail
      - name
    ExerciseSearchResponse:
      type: object
      properties:
        value:
          type: string
        data:
          $ref: '#/components/schemas/ExerciseSearchItemResponse'
      required:
      - data
      - value
    ExerciseTranslation:
      type: object
      description: Exercise translation serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        exercise_base:
          type: integer
        description:
          type: string
          minLength: 40
          maxLength: 2000
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        language:
          type: integer
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
      required:
      - created
      - description
      - exercise_base
      - id
      - language
      - name
      - uuid
    ExerciseTranslationBaseInfo:
      type: object
      description: Exercise translation serializer for the base info endpoint
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        exercise_base:
          type: integer
        description:
          type: string
          minLength: 40
          maxLength: 2000
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        language:
          type: integer
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseInfoAlias'
          readOnly: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseComment'
          readOnly: true
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
        author_history:
          type: array
          items:
            type: string
      required:
      - aliases
      - author_history
      - created
      - description
      - exercise_base
      - id
      - language
      - name
      - notes
      - uuid
    ExerciseTranslationRequest:
      type: object
      description: Exercise translation serializer
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        exercise_base:
          type: integer
        description:
          type: string
          minLength: 40
          maxLength: 2000
        language:
          type: integer
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
      required:
      - description
      - exercise_base
      - language
      - name
    ExerciseVariation:
      type: object
      description: Exercise variation serializer
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    ExerciseVideo:
      type: object
      description: ExerciseVideo serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        exercise_base:
          type: integer
          title: Exercise
        exercise_base_uuid:
          type: string
          format: uuid
          readOnly: true
        video:
          type: string
          format: uri
        is_main:
          type: boolean
          title: Main video
        size:
          type: integer
          readOnly: true
        duration:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        width:
          type: integer
          readOnly: true
        height:
          type: integer
          readOnly: true
        codec:
          type: string
          readOnly: true
        codec_long:
          type: string
          readOnly: true
          title: Codec, long name
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
        author_history:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - author_history
      - codec
      - codec_long
      - duration
      - exercise_base
      - exercise_base_uuid
      - height
      - id
      - size
      - uuid
      - video
      - width
    ExerciseVideoRequest:
      type: object
      description: ExerciseVideo serializer
      properties:
        exercise_base:
          type: integer
          title: Exercise
        video:
          type: string
          format: binary
        is_main:
          type: boolean
          title: Main video
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - exercise_base
      - video
    FreetimeIntensityEnum:
      enum:
      - '1'
      - '2'
      - '3'
      type: string
      description: |-
        * `1` - Low
        * `2` - Medium
        * `3` - High
    GenderEnum:
      enum:
      - '1'
      - '2'
      type: string
      description: |-
        * `1` - Male
        * `2` - Female
    Image:
      type: object
      description: Exercise serializer
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        image:
          type: string
          format: uri
          description: Only PNG and JPEG formats are supported
        description:
          type: string
          maxLength: 1000
        height:
          type: integer
          readOnly: true
        width:
          type: integer
          readOnly: true
      required:
      - height
      - id
      - image
      - width
    ImageRequest:
      type: object
      description: Exercise serializer
      properties:
        date:
          type: string
          format: date
        image:
          type: string
          format: binary
          description: Only PNG and JPEG formats are supported
        description:
          type: string
          maxLength: 1000
      required:
      - image
    ImpressionEnum:
      enum:
      - '1'
      - '2'
      - '3'
      type: string
      description: |-
        * `1` - Bad
        * `2` - Neutral
        * `3` - Good
    Ingredient:
      type: object
      description: Ingredient serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          nullable: true
          maxLength: 200
        name:
          type: string
          maxLength: 200
          minLength: 3
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        last_update:
          type: string
          format: date-time
          readOnly: true
          title: Date
        energy:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: In kcal per 100g
        protein:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        carbohydrates:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        carbohydrates_sugar:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          title: Sugar content in carbohydrates
          description: In g per 100g of product
        fat:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        fat_saturated:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          title: Saturated fat content in fats
          description: In g per 100g of product
        fibres:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          description: In g per 100g of product
        sodium:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          description: In g per 100g of product
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
        language:
          type: integer
          readOnly: true
      required:
      - carbohydrates
      - created
      - energy
      - fat
      - id
      - language
      - last_update
      - name
      - protein
      - uuid
    IngredientImage:
      type: object
      description: Image serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        ingredient_id:
          type: integer
          nullable: true
          readOnly: true
        ingredient_uuid:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          description: Only PNG and JPEG formats are supported
        created:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        width:
          type: integer
          readOnly: true
        height:
          type: integer
          readOnly: true
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - created
      - height
      - id
      - image
      - ingredient_id
      - ingredient_uuid
      - last_update
      - size
      - uuid
      - width
    IngredientImageRequest:
      type: object
      description: Image serializer
      properties:
        image:
          type: string
          format: binary
          description: Only PNG and JPEG formats are supported
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - image
      - size
    IngredientInfo:
      type: object
      description: Ingredient info serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          nullable: true
          maxLength: 200
        name:
          type: string
          maxLength: 200
          minLength: 3
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date
        last_update:
          type: string
          format: date-time
          readOnly: true
          title: Date
        energy:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: In kcal per 100g
        protein:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        carbohydrates:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        carbohydrates_sugar:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          title: Sugar content in carbohydrates
          description: In g per 100g of product
        fat:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        fat_saturated:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          title: Saturated fat content in fats
          description: In g per 100g of product
        fibres:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          description: In g per 100g of product
        sodium:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          description: In g per 100g of product
        weight_units:
          type: array
          items:
            $ref: '#/components/schemas/IngredientWeightUnitInfo'
        language:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        image:
          allOf:
          - $ref: '#/components/schemas/IngredientInfoImage'
          readOnly: true
        license:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - carbohydrates
      - created
      - energy
      - fat
      - id
      - image
      - language
      - last_update
      - license
      - name
      - protein
      - uuid
      - weight_units
    IngredientInfoImage:
      type: object
      description: Image serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        image:
          type: string
          format: uri
          description: Only PNG and JPEG formats are supported
        created:
          type: string
          format: date-time
          readOnly: true
        last_update:
          type: string
          format: date-time
          readOnly: true
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        width:
          type: integer
          readOnly: true
        height:
          type: integer
          readOnly: true
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - created
      - height
      - id
      - image
      - last_update
      - size
      - uuid
      - width
    IngredientInfoImageRequest:
      type: object
      description: Image serializer
      properties:
        image:
          type: string
          format: binary
          description: Only PNG and JPEG formats are supported
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - image
      - size
    IngredientInfoRequest:
      type: object
      description: Ingredient info serializer
      properties:
        code:
          type: string
          nullable: true
          maxLength: 200
        name:
          type: string
          minLength: 3
          maxLength: 200
        energy:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: In kcal per 100g
        protein:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        carbohydrates:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        carbohydrates_sugar:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          title: Sugar content in carbohydrates
          description: In g per 100g of product
        fat:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          description: In g per 100g of product
        fat_saturated:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          title: Saturated fat content in fats
          description: In g per 100g of product
        fibres:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          description: In g per 100g of product
        sodium:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,3})?$
          nullable: true
          description: In g per 100g of product
        weight_units:
          type: array
          items:
            $ref: '#/components/schemas/IngredientWeightUnitInfoRequest'
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
      required:
      - carbohydrates
      - energy
      - fat
      - name
      - protein
      - weight_units
    IngredientSearchItemResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          type: string
        image:
          type: string
        image_thumbnail:
          type: string
      required:
      - category
      - id
      - image
      - image_thumbnail
      - name
    IngredientSearchResponse:
      type: object
      properties:
        value:
          type: string
        data:
          $ref: '#/components/schemas/IngredientSearchItemResponse'
      required:
      - data
      - value
    IngredientWeightUnit:
      type: object
      description: IngredientWeightUnit serializer
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Unit amount, e.g. "1 Cup" or "1/2 spoon"
        gram:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Amount in grams
        ingredient:
          type: integer
          readOnly: true
        unit:
          type: integer
          title: Weight unit
      required:
      - gram
      - id
      - ingredient
      - unit
    IngredientWeightUnitInfo:
      type: object
      description: IngredientWeightUnit info serializer
      properties:
        gram:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Amount in grams
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Unit amount, e.g. "1 Cup" or "1/2 spoon"
        unit:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - gram
      - unit
    IngredientWeightUnitInfoRequest:
      type: object
      description: IngredientWeightUnit info serializer
      properties:
        gram:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Amount in grams
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Unit amount, e.g. "1 Cup" or "1/2 spoon"
      required:
      - gram
    IngredientWeightUnitRequest:
      type: object
      description: IngredientWeightUnit serializer
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Unit amount, e.g. "1 Cup" or "1/2 spoon"
        gram:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Amount in grams
        unit:
          type: integer
          title: Weight unit
      required:
      - gram
      - unit
    Language:
      type: object
      description: Language serializer
      properties:
        id:
          type: integer
          readOnly: true
        short_name:
          type: string
          title: Language short name
          description: ISO 639-1
          maxLength: 2
        full_name:
          type: string
          title: Language full name
          maxLength: 30
      required:
      - full_name
      - id
      - short_name
    License:
      type: object
      description: License serializer
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          description: If a license has been localized, e.g. the Creative Commons
            licenses for the different countries, add them as separate entries here.
          maxLength: 60
        short_name:
          type: string
          title: Short name, e.g. CC-BY-SA 3
          maxLength: 15
        url:
          type: string
          format: uri
          nullable: true
          title: Link
          description: Link to license text or other information
          maxLength: 200
      required:
      - full_name
      - id
      - short_name
    LogItem:
      type: object
      description: LogItem serializer
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
          title: Nutrition plan
        meal:
          type: integer
          nullable: true
        ingredient:
          type: integer
        weight_unit:
          type: integer
          nullable: true
        datetime:
          type: string
          format: date-time
          title: Date and Time (Approx.)
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - amount
      - id
      - ingredient
      - plan
    LogItemRequest:
      type: object
      description: LogItem serializer
      properties:
        plan:
          type: integer
          title: Nutrition plan
        meal:
          type: integer
          nullable: true
        ingredient:
          type: integer
        weight_unit:
          type: integer
          nullable: true
        datetime:
          type: string
          format: date-time
          title: Date and Time (Approx.)
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - amount
      - ingredient
      - plan
    Meal:
      type: object
      description: Meal serializer
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
          title: Nutrition plan
        order:
          type: integer
          readOnly: true
        time:
          type: string
          format: time
          nullable: true
          title: Time (approx)
        name:
          type: string
          description: Give meals a textual description / name such as "Breakfast"
            or "after workout"
          maxLength: 25
      required:
      - id
      - order
      - plan
    MealInfo:
      type: object
      description: Meal info serializer
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        time:
          type: string
          format: time
          nullable: true
          title: Time (approx)
        name:
          type: string
          description: Give meals a textual description / name such as "Breakfast"
            or "after workout"
          maxLength: 25
        meal_items:
          type: array
          items:
            $ref: '#/components/schemas/MealItemInfo'
        nutritional_values:
          allOf:
          - $ref: '#/components/schemas/NutritionalValues'
          readOnly: true
      required:
      - id
      - meal_items
      - nutritional_values
      - order
      - plan
    MealInfoRequest:
      type: object
      description: Meal info serializer
      properties:
        time:
          type: string
          format: time
          nullable: true
          title: Time (approx)
        name:
          type: string
          description: Give meals a textual description / name such as "Breakfast"
            or "after workout"
          maxLength: 25
        meal_items:
          type: array
          items:
            $ref: '#/components/schemas/MealItemInfoRequest'
      required:
      - meal_items
    MealItem:
      type: object
      description: MealItem serializer
      properties:
        id:
          type: integer
          readOnly: true
        meal:
          type: integer
          title: Nutrition plan
        ingredient:
          type: integer
        weight_unit:
          type: integer
          nullable: true
        order:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - amount
      - id
      - ingredient
      - meal
      - order
    MealItemInfo:
      type: object
      description: Meal Item info serializer
      properties:
        id:
          type: integer
          readOnly: true
        meal:
          type: integer
          readOnly: true
        ingredient:
          type: integer
          readOnly: true
        ingredient_obj:
          allOf:
          - $ref: '#/components/schemas/IngredientInfo'
          readOnly: true
        weight_unit:
          type: integer
          readOnly: true
        weight_unit_obj:
          allOf:
          - $ref: '#/components/schemas/IngredientWeightUnit'
          readOnly: true
        image:
          allOf:
          - $ref: '#/components/schemas/IngredientImage'
          readOnly: true
        order:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - amount
      - id
      - image
      - ingredient
      - ingredient_obj
      - meal
      - order
      - weight_unit
      - weight_unit_obj
    MealItemInfoRequest:
      type: object
      description: Meal Item info serializer
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - amount
    MealItemRequest:
      type: object
      description: MealItem serializer
      properties:
        meal:
          type: integer
          title: Nutrition plan
        ingredient:
          type: integer
        weight_unit:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - amount
      - ingredient
      - meal
    MealRequest:
      type: object
      description: Meal serializer
      properties:
        plan:
          type: integer
          title: Nutrition plan
        time:
          type: string
          format: time
          nullable: true
          title: Time (approx)
        name:
          type: string
          description: Give meals a textual description / name such as "Breakfast"
            or "after workout"
          maxLength: 25
      required:
      - plan
    Measurement:
      type: object
      description: Measurement serializer
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
          title: User
        date:
          type: string
          format: date
        value:
          type: number
          format: double
          maximum: 5000
          minimum: 0
        notes:
          type: string
          title: Description
          maxLength: 100
      required:
      - category
      - id
      - value
    MeasurementRequest:
      type: object
      description: Measurement serializer
      properties:
        category:
          type: integer
          title: User
        date:
          type: string
          format: date
        value:
          type: number
          format: double
          maximum: 5000
          minimum: 0
        notes:
          type: string
          title: Description
          maxLength: 100
      required:
      - category
      - value
    ModelTypeEnum:
      enum:
      - base
      - translation
      - image
      - video
      type: string
      description: |-
        * `base` - base
        * `translation` - translation
        * `image` - image
        * `video` - video
    Muscle:
      type: object
      description: Muscle serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: In latin, e.g. "Pectoralis major"
          maxLength: 50
        name_en:
          type: string
          title: Alternative name
          description: A more basic name for the muscle
          maxLength: 50
        is_front:
          type: boolean
        image_url_main:
          type: string
        image_url_secondary:
          type: string
      required:
      - id
      - image_url_main
      - image_url_secondary
      - name
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          description: If a license has been localized, e.g. the Creative Commons
            licenses for the different countries, add them as separate entries here.
          maxLength: 60
        short_name:
          type: string
          title: Short name, e.g. CC-BY-SA 3
          maxLength: 15
        url:
          type: string
          format: uri
          nullable: true
          title: Link
          description: Link to license text or other information
          maxLength: 200
      required:
      - full_name
      - id
      - short_name
    NestedRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
      required:
      - name
    NullEnum:
      enum:
      - null
    NutritionPlan:
      type: object
      description: Nutritional plan serializer
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date
          readOnly: true
        description:
          type: string
          description: A description of the goal of the plan, e.g. "Gain mass" or
            "Prepare for summer"
          maxLength: 80
        only_logging:
          type: boolean
        goal_energy:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_protein:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_carbohydrates:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_fat:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - creation_date
      - id
    NutritionPlanInfo:
      type: object
      description: Nutritional plan info serializer
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date
          readOnly: true
        description:
          type: string
          description: A description of the goal of the plan, e.g. "Gain mass" or
            "Prepare for summer"
          maxLength: 80
        meals:
          type: array
          items:
            $ref: '#/components/schemas/MealInfo'
      required:
      - creation_date
      - id
      - meals
    NutritionPlanInfoRequest:
      type: object
      description: Nutritional plan info serializer
      properties:
        description:
          type: string
          description: A description of the goal of the plan, e.g. "Gain mass" or
            "Prepare for summer"
          maxLength: 80
        meals:
          type: array
          items:
            $ref: '#/components/schemas/MealInfoRequest'
      required:
      - meals
    NutritionPlanRequest:
      type: object
      description: Nutritional plan serializer
      properties:
        description:
          type: string
          description: A description of the goal of the plan, e.g. "Gain mass" or
            "Prepare for summer"
          maxLength: 80
        only_logging:
          type: boolean
        goal_energy:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_protein:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_carbohydrates:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_fat:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    NutritionalValues:
      type: object
      description: Nutritional values serializer
      properties:
        energy:
          type: number
          format: double
        protein:
          type: number
          format: double
        carbohydrates:
          type: number
          format: double
        carbohydrates_sugar:
          type: number
          format: double
        fat:
          type: number
          format: double
        fat_saturated:
          type: number
          format: double
        fibres:
          type: number
          format: double
        sodium:
          type: number
          format: double
      required:
      - carbohydrates
      - carbohydrates_sugar
      - energy
      - fat
      - fat_saturated
      - fibres
      - protein
      - sodium
    NutritionalValuesRequest:
      type: object
      description: Nutritional values serializer
      properties:
        energy:
          type: number
          format: double
        protein:
          type: number
          format: double
        carbohydrates:
          type: number
          format: double
        carbohydrates_sugar:
          type: number
          format: double
        fat:
          type: number
          format: double
        fat_saturated:
          type: number
          format: double
        fibres:
          type: number
          format: double
        sodium:
          type: number
          format: double
      required:
      - carbohydrates
      - carbohydrates_sugar
      - energy
      - fat
      - fat_saturated
      - fibres
      - protein
      - sodium
    PaginatedDayList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Day'
    PaginatedDaysOfWeekList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DaysOfWeek'
    PaginatedDeletionLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeletionLog'
    PaginatedEquipmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
    PaginatedExerciseAliasList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseAlias'
    PaginatedExerciseBaseInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseBaseInfo'
    PaginatedExerciseBaseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseBase'
    PaginatedExerciseCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseCategory'
    PaginatedExerciseCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseComment'
    PaginatedExerciseImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseImage'
    PaginatedExerciseInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseInfo'
    PaginatedExerciseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'
    PaginatedExerciseTranslationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseTranslation'
    PaginatedExerciseVariationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseVariation'
    PaginatedExerciseVideoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseVideo'
    PaginatedImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    PaginatedIngredientImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IngredientImage'
    PaginatedIngredientInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IngredientInfo'
    PaginatedIngredientList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    PaginatedIngredientWeightUnitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IngredientWeightUnit'
    PaginatedLanguageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Language'
    PaginatedLicenseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/License'
    PaginatedLogItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogItem'
    PaginatedMealItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MealItem'
    PaginatedMealList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Meal'
    PaginatedMeasurementList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
    PaginatedMuscleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Muscle'
    PaginatedNutritionPlanInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NutritionPlanInfo'
    PaginatedNutritionPlanList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NutritionPlan'
    PaginatedRepetitionUnitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RepetitionUnit'
    PaginatedRoutineWeightUnitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoutineWeightUnit'
    PaginatedScheduleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
    PaginatedScheduleStepList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleStep'
    PaginatedSetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Set'
    PaginatedSettingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Setting'
    PaginatedUnitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
    PaginatedUserprofileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Userprofile'
    PaginatedWeightEntryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WeightEntry'
    PaginatedWeightUnitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WeightUnit'
    PaginatedWorkoutList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Workout'
    PaginatedWorkoutLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutLog'
    PaginatedWorkoutSessionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutSession'
    PaginatedWorkoutTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutTemplate'
    PatchedDayRequest:
      type: object
      description: Workout day serializer
      properties:
        training:
          type: integer
        description:
          type: string
          minLength: 1
          description: A description of what is done on this day (e.g. "Pull day")
            or what body parts are trained (e.g. "Arms and abs")
          maxLength: 100
        day:
          type: array
          items:
            type: integer
    PatchedExerciseAliasRequest:
      type: object
      description: ExerciseAlias serializer
      properties:
        exercise:
          type: integer
        alias:
          type: string
          minLength: 1
          title: Alias for an exercise
          maxLength: 200
    PatchedExerciseBaseRequest:
      type: object
      description: Exercise base serializer
      properties:
        category:
          type: integer
        muscles:
          type: array
          items:
            type: integer
            title: Primary muscles
          title: Primary muscles
        muscles_secondary:
          type: array
          items:
            type: integer
            title: Secondary muscles
          title: Secondary muscles
        equipment:
          type: array
          items:
            type: integer
        variations:
          type: integer
          nullable: true
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
    PatchedExerciseCommentRequest:
      type: object
      description: ExerciseComment serializer
      properties:
        exercise:
          type: integer
        comment:
          type: string
          minLength: 1
          description: A comment about how to correctly do this exercise.
          maxLength: 200
    PatchedExerciseImageRequest:
      type: object
      description: ExerciseImage serializer
      properties:
        exercise_base:
          type: integer
          title: Exercise
        image:
          type: string
          format: binary
          description: Only PNG and JPEG formats are supported
        is_main:
          type: boolean
          title: Main picture
          description: Tick the box if you want to set this image as the main one
            for the exercise (will be shown e.g. in the search). The first image is
            automatically marked by the system.
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: |-
            The art style of your image

            * `1` - Line
            * `2` - 3D
            * `3` - Low-poly
            * `4` - Photo
            * `5` - Other
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
    PatchedExerciseTranslationRequest:
      type: object
      description: Exercise translation serializer
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        exercise_base:
          type: integer
        description:
          type: string
          minLength: 40
          maxLength: 2000
        language:
          type: integer
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
    PatchedExerciseVideoRequest:
      type: object
      description: ExerciseVideo serializer
      properties:
        exercise_base:
          type: integer
          title: Exercise
        video:
          type: string
          format: binary
        is_main:
          type: boolean
          title: Main video
        license:
          type: integer
        license_title:
          type: string
          title: The original title of this object, if available
          maxLength: 200
        license_object_url:
          type: string
          format: uri
          title: Link to original object, if available
          maxLength: 100
        license_author:
          type: string
          nullable: true
          title: Author(s)
          description: If you are not the author, enter the name or source here.
          maxLength: 200
        license_author_url:
          type: string
          format: uri
          title: Link to author profile, if available
          maxLength: 100
        license_derivative_source_url:
          type: string
          format: uri
          title: Link to the original source, if this is a derivative work
          description: Note that a derivative work is one which is not only based
            on a previous work, but which also contains sufficient new, creative content
            to entitle it to its own copyright.
          maxLength: 100
    PatchedImageRequest:
      type: object
      description: Exercise serializer
      properties:
        date:
          type: string
          format: date
        image:
          type: string
          format: binary
          description: Only PNG and JPEG formats are supported
        description:
          type: string
          maxLength: 1000
    PatchedLogItemRequest:
      type: object
      description: LogItem serializer
      properties:
        plan:
          type: integer
          title: Nutrition plan
        meal:
          type: integer
          nullable: true
        ingredient:
          type: integer
        weight_unit:
          type: integer
          nullable: true
        datetime:
          type: string
          format: date-time
          title: Date and Time (Approx.)
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
    PatchedMealItemRequest:
      type: object
      description: MealItem serializer
      properties:
        meal:
          type: integer
          title: Nutrition plan
        ingredient:
          type: integer
        weight_unit:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
    PatchedMealRequest:
      type: object
      description: Meal serializer
      properties:
        plan:
          type: integer
          title: Nutrition plan
        time:
          type: string
          format: time
          nullable: true
          title: Time (approx)
        name:
          type: string
          description: Give meals a textual description / name such as "Breakfast"
            or "after workout"
          maxLength: 25
    PatchedMeasurementRequest:
      type: object
      description: Measurement serializer
      properties:
        category:
          type: integer
          title: User
        date:
          type: string
          format: date
        value:
          type: number
          format: double
          maximum: 5000
          minimum: 0
        notes:
          type: string
          title: Description
          maxLength: 100
    PatchedNutritionPlanInfoRequest:
      type: object
      description: Nutritional plan info serializer
      properties:
        description:
          type: string
          description: A description of the goal of the plan, e.g. "Gain mass" or
            "Prepare for summer"
          maxLength: 80
        meals:
          type: array
          items:
            $ref: '#/components/schemas/MealInfoRequest'
    PatchedNutritionPlanRequest:
      type: object
      description: Nutritional plan serializer
      properties:
        description:
          type: string
          description: A description of the goal of the plan, e.g. "Gain mass" or
            "Prepare for summer"
          maxLength: 80
        only_logging:
          type: boolean
        goal_energy:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_protein:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_carbohydrates:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        goal_fat:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    PatchedScheduleRequest:
      type: object
      description: Schedule serializer
      properties:
        name:
          type: string
          minLength: 1
          description: Name or short description of the schedule. For example 'Program
            XYZ'.
          maxLength: 100
        start_date:
          type: string
          format: date
        is_active:
          type: boolean
          title: Schedule active
          description: Tick the box if you want to mark this schedule as your active
            one (will be shown e.g. on your dashboard). All other schedules will then
            be marked as inactive
        is_loop:
          type: boolean
          title: Is a loop
          description: Tick the box if you want to repeat the schedules in a loop
            (i.e. A, B, C, A, B, C, and so on)
    PatchedScheduleStepRequest:
      type: object
      description: ScheduleStep serializer
      properties:
        schedule:
          type: integer
        workout:
          type: integer
        duration:
          type: integer
          maximum: 25
          minimum: 1
          description: The duration in weeks
    PatchedSetRequest:
      type: object
      description: Workout setting serializer
      properties:
        exerciseday:
          type: integer
        sets:
          type: integer
          maximum: 10
          minimum: 0
          title: Number of sets
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          maxLength: 200
    PatchedSettingRequest:
      type: object
      description: Workout setting serializer
      properties:
        set:
          type: integer
          title: Sets
        exercise_base:
          type: integer
          title: Exercises
        repetition_unit:
          type: integer
          title: Unit
        reps:
          type: integer
          maximum: 600
          minimum: 0
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        weight_unit:
          type: integer
          title: Unit
        rir:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RirEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          maxLength: 100
    PatchedUnitRequest:
      type: object
      description: Measurement unit serializer
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        unit:
          type: string
          minLength: 1
          maxLength: 30
    PatchedUserprofileRequest:
      type: object
      description: Workout session serializer
      properties:
        email_verified:
          type: boolean
        show_comments:
          type: boolean
          title: Show exercise comments
          description: Check to show exercise comments on the workout view
        show_english_ingredients:
          type: boolean
          title: Also use ingredients in English
          description: |-
            Check to also show ingredients in English while creating
            a nutritional plan. These ingredients are extracted from a list provided
            by the US Department of Agriculture. It is extremely complete, with around
            7000 entries, but can be somewhat overwhelming and make the search difficult.
        workout_reminder_active:
          type: boolean
          title: Activate workout reminders
          description: Check to activate automatic reminders for workouts. You need
            to provide a valid email for this to work.
        workout_reminder:
          type: integer
          maximum: 30
          minimum: 1
          title: Remind before expiration
          description: The number of days you want to be reminded before a workout
            expires.
        workout_duration:
          type: integer
          maximum: 30
          minimum: 1
          title: Default duration of workouts
          description: Default duration in weeks of workouts not in a schedule. Used
            for email workout reminders.
        notification_language:
          type: integer
          description: Language to use when sending you email notifications, e.g.
            email reminders for workouts. This does not affect the language used on
            the website.
        age:
          type: integer
          maximum: 100
          minimum: 10
          nullable: true
        birthdate:
          type: string
          format: date
          nullable: true
          title: Date of Birth
        height:
          type: integer
          maximum: 230
          minimum: 140
          nullable: true
          title: Height (cm)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/NullEnum'
        sleep_hours:
          type: integer
          maximum: 10
          minimum: 4
          nullable: true
          title: Hours of sleep
          description: The average hours of sleep per day
        work_hours:
          type: integer
          maximum: 15
          minimum: 1
          nullable: true
          title: Work
          description: Average hours per day
        work_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/WorkIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        sport_hours:
          type: integer
          maximum: 30
          minimum: 1
          nullable: true
          title: Sport
          description: Average hours per week
        sport_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/SportIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        freetime_hours:
          type: integer
          maximum: 15
          minimum: 1
          nullable: true
          title: Free time
          description: Average hours per day
        freetime_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/FreetimeIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        calories:
          type: integer
          maximum: 5000
          minimum: 1500
          nullable: true
          title: Total daily calories
          description: Total caloric intake, including e.g. any surplus
        weight_unit:
          $ref: '#/components/schemas/WeightUnitEnum'
        ro_access:
          type: boolean
          title: Allow external access
          description: Allow external users to access your workouts and logs in a
            read-only mode. You need to set this before you can share links e.g. to
            social media.
        num_days_weight_reminder:
          type: integer
          maximum: 30
          minimum: 0
          title: Automatic reminders for weight entries
          description: Number of days after the last weight entry (enter 0 to deactivate)
    PatchedWeightEntryRequest:
      type: object
      description: Weight serializer
      properties:
        date:
          type: string
          format: date
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
    PatchedWorkoutLogRequest:
      type: object
      description: Workout session serializer
      properties:
        reps:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Repetitions
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        rir:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RirEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        exercise_base:
          type: integer
          title: Exercise
        workout:
          type: integer
        repetition_unit:
          type: integer
          title: Unit
        weight_unit:
          type: integer
          title: Unit
    PatchedWorkoutRequest:
      type: object
      description: Workout serializer
      properties:
        name:
          type: string
          description: The name of the workout
          maxLength: 100
        description:
          type: string
          description: A short description or goal of the workout. For example 'Focus
            on back' or 'Week 1 of program xy'.
          maxLength: 1000
    PatchedWorkoutSessionRequest:
      type: object
      description: Workout session serializer
      properties:
        workout:
          type: integer
        date:
          type: string
          format: date
        notes:
          type: string
          nullable: true
          description: Any notes you might want to save about this workout session.
        impression:
          allOf:
          - $ref: '#/components/schemas/ImpressionEnum'
          title: General impression
          description: |-
            Your impression about this workout session. Did you exercise as well as you could?

            * `1` - Bad
            * `2` - Neutral
            * `3` - Good
        time_start:
          type: string
          format: time
          nullable: true
          title: Start time
        time_end:
          type: string
          format: time
          nullable: true
          title: Finish time
    PermissionResponse:
      type: object
      properties:
        result:
          type: boolean
      required:
      - result
    RepetitionUnit:
      type: object
      description: Repetition unit serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    RirEnum:
      enum:
      - '0'
      - '0.5'
      - '1'
      - '1.5'
      - '2'
      - '2.5'
      - '3'
      - '3.5'
      - '4'
      description: |-
        * `None` - ------
        * `0` - 0
        * `0.5` - 0.5
        * `1` - 1
        * `1.5` - 1.5
        * `2` - 2
        * `2.5` - 2.5
        * `3` - 3
        * `3.5` - 3.5
        * `4` - 4
    RoutineWeightUnit:
      type: object
      description: Weight unit serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Schedule:
      type: object
      description: Schedule serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name or short description of the schedule. For example 'Program
            XYZ'.
          maxLength: 100
        start_date:
          type: string
          format: date
        is_active:
          type: boolean
          title: Schedule active
          description: Tick the box if you want to mark this schedule as your active
            one (will be shown e.g. on your dashboard). All other schedules will then
            be marked as inactive
        is_loop:
          type: boolean
          title: Is a loop
          description: Tick the box if you want to repeat the schedules in a loop
            (i.e. A, B, C, A, B, C, and so on)
      required:
      - id
      - name
    ScheduleRequest:
      type: object
      description: Schedule serializer
      properties:
        name:
          type: string
          minLength: 1
          description: Name or short description of the schedule. For example 'Program
            XYZ'.
          maxLength: 100
        start_date:
          type: string
          format: date
        is_active:
          type: boolean
          title: Schedule active
          description: Tick the box if you want to mark this schedule as your active
            one (will be shown e.g. on your dashboard). All other schedules will then
            be marked as inactive
        is_loop:
          type: boolean
          title: Is a loop
          description: Tick the box if you want to repeat the schedules in a loop
            (i.e. A, B, C, A, B, C, and so on)
      required:
      - name
    ScheduleStep:
      type: object
      description: ScheduleStep serializer
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          type: integer
        workout:
          type: integer
        duration:
          type: integer
          maximum: 25
          minimum: 1
          description: The duration in weeks
      required:
      - id
      - schedule
      - workout
    ScheduleStepRequest:
      type: object
      description: ScheduleStep serializer
      properties:
        schedule:
          type: integer
        workout:
          type: integer
        duration:
          type: integer
          maximum: 25
          minimum: 1
          description: The duration in weeks
      required:
      - schedule
      - workout
    Set:
      type: object
      description: Workout setting serializer
      properties:
        id:
          type: integer
          readOnly: true
        exerciseday:
          type: integer
        sets:
          type: integer
          maximum: 10
          minimum: 0
          title: Number of sets
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          maxLength: 200
      required:
      - exerciseday
      - id
    SetRequest:
      type: object
      description: Workout setting serializer
      properties:
        exerciseday:
          type: integer
        sets:
          type: integer
          maximum: 10
          minimum: 0
          title: Number of sets
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          maxLength: 200
      required:
      - exerciseday
    Setting:
      type: object
      description: Workout setting serializer
      properties:
        id:
          type: integer
          readOnly: true
        set:
          type: integer
          title: Sets
        exercise_base:
          type: integer
          title: Exercises
        repetition_unit:
          type: integer
          title: Unit
        reps:
          type: integer
          maximum: 600
          minimum: 0
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        weight_unit:
          type: integer
          title: Unit
        rir:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RirEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          maxLength: 100
      required:
      - exercise_base
      - id
      - reps
      - set
    SettingRequest:
      type: object
      description: Workout setting serializer
      properties:
        set:
          type: integer
          title: Sets
        exercise_base:
          type: integer
          title: Exercises
        repetition_unit:
          type: integer
          title: Unit
        reps:
          type: integer
          maximum: 600
          minimum: 0
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        weight_unit:
          type: integer
          title: Unit
        rir:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RirEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          maxLength: 100
      required:
      - exercise_base
      - reps
      - set
    SportIntensityEnum:
      enum:
      - '1'
      - '2'
      - '3'
      type: string
      description: |-
        * `1` - Low
        * `2` - Medium
        * `3` - High
    StyleEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      type: string
      description: |-
        * `1` - Line
        * `2` - 3D
        * `3` - Low-poly
        * `4` - Photo
        * `5` - Other
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    Unit:
      type: object
      description: Measurement unit serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        unit:
          type: string
          maxLength: 30
      required:
      - id
      - name
      - unit
    UnitRequest:
      type: object
      description: Measurement unit serializer
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        unit:
          type: string
          minLength: 1
          maxLength: 30
      required:
      - name
      - unit
    UserLoginRequest:
      type: object
      description: Serializer to map to User model in relation to api user
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 8
        email:
          type: string
          minLength: 1
      required:
      - password
    UserRegistrationRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    Userprofile:
      type: object
      description: Workout session serializer
      properties:
        username:
          type: string
          format: email
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        email_verified:
          type: boolean
        is_trustworthy:
          type: boolean
          description: |-
            Flag indicating whether the user "is trustworthy" and can submit or edit exercises

            At the moment the criteria are:
            - the account has existed for 3 weeks
            - the email address has been verified
          readOnly: true
        date_joined:
          type: string
          format: email
          readOnly: true
        gym:
          type: integer
          readOnly: true
          nullable: true
        is_temporary:
          type: boolean
          readOnly: true
        show_comments:
          type: boolean
          title: Show exercise comments
          description: Check to show exercise comments on the workout view
        show_english_ingredients:
          type: boolean
          title: Also use ingredients in English
          description: |-
            Check to also show ingredients in English while creating
            a nutritional plan. These ingredients are extracted from a list provided
            by the US Department of Agriculture. It is extremely complete, with around
            7000 entries, but can be somewhat overwhelming and make the search difficult.
        workout_reminder_active:
          type: boolean
          title: Activate workout reminders
          description: Check to activate automatic reminders for workouts. You need
            to provide a valid email for this to work.
        workout_reminder:
          type: integer
          maximum: 30
          minimum: 1
          title: Remind before expiration
          description: The number of days you want to be reminded before a workout
            expires.
        workout_duration:
          type: integer
          maximum: 30
          minimum: 1
          title: Default duration of workouts
          description: Default duration in weeks of workouts not in a schedule. Used
            for email workout reminders.
        last_workout_notification:
          type: string
          format: date
          readOnly: true
          nullable: true
        notification_language:
          type: integer
          description: Language to use when sending you email notifications, e.g.
            email reminders for workouts. This does not affect the language used on
            the website.
        age:
          type: integer
          maximum: 100
          minimum: 10
          nullable: true
        birthdate:
          type: string
          format: date
          nullable: true
          title: Date of Birth
        height:
          type: integer
          maximum: 230
          minimum: 140
          nullable: true
          title: Height (cm)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/NullEnum'
        sleep_hours:
          type: integer
          maximum: 10
          minimum: 4
          nullable: true
          title: Hours of sleep
          description: The average hours of sleep per day
        work_hours:
          type: integer
          maximum: 15
          minimum: 1
          nullable: true
          title: Work
          description: Average hours per day
        work_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/WorkIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        sport_hours:
          type: integer
          maximum: 30
          minimum: 1
          nullable: true
          title: Sport
          description: Average hours per week
        sport_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/SportIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        freetime_hours:
          type: integer
          maximum: 15
          minimum: 1
          nullable: true
          title: Free time
          description: Average hours per day
        freetime_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/FreetimeIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        calories:
          type: integer
          maximum: 5000
          minimum: 1500
          nullable: true
          title: Total daily calories
          description: Total caloric intake, including e.g. any surplus
        weight_unit:
          $ref: '#/components/schemas/WeightUnitEnum'
        ro_access:
          type: boolean
          title: Allow external access
          description: Allow external users to access your workouts and logs in a
            read-only mode. You need to set this before you can share links e.g. to
            social media.
        num_days_weight_reminder:
          type: integer
          maximum: 30
          minimum: 0
          title: Automatic reminders for weight entries
          description: Number of days after the last weight entry (enter 0 to deactivate)
      required:
      - date_joined
      - email
      - gym
      - is_temporary
      - is_trustworthy
      - last_workout_notification
      - username
    UserprofileRequest:
      type: object
      description: Workout session serializer
      properties:
        email_verified:
          type: boolean
        show_comments:
          type: boolean
          title: Show exercise comments
          description: Check to show exercise comments on the workout view
        show_english_ingredients:
          type: boolean
          title: Also use ingredients in English
          description: |-
            Check to also show ingredients in English while creating
            a nutritional plan. These ingredients are extracted from a list provided
            by the US Department of Agriculture. It is extremely complete, with around
            7000 entries, but can be somewhat overwhelming and make the search difficult.
        workout_reminder_active:
          type: boolean
          title: Activate workout reminders
          description: Check to activate automatic reminders for workouts. You need
            to provide a valid email for this to work.
        workout_reminder:
          type: integer
          maximum: 30
          minimum: 1
          title: Remind before expiration
          description: The number of days you want to be reminded before a workout
            expires.
        workout_duration:
          type: integer
          maximum: 30
          minimum: 1
          title: Default duration of workouts
          description: Default duration in weeks of workouts not in a schedule. Used
            for email workout reminders.
        notification_language:
          type: integer
          description: Language to use when sending you email notifications, e.g.
            email reminders for workouts. This does not affect the language used on
            the website.
        age:
          type: integer
          maximum: 100
          minimum: 10
          nullable: true
        birthdate:
          type: string
          format: date
          nullable: true
          title: Date of Birth
        height:
          type: integer
          maximum: 230
          minimum: 140
          nullable: true
          title: Height (cm)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/NullEnum'
        sleep_hours:
          type: integer
          maximum: 10
          minimum: 4
          nullable: true
          title: Hours of sleep
          description: The average hours of sleep per day
        work_hours:
          type: integer
          maximum: 15
          minimum: 1
          nullable: true
          title: Work
          description: Average hours per day
        work_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/WorkIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        sport_hours:
          type: integer
          maximum: 30
          minimum: 1
          nullable: true
          title: Sport
          description: Average hours per week
        sport_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/SportIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        freetime_hours:
          type: integer
          maximum: 15
          minimum: 1
          nullable: true
          title: Free time
          description: Average hours per day
        freetime_intensity:
          nullable: true
          title: Physical intensity
          description: |-
            Approximately

            * `1` - Low
            * `2` - Medium
            * `3` - High
          oneOf:
          - $ref: '#/components/schemas/FreetimeIntensityEnum'
          - $ref: '#/components/schemas/NullEnum'
        calories:
          type: integer
          maximum: 5000
          minimum: 1500
          nullable: true
          title: Total daily calories
          description: Total caloric intake, including e.g. any surplus
        weight_unit:
          $ref: '#/components/schemas/WeightUnitEnum'
        ro_access:
          type: boolean
          title: Allow external access
          description: Allow external users to access your workouts and logs in a
            read-only mode. You need to set this before you can share links e.g. to
            social media.
        num_days_weight_reminder:
          type: integer
          maximum: 30
          minimum: 0
          title: Automatic reminders for weight entries
          description: Number of days after the last weight entry (enter 0 to deactivate)
    WeightEntry:
      type: object
      description: Weight serializer
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        user:
          type: integer
          readOnly: true
      required:
      - date
      - id
      - user
      - weight
    WeightEntryRequest:
      type: object
      description: Weight serializer
      properties:
        date:
          type: string
          format: date
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - date
      - weight
    WeightUnit:
      type: object
      description: WeightUnit serializer
      properties:
        id:
          type: integer
          readOnly: true
        language:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
      required:
      - id
      - language
      - name
    WeightUnitEnum:
      enum:
      - kg
      - lb
      type: string
      description: |-
        * `kg` - Metric (kilogram)
        * `lb` - Imperial (pound)
    WorkIntensityEnum:
      enum:
      - '1'
      - '2'
      - '3'
      type: string
      description: |-
        * `1` - Low
        * `2` - Medium
        * `3` - High
    Workout:
      type: object
      description: Workout serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name of the workout
          maxLength: 100
        creation_date:
          type: string
          format: date
          readOnly: true
        description:
          type: string
          description: A short description or goal of the workout. For example 'Focus
            on back' or 'Week 1 of program xy'.
          maxLength: 1000
      required:
      - creation_date
      - id
    WorkoutLog:
      type: object
      description: Workout session serializer
      properties:
        id:
          type: integer
          readOnly: true
        reps:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Repetitions
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        rir:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RirEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        exercise_base:
          type: integer
          title: Exercise
        workout:
          type: integer
        repetition_unit:
          type: integer
          title: Unit
        weight_unit:
          type: integer
          title: Unit
      required:
      - date
      - exercise_base
      - id
      - reps
      - weight
      - workout
    WorkoutLogRequest:
      type: object
      description: Workout session serializer
      properties:
        reps:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Repetitions
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        date:
          type: string
          format: date
        rir:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RirEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        exercise_base:
          type: integer
          title: Exercise
        workout:
          type: integer
        repetition_unit:
          type: integer
          title: Unit
        weight_unit:
          type: integer
          title: Unit
      required:
      - date
      - exercise_base
      - reps
      - weight
      - workout
    WorkoutRequest:
      type: object
      description: Workout serializer
      properties:
        name:
          type: string
          description: The name of the workout
          maxLength: 100
        description:
          type: string
          description: A short description or goal of the workout. For example 'Focus
            on back' or 'Week 1 of program xy'.
          maxLength: 1000
    WorkoutSession:
      type: object
      description: Workout session serializer
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        workout:
          type: integer
        date:
          type: string
          format: date
        notes:
          type: string
          nullable: true
          description: Any notes you might want to save about this workout session.
        impression:
          allOf:
          - $ref: '#/components/schemas/ImpressionEnum'
          title: General impression
          description: |-
            Your impression about this workout session. Did you exercise as well as you could?

            * `1` - Bad
            * `2` - Neutral
            * `3` - Good
        time_start:
          type: string
          format: time
          nullable: true
          title: Start time
        time_end:
          type: string
          format: time
          nullable: true
          title: Finish time
      required:
      - date
      - id
      - user
      - workout
    WorkoutSessionRequest:
      type: object
      description: Workout session serializer
      properties:
        workout:
          type: integer
        date:
          type: string
          format: date
        notes:
          type: string
          nullable: true
          description: Any notes you might want to save about this workout session.
        impression:
          allOf:
          - $ref: '#/components/schemas/ImpressionEnum'
          title: General impression
          description: |-
            Your impression about this workout session. Did you exercise as well as you could?

            * `1` - Bad
            * `2` - Neutral
            * `3` - Good
        time_start:
          type: string
          format: time
          nullable: true
          title: Start time
        time_end:
          type: string
          format: time
          nullable: true
          title: Finish time
      required:
      - date
      - workout
    WorkoutTemplate:
      type: object
      description: Workout template serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name of the workout
          maxLength: 100
        creation_date:
          type: string
          format: date
          readOnly: true
        description:
          type: string
          description: A short description or goal of the workout. For example 'Focus
            on back' or 'Week 1 of program xy'.
          maxLength: 1000
        is_public:
          type: boolean
          title: Public template
          description: A public template is available to other users
      required:
      - creation_date
      - id
    login:
      type: object
      properties:
        token:
          type: string
      required:
      - token
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
