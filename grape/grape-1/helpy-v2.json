{"info":{"title":"Helpy API Spec","description":"The Helpy API provides programmatic access to most functionality\n           in Helpy.  Administrators and Agents can create an API key through the\n           admin settings control panel to authenticate and gain\n           access to the API endpoints.","contact":{"url":"https://support.helpy.io/api"},"version":"0.0.1"},"swagger":"2.0","produces":["application/json"],"host":"demo.helpy.io","tags":[{"name":"categories","description":"Operations about categories"},{"name":"docs","description":"Operations about docs"},{"name":"forums","description":"Operations about forums"},{"name":"tickets","description":"Operations about tickets"},{"name":"topics","description":"Operations about topics"},{"name":"posts","description":"Operations about posts"},{"name":"users","description":"Operations about users"},{"name":"search","description":"Operations about searches"},{"name":"settings","description":"Operations about settings"},{"name":"flags","description":"Operations about flags"},{"name":"tags","description":"Operations about tags"},{"name":"advanced_search","description":"Operations about advanced_searches"},{"name":"key_values","description":"Operations about key_values"},{"name":"subscriptions","description":"Operations about subscriptions"},{"name":"triggers","description":"Operations about triggers"}],"paths":{"/api/v1/categories/{id}":{"patch":{"description":"Update a single category","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"Category to update","type":"integer","format":"int32","required":true},{"in":"formData","name":"name","description":"The name of the category of articles","type":"string","required":true},{"in":"formData","name":"icon","description":"An icon that represents the category","type":"string","required":false},{"in":"formData","name":"keywords","description":"Keywords that will be used for internal search and SEO","type":"string","required":false},{"in":"formData","name":"title_tag","description":"An alternate title tag that will be used if provided","type":"string","required":false},{"in":"formData","name":"meta_description","description":"A short description for SEO and internal purposes","type":"string","required":false},{"in":"formData","name":"rank","description":"The rank can be used to determine the ordering of categories","type":"integer","format":"int32","required":false},{"in":"formData","name":"front_page","description":"Whether or not the category should appear on the front page","type":"boolean","required":false},{"in":"formData","name":"active","description":"Whether or not the category is live on the site","type":"boolean","required":false},{"in":"formData","name":"visibility","description":"Lets you filter categories by visibility.","type":"string","enum":["all","public","internal"],"required":false}],"responses":{"200":{"description":"Update a single category","schema":{"$ref":"#/definitions/Category"}}},"tags":["categories"],"operationId":"patchApiV1CategoriesId"},"get":{"description":"Return a single category with listing of docs","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Category to list docs from","type":"string","required":true}],"responses":{"200":{"description":"Return a single category with listing of docs","schema":{"$ref":"#/definitions/Category"}}},"tags":["categories"],"operationId":"getApiV1CategoriesId"}},"/api/v1/categories":{"post":{"description":"Create a new category","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","description":"The name of the category of articles","type":"string","required":true},{"in":"formData","name":"icon","description":"An icon that represents the category","type":"string","required":false},{"in":"formData","name":"keywords","description":"Keywords that will be used for internal search and SEO","type":"string","required":false},{"in":"formData","name":"title_tag","description":"An alternate title tag that will be used if provided","type":"string","required":false},{"in":"formData","name":"meta_description","description":"A short description for SEO and internal purposes","type":"string","required":false},{"in":"formData","name":"rank","description":"The rank can be used to determine the ordering of categories","type":"integer","format":"int32","required":false},{"in":"formData","name":"front_page","description":"Whether or not the category should appear on the front page","type":"boolean","required":false},{"in":"formData","name":"active","description":"Whether or not the category is live on the site","type":"boolean","required":false},{"in":"formData","name":"visibility","description":"Lets you filter categories by visibility.","type":"string","enum":["all","public","internal"],"required":false}],"responses":{"201":{"description":"Create a new category","schema":{"$ref":"#/definitions/Category"}}},"tags":["categories"],"operationId":"postApiV1Categories"},"get":{"description":"List all public categories","produces":["application/json"],"parameters":[{"in":"query","name":"docs","description":"Whether to include the documents in the response","type":"boolean","required":false},{"in":"query","name":"docs_limit","description":"How many docs to return with the category","type":"integer","format":"int32","required":false},{"in":"query","name":"visibility","description":"Lets you filter categories by visibility.","type":"string","enum":["all","public","internal"],"required":false}],"responses":{"200":{"description":"List all public categories","schema":{"$ref":"#/definitions/Category"}}},"tags":["categories"],"operationId":"getApiV1Categories"}},"/api/v1/docs/{id}":{"patch":{"description":"Update a doc","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the Doc being updated","type":"integer","format":"int32","required":true},{"in":"formData","name":"title","description":"The name of the category of articles","type":"string","required":false},{"in":"formData","name":"category_id","description":"The category the doc belongs to","type":"integer","format":"int32","required":false},{"in":"formData","name":"body","description":"The body/text of the article","type":"string","required":false},{"in":"formData","name":"user_id","description":"The author of the article","type":"integer","format":"int32","required":false},{"in":"formData","name":"keywords","description":"Keywords that will be used for internal search and SEO","type":"string","required":false},{"in":"formData","name":"title_tag","description":"An alternate title tag that will be used if provided","type":"string","required":false},{"in":"formData","name":"meta_description","description":"A short description for SEO and internal purposes","type":"string","required":false},{"in":"formData","name":"rank","description":"The rank can be used to determine the ordering of docs","type":"integer","format":"int32","required":false},{"in":"formData","name":"front_page","description":"Whether or not the doc should appear on the front page","type":"boolean","required":false},{"in":"formData","name":"active","description":"Whether or not the doc is live on the site","type":"boolean","required":false}],"responses":{"200":{"description":"Update a doc","schema":{"$ref":"#/definitions/Doc"}}},"tags":["docs"],"operationId":"patchApiV1DocsId"},"get":{"description":"Shows a single doc","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"ID of the doc to show","type":"string","required":true},{"in":"query","name":"category","description":"Whether to return the category object in full","type":"boolean","required":false}],"responses":{"200":{"description":"Shows a single doc","schema":{"$ref":"#/definitions/Doc"}}},"tags":["docs"],"operationId":"getApiV1DocsId"}},"/api/v1/docs":{"post":{"description":"Create a new doc","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"title","description":"The name of the articles","type":"string","required":true},{"in":"formData","name":"category_id","description":"The category the doc belongs to","type":"integer","format":"int32","required":true},{"in":"formData","name":"body","description":"The body/text of the article","type":"string","required":true},{"in":"formData","name":"user_id","description":"The author of the article","type":"integer","format":"int32","required":true},{"in":"formData","name":"keywords","description":"Keywords that will be used for internal search and SEO","type":"string","required":false},{"in":"formData","name":"title_tag","description":"An alternate title tag that will be used if provided","type":"string","required":false},{"in":"formData","name":"meta_description","description":"A short description for SEO and internal purposes","type":"string","required":false},{"in":"formData","name":"rank","description":"The rank can be used to determine the ordering of docs","type":"integer","format":"int32","required":false},{"in":"formData","name":"front_page","description":"Whether or not the doc should appear on the front page","type":"boolean","required":false},{"in":"formData","name":"active","description":"Whether or not the doc is live on the site","type":"boolean","required":false}],"responses":{"201":{"description":"Create a new doc","schema":{"$ref":"#/definitions/Doc"}}},"tags":["docs"],"operationId":"postApiV1Docs"}},"/api/v1/forums/{id}":{"patch":{"description":"Update a forum","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the forum you are updating","type":"integer","format":"int32","required":true},{"in":"formData","name":"name","description":"The name of the forum","type":"string","required":true},{"in":"formData","name":"description","description":"The description of the forum","type":"string","required":true},{"in":"formData","name":"allow_post_voting","description":"Should topic replies be voteable?","type":"boolean","required":false},{"in":"formData","name":"allow_topic_voting","description":"Should topics be voteable?","type":"boolean","required":false},{"in":"formData","name":"layout","description":"The layout used by the forum","type":"string","required":false}],"responses":{"200":{"description":"Update a forum","schema":{"$ref":"#/definitions/Forum"}}},"tags":["forums"],"operationId":"patchApiV1ForumsId"},"get":{"description":"Show one forum","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"ID of the forum","type":"string","required":true},{"in":"query","name":"topics_limit","description":"How many topics to return","type":"integer","format":"int32","required":false}],"responses":{"200":{"description":"Show one forum","schema":{"$ref":"#/definitions/Forum"}}},"tags":["forums"],"operationId":"getApiV1ForumsId"}},"/api/v1/forums":{"post":{"description":"Create a new forum","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","description":"The name of the forum","type":"string","required":true},{"in":"formData","name":"description","description":"The description of the forum","type":"string","required":true},{"in":"formData","name":"allow_post_voting","description":"Should topic replies be voteable?","type":"boolean","required":false},{"in":"formData","name":"allow_topic_voting","description":"Should topics be voteable?","type":"boolean","required":false},{"in":"formData","name":"layout","description":"The layout used by the forum","type":"string","required":false}],"responses":{"201":{"description":"Create a new forum","schema":{"$ref":"#/definitions/Forum"}}},"tags":["forums"],"operationId":"postApiV1Forums"},"get":{"description":"List all forums","produces":["application/json"],"responses":{"200":{"description":"List all forums","schema":{"$ref":"#/definitions/Forum"}}},"tags":["forums"],"operationId":"getApiV1Forums"}},"/api/v1/tickets/merge":{"post":{"description":"Merge two or more tickets together.","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"topic_ids","description":"The topics to merge. Provide 2 ID in the format topic_ids[]=123\u0026topic_ids[]=124","type":"array","items":{"type":"integer","format":"int32"},"required":true},{"in":"formData","name":"user_id","description":"the User ID","type":"integer","format":"int32","required":true}],"responses":{"201":{"description":"Merge two or more tickets together."}},"tags":["tickets"],"operationId":"postApiV1TicketsMerge"}},"/api/v1/tickets/split/{post_id}":{"post":{"description":"Create a new discussion from a ticket","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"post_id","description":"The post to split into new topic","type":"integer","format":"int32","required":true}],"responses":{"201":{"description":"Create a new discussion from a ticket"}},"tags":["tickets"],"operationId":"postApiV1TicketsSplitPostId"}},"/api/v1/tickets/update_forum/{id}":{"post":{"description":"Move forums, set privacy","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ticket ID to update","type":"integer","format":"int32","required":true},{"in":"formData","name":"forum_id","description":"The forum this ticket is associated with","type":"integer","format":"int32","required":true}],"responses":{"201":{"description":"Move forums, set privacy"}},"tags":["tickets"],"operationId":"postApiV1TicketsUpdateForumId"}},"/api/v1/tickets/update_tags/{id}":{"post":{"description":"Update tags for this ticket","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ticket ID to update","type":"integer","format":"int32","required":true},{"in":"formData","name":"tag_list","description":"A list of tags to apply to this ticket","type":"string","required":true}],"responses":{"201":{"description":"Update tags for this ticket"}},"tags":["tickets"],"operationId":"postApiV1TicketsUpdateTagsId"}},"/api/v1/tickets/update_status/{id}":{"post":{"description":"Change the status of a ticket","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ticket ID to update","type":"integer","format":"int32","required":true},{"in":"formData","name":"status","description":"The status of the topic (New, Open, Pending, Resolved)","type":"string","required":true}],"responses":{"201":{"description":"Change the status of a ticket"}},"tags":["tickets"],"operationId":"postApiV1TicketsUpdateStatusId"}},"/api/v1/tickets/assign/{id}":{"post":{"description":"Assign ticket to an agent","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ticket ID to update","type":"integer","format":"int32","required":true},{"in":"formData","name":"assigned_user_id","description":"The assigned agent for this ticket","type":"integer","format":"int32","required":true}],"responses":{"201":{"description":"Assign ticket to an agent"}},"tags":["tickets"],"operationId":"postApiV1TicketsAssignId"}},"/api/v1/tickets":{"post":{"summary":"Creates a new ticket.","description":"You must provide a reference to the ticket creator\n          in one of two ways. Either with the `user_id` of an already instantiated user\n          object, or by supplying both an email address `user_email` along with a user name `user_name`.","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","description":"The subject of the ticket","type":"string","required":true},{"in":"formData","name":"body","description":"The post body","type":"string","required":true},{"in":"formData","name":"team_list","description":"The group that this ticket is assigned to","type":"string","required":false},{"in":"formData","name":"channel","description":"The source channel the ticket was created from, Defaults to API if no value provided.","type":"string","required":false},{"in":"formData","name":"kind","description":"he kind of topic this is, can be 'ticket','discussion','chat', etc.","type":"string","required":false},{"in":"formData","name":"user_id","description":"the User ID. Required if `user_email` and `user_name` are not supplied.","type":"integer","format":"int32","required":false},{"in":"formData","name":"user_email","description":"The user who is creating a ticket. Can be either registered or non-registered. Required if `user_id` not supplied.","type":"string","required":false},{"in":"formData","name":"user_name","description":"The user name for register a non-registered user. Required if `user_id` is not supplied.","type":"string","required":false},{"in":"formData","name":"tag_list","description":"A list of tags to apply to this ticket","type":"string","required":false},{"in":"formData","name":"cc","description":"Comma separated list of emails to CC","type":"string","required":false},{"in":"formData","name":"bcc","description":"Comma separated list of emails to BCC","type":"string","required":false}],"responses":{"201":{"description":"Creates a new ticket."}},"tags":["tickets"],"operationId":"postApiV1Tickets"}},"/api/v1/tickets/{id}":{"get":{"description":"Show a single ticket","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Ticket ID","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Show a single ticket","schema":{"$ref":"#/definitions/Topic"}}},"tags":["tickets"],"operationId":"getApiV1TicketsId"}},"/api/v1/tickets/user/{user_id}":{"get":{"description":"List all PRIVATE tickets for a user","produces":["application/json"],"parameters":[{"in":"path","name":"user_id","description":"ID of the user","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"List all PRIVATE tickets for a user","schema":{"$ref":"#/definitions/Topic"}}},"tags":["tickets"],"operationId":"getApiV1TicketsUserUserId"}},"/api/v1/tickets/status/{status}":{"get":{"description":"List all PRIVATE tickets by status","produces":["application/json"],"parameters":[{"in":"path","name":"status","description":"Status group (New, Open, Pending, etc.)","type":"string","required":true}],"responses":{"200":{"description":"List all PRIVATE tickets by status","schema":{"$ref":"#/definitions/Topic"}}},"tags":["tickets"],"operationId":"getApiV1TicketsStatusStatus"}},"/api/v1/topics/{id}/vote":{"patch":{"description":"Vote for a topic","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the topic to vote for","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Vote for a topic","schema":{"$ref":"#/definitions/Topic"}}},"tags":["topics"],"operationId":"patchApiV1TopicsIdVote"}},"/api/v1/topics/{id}":{"patch":{"description":"Update the status, assigned user, etc of a community topic","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The topic ID to update","type":"integer","format":"int32","required":true},{"in":"formData","name":"forum_id","description":"The forum this topic is associated with","type":"integer","format":"int32","required":true},{"in":"formData","name":"current_status","description":"The status of the topic (New, Open, Pending, Resolved)","type":"string","required":false},{"in":"formData","name":"private","description":"Whether or not the topic is marked private","type":"boolean","required":false},{"in":"formData","name":"assigned_user_id","description":"The assigned agent for this topic","type":"integer","format":"int32","required":false},{"in":"formData","name":"priority","description":"Priority of the topic, can be 'low', 'normal', 'high' or 'very_high'","type":"string","enum":["low","normal","high","very_high"],"required":false}],"responses":{"200":{"description":"Update the status, assigned user, etc of a community topic","schema":{"$ref":"#/definitions/Topic"}}},"tags":["topics"],"operationId":"patchApiV1TopicsId"},"get":{"description":"Show a single ticket","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Topic ID","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Show a single ticket","schema":{"$ref":"#/definitions/Topic"}}},"tags":["topics"],"operationId":"getApiV1TopicsId"}},"/api/v1/topics":{"post":{"description":"Create a new public topic","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","description":"The subject of the ticket","type":"string","required":true},{"in":"formData","name":"body","description":"The post body","type":"string","required":true},{"in":"formData","name":"user_id","description":"the User ID","type":"integer","format":"int32","required":true},{"in":"formData","name":"forum_id","description":"The forum to add the topic to","type":"integer","format":"int32","required":true},{"in":"formData","name":"channel","description":"The source channel the ticket was created from. Defaults to API.","type":"string","required":false},{"in":"formData","name":"kind","description":"The kind of topic this is, can be 'ticket','discussion','chat', etc.","type":"string","required":false},{"in":"formData","name":"priority","description":"Priority of the topic, can be 'low', 'normal', 'high' or 'very_high'","type":"string","enum":["low","normal","high","very_high"],"required":false}],"responses":{"201":{"description":"Create a new public topic","schema":{"$ref":"#/definitions/Topic"}}},"tags":["topics"],"operationId":"postApiV1Topics"}},"/api/v1/posts/{id}":{"patch":{"description":"Update a post","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The Post ID","type":"integer","format":"int32","required":true},{"in":"formData","name":"body","description":"The post body","type":"string","required":true},{"in":"formData","name":"active","description":"Whether the post is live or not","type":"boolean","required":true}],"responses":{"200":{"description":"Update a post","schema":{"$ref":"#/definitions/Post"}}},"tags":["posts"],"operationId":"patchApiV1PostsId"}},"/api/v1/posts":{"post":{"description":"Add a new reply to an existing discussion","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"topic_id","description":"Topic to add post to","type":"integer","format":"int32","required":true},{"in":"formData","name":"body","description":"The post body","type":"string","required":true},{"in":"formData","name":"user_id","description":"The User ID of the poster","type":"integer","format":"int32","required":true},{"in":"formData","name":"kind","description":"The kind of post, either 'reply' or 'note'","type":"string","required":true},{"in":"formData","name":"cc","description":"Comma separated list of emails to CC","type":"string","required":false},{"in":"formData","name":"bcc","description":"Comma separated list of emails to BCC","type":"string","required":false}],"responses":{"201":{"description":"Add a new reply to an existing discussion","schema":{"$ref":"#/definitions/Post"}}},"tags":["posts"],"operationId":"postApiV1Posts"}},"/api/v1/users/invite":{"post":{"description":"Invite one or more users to create an account","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"emails","description":"Comma separated list of email addresses","type":"string","required":true},{"in":"formData","name":"message","description":"A short message to be included with your invitation","type":"string","required":true},{"in":"formData","name":"role","description":"The role given to the new invited users (user, editor, agent, admin)","type":"string","required":true}],"responses":{"201":{"description":"Invite one or more users to create an account"}},"tags":["users"],"operationId":"postApiV1UsersInvite"}},"/api/v1/users/anonymize/{id}":{"post":{"description":"Anonymize a user","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"User ID","type":"integer","format":"int32","required":true}],"responses":{"201":{"description":"Anonymize a user"}},"tags":["users"],"operationId":"postApiV1UsersAnonymizeId"}},"/api/v1/users/{id}":{"delete":{"description":"Delete a user","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"User ID","type":"integer","format":"int32","required":true}],"responses":{"204":{"description":"Delete a user"}},"tags":["users"],"operationId":"deleteApiV1UsersId"},"patch":{"description":"Update a user","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"User ID","type":"integer","format":"int32","required":true},{"in":"formData","name":"name","description":"Users full name","type":"string","required":false},{"in":"formData","name":"email","description":"Users email address","type":"string","required":false},{"in":"formData","name":"password","description":"Users password","type":"string","required":false},{"in":"formData","name":"account_number","description":"Users account_number","type":"string","required":false},{"in":"formData","name":"login","description":"Users login (optional)","type":"string","required":false},{"in":"formData","name":"bio","description":"Users bio","type":"string","required":false},{"in":"formData","name":"signature","description":"Users signature","type":"string","required":false},{"in":"formData","name":"role","description":"Users role","type":"string","default":"user","enum":["user","editor","agent","admin"],"required":false},{"in":"formData","name":"home_phone","description":"Users home phone","type":"string","required":false},{"in":"formData","name":"work_phone","description":"Users work phone","type":"string","required":false},{"in":"formData","name":"cell_phone","description":"Users cell phone","type":"string","required":false},{"in":"formData","name":"company","description":"Users company","type":"string","required":false},{"in":"formData","name":"street","description":"Users street","type":"string","required":false},{"in":"formData","name":"city","description":"Users city","type":"string","required":false},{"in":"formData","name":"state","description":"Users state","type":"string","required":false},{"in":"formData","name":"zip","description":"Users Postal Code","type":"string","required":false},{"in":"formData","name":"title","description":"Users title","type":"string","required":false},{"in":"formData","name":"twitter","description":"Users Twitter handle","type":"string","required":false},{"in":"formData","name":"linkedin","description":"Users Linkedin username","type":"string","required":false},{"in":"formData","name":"language","description":"Users prefered language","type":"string","required":false},{"in":"formData","name":"active","description":"User active or deactivated","type":"boolean","required":false},{"in":"formData","name":"priority","description":"Users Priority- low, normal, high or vip","type":"string","default":"normal","required":false},{"in":"formData","name":"notes","description":"Notes about the user","type":"string","required":false},{"in":"formData","name":"status","description":"User/Agent status","type":"string","required":false}],"responses":{"200":{"description":"Update a user","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"patchApiV1UsersId"},"get":{"description":"Show details of a user","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"User ID","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Show details of a user","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"getApiV1UsersId"}},"/api/v1/users/status/{id}":{"patch":{"description":"Update agents status","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"User ID","type":"integer","format":"int32","required":true},{"in":"formData","name":"status","description":"User/Agent status","type":"string","required":true}],"responses":{"200":{"description":"Update agents status","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"patchApiV1UsersStatusId"}},"/api/v1/users":{"post":{"description":"Create a new user","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","description":"Users full name","type":"string","required":true},{"in":"formData","name":"email","description":"Users email address","type":"string","required":false},{"in":"formData","name":"password","description":"Users password","type":"string","required":false},{"in":"formData","name":"login","description":"Users login (optional)","type":"string","required":false},{"in":"formData","name":"bio","description":"Users bio","type":"string","required":false},{"in":"formData","name":"signature","description":"Users signature","type":"string","required":false},{"in":"formData","name":"role","description":"Users role","type":"string","default":"user","enum":["user","editor","agent","admin"],"required":false},{"in":"formData","name":"home_phone","description":"Users home phone","type":"string","required":false},{"in":"formData","name":"work_phone","description":"Users work phone","type":"string","required":false},{"in":"formData","name":"cell_phone","description":"Users cell phone","type":"string","required":false},{"in":"formData","name":"account_number","description":"Users account_number","type":"string","required":false},{"in":"formData","name":"company","description":"Users company","type":"string","required":false},{"in":"formData","name":"street","description":"Users street","type":"string","required":false},{"in":"formData","name":"city","description":"Users city","type":"string","required":false},{"in":"formData","name":"state","description":"Users state","type":"string","required":false},{"in":"formData","name":"zip","description":"Users Postal Code","type":"string","required":false},{"in":"formData","name":"title","description":"Users title","type":"string","required":false},{"in":"formData","name":"twitter","description":"Users Twitter handle","type":"string","required":false},{"in":"formData","name":"linkedin","description":"Users Linkedin username","type":"string","required":false},{"in":"formData","name":"language","description":"Users prefered language","type":"string","required":false},{"in":"formData","name":"active","description":"User active or deactivated","type":"boolean","default":true,"required":false},{"in":"formData","name":"priority","description":"Users Priority","type":"string","default":"normal","enum":["low","normal","high","vip"],"required":false},{"in":"formData","name":"notes","description":"Notes about the user","type":"string","required":false},{"in":"formData","name":"status","description":"User/Agent status","type":"string","required":false}],"responses":{"201":{"description":"Create a new user","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"postApiV1Users"},"get":{"description":"List all users","produces":["application/json"],"responses":{"200":{"description":"List all users","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"getApiV1Users"}},"/api/v1/users/search":{"get":{"description":"Search users by name, email, account number, phone, etc.","produces":["application/json"],"parameters":[{"in":"query","name":"q","description":"User search query","type":"string","required":true}],"responses":{"200":{"description":"Search users by name, email, account number, phone, etc.","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"getApiV1UsersSearch"}},"/api/v1/users/self":{"get":{"description":"Load your own user","produces":["application/json"],"responses":{"200":{"description":"Load your own user","schema":{"$ref":"#/definitions/User"}}},"tags":["users"],"operationId":"getApiV1UsersSelf"}},"/api/v1/search":{"get":{"description":"Search public docs or topics","produces":["application/json"],"parameters":[{"in":"query","name":"q","description":"The query term to search for","type":"string","required":true},{"in":"query","name":"type","description":"The type of entity to search for. Could be Topic or Doc","type":"string","required":false},{"in":"query","name":"page","description":"The current page","type":"integer","format":"int32","default":1,"required":false},{"in":"query","name":"per_page","description":"The number of results to return per page","type":"integer","format":"int32","default":25,"required":false}],"responses":{"200":{"description":"Search public docs or topics"}},"tags":["search"],"operationId":"getApiV1Search"}},"/api/v1/settings":{"post":{"description":"Update a setting value","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"key","type":"string","required":true},{"in":"formData","name":"value","type":"string","required":true}],"responses":{"201":{"description":"Update a setting value"}},"tags":["settings"],"operationId":"postApiV1Settings"},"get":{"description":"List all settings and their values","produces":["application/json"],"responses":{"200":{"description":"List all settings and their values"}},"tags":["settings"],"operationId":"getApiV1Settings"}},"/api/v1/flags":{"post":{"description":"Flag a post for review","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"post_id","description":"The post to flag for review","type":"integer","format":"int32","required":true},{"in":"formData","name":"reason","description":"The reason for flagging this post","type":"string","required":true}],"responses":{"201":{"description":"Flag a post for review"}},"tags":["flags"],"operationId":"postApiV1Flags"}},"/api/v1/tags/{id}":{"patch":{"description":"Update a tag","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the tag you are updating","type":"integer","format":"int32","required":true},{"in":"formData","name":"name","description":"The name of the tag","type":"string","required":true},{"in":"formData","name":"description","description":"The description of the tag","type":"string","required":true},{"in":"formData","name":"color","description":"The color hex code used for the tag, e.g. #ffcc33","type":"string","required":false}],"responses":{"200":{"description":"Update a tag","schema":{"$ref":"#/definitions/Tag"}}},"tags":["tags"],"operationId":"patchApiV1TagsId"},"get":{"description":"Show one tag","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"ID of the tag","type":"string","required":true}],"responses":{"200":{"description":"Show one tag","schema":{"$ref":"#/definitions/Tag"}}},"tags":["tags"],"operationId":"getApiV1TagsId"}},"/api/v1/tags":{"post":{"description":"Create a new tag","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","description":"The name of the tag","type":"string","required":true},{"in":"formData","name":"description","description":"The description of the tag","type":"string","required":true},{"in":"formData","name":"color","description":"The color hex code used for the tag, e.g. #ffcc33","type":"string","required":false}],"responses":{"201":{"description":"Create a new tag","schema":{"$ref":"#/definitions/Tag"}}},"tags":["tags"],"operationId":"postApiV1Tags"},"get":{"description":"List all tags","produces":["application/json"],"responses":{"200":{"description":"List all tags","schema":{"$ref":"#/definitions/Tag"}}},"tags":["tags"],"operationId":"getApiV1Tags"}},"/api/v1/advanced_search/users":{"post":{"summary":"Advanced User Search","description":"Allows searching using the advanced search functionality.  The\n          advanced search requires a JSON object describing the various filters\n          comprising the search query. Behind the scenes, Helpy uses a Ruby Gem\n          called 'Ransack' so any of the filter types here are allowable:\n          https://github.com/activerecord-hackery/ransack/wiki/Basic-Searching. An\n          example search JSON follows:\n\n          `\n          {\n            \"name_eq\": \"Jon\",\n            \"priority_eq\": \"high\"\n          }\n          `","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"q","description":"Advanced Search requires a JSON construct representing the user","type":"json","required":true},{"in":"formData","name":"page","description":"The current page","type":"integer","format":"int32","default":1,"required":false},{"in":"formData","name":"per_page","description":"The number of results to return per page","type":"integer","format":"int32","default":25,"required":false}],"responses":{"201":{"description":"Advanced User Search","schema":{"$ref":"#/definitions/User"}}},"tags":["advanced_search"],"operationId":"postApiV1AdvancedSearchUsers"}},"/api/v1/advanced_search/tickets":{"post":{"summary":"Advanced Ticket Search","description":"Allows searching using the advanced search functionality.  The\n          advanced search requires a JSON object describing the various filters\n          comprising the search query. Behind the scenes, Helpy uses a Ruby Gem\n          called 'Ransack' so any of the filter types here are allowable:\n          https://github.com/activerecord-hackery/ransack/wiki/Basic-Searching. An\n          example search JSON follows:\n\n          `\n          {\n            \"current_status_eq\": \"closed\",\n            \"user_name_cont\": \"Lena\"\n          }\n          `","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"q","description":"Advanced Search requires a JSON construct representing the search","type":"json","required":true},{"in":"formData","name":"page","description":"The current page","type":"integer","format":"int32","default":1,"required":false},{"in":"formData","name":"per_page","description":"The number of results to return per page","type":"integer","format":"int32","default":25,"required":false}],"responses":{"201":{"description":"Advanced Ticket Search"}},"tags":["advanced_search"],"operationId":"postApiV1AdvancedSearchTickets"}},"/api/v1/key_values/{id}":{"delete":{"summary":"Delete a key value meta attribute from an object.","description":"To delete a key value object, pass the ID of the object.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The object to be deleted","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Delete a key value meta attribute from an object.","schema":{"$ref":"#/definitions/KeyValue"}}},"tags":["key_values"],"operationId":"deleteApiV1KeyValuesId"},"patch":{"summary":"Update key value meta attributes for an object.","description":"To update an existing key value attribute, pass the ID of the\n          key value and any changes to the `key` or `value`.","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"id","description":"The key value object id","type":"integer","format":"int32","required":true},{"in":"formData","name":"key","type":"string","required":false},{"in":"formData","name":"value","type":"string","required":false}],"responses":{"200":{"description":"Update key value meta attributes for an object.","schema":{"$ref":"#/definitions/KeyValue"}}},"tags":["key_values"],"operationId":"patchApiV1KeyValuesId"},"get":{"summary":"Show a single meta key value attribute.","description":"Look up a single key value attribute object by its' ID.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"id of the KV object","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Show a single meta key value attribute.","schema":{"$ref":"#/definitions/KeyValue"}}},"tags":["key_values"],"operationId":"getApiV1KeyValuesId"}},"/api/v1/key_values":{"patch":{"summary":"Update meta attribute values for an object.","description":"To update one or more attribute values for an object, provide\n          the object id and type and a json object expressing the keys and values\n          you would like to update.  Example format:\n\n          {\n            \"your-key\":\"your-value\",\n            \"key-two\":\"value-2\"\n          } ","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"kvable_id","description":"The key value object id","type":"integer","format":"int32","required":true},{"in":"formData","name":"kvable_type","description":"The key value object type","type":"string","required":true},{"in":"formData","name":"json","type":"json","required":true}],"responses":{"200":{"description":"Update meta attribute values for an object.","schema":{"$ref":"#/definitions/KeyValue"}}},"tags":["key_values"],"operationId":"patchApiV1KeyValues"},"post":{"summary":"Add one or more key value meta attributes to an object.","description":"Creating one or multiple new key value attribute(s) requires the\n          type (`kvable_type`) of object (`Topic`,`User`,etc.) and the foreign key\n          ID of the topic or user object ('kvable_id'). To add a single key value object,\n          pass a `key` and `value` in the params. To add multiple key-values,\n          pass a JSON construct representing multiple key:value pairs in the `json`\n          parameter like this:\n\n          {\n            \"your-key\":\"your-value\",\n            \"key-two\":\"value-2\"\n          }","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"kvable_id","description":"The object foreign key","type":"integer","format":"int32","required":true},{"in":"formData","name":"kvable_type","description":"The object type","type":"string","required":true},{"in":"formData","name":"key","description":"Attribute key","type":"string","required":false},{"in":"formData","name":"value","description":"Attribute value","type":"string","required":false},{"in":"formData","name":"json","description":"JSON object with keys and values","type":"json","required":false}],"responses":{"201":{"description":"Add one or more key value meta attributes to an object.","schema":{"$ref":"#/definitions/KeyValue"}}},"tags":["key_values"],"operationId":"postApiV1KeyValues"},"get":{"summary":"Show meta key value attributes for an object.","description":"Key Values allow you to attach metadata to either `Topic` or `User`\n          objects in Helpy.  This is useful for storing additional custom data that\n          is not provided by Helpy.  Tickets generated by custom ticket form fields\n          will also be stored as attributes and attached to the ticket. \u003cbr/\u003e\u003cbr\u003e\n          Some examples of how you might want to use Key Value attributes could be\n          storing a customers service plan or sign up date.","produces":["application/json"],"parameters":[{"in":"query","name":"kvable_id","description":"id of the object","type":"integer","format":"int32","required":true},{"in":"query","name":"kvable_type","description":"object Type","type":"string","required":true}],"responses":{"200":{"description":"Show meta key value attributes for an object.","schema":{"$ref":"#/definitions/KeyValue"}}},"tags":["key_values"],"operationId":"getApiV1KeyValues"}},"/api/v1/subscriptions/{user_id}":{"delete":{"description":"Delete a subscription","produces":["application/json"],"parameters":[{"in":"path","name":"user_id","type":"integer","format":"int32","required":true},{"in":"query","name":"list_id","type":"integer","format":"int32","required":true}],"responses":{"204":{"description":"Delete a subscription"}},"tags":["subscriptions"],"operationId":"deleteApiV1SubscriptionsUserId"}},"/api/v1/subscriptions/unsubscribe/{user_id}":{"put":{"description":"Unsubscribe a user from a known list","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"path","name":"user_id","type":"integer","format":"int32","required":true},{"in":"formData","name":"list_id","type":"integer","format":"int32","required":true}],"responses":{"200":{"description":"Unsubscribe a user from a known list"}},"tags":["subscriptions"],"operationId":"putApiV1SubscriptionsUnsubscribeUserId"}},"/api/v1/subscriptions":{"post":{"description":"Subscribe a user to a known list","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"user_id","type":"integer","format":"int32","required":true},{"in":"formData","name":"list_id","type":"integer","format":"int32","required":true}],"responses":{"201":{"description":"Subscribe a user to a known list"}},"tags":["subscriptions"],"operationId":"postApiV1Subscriptions"}},"/api/v1/triggers/{id}":{"delete":{"description":"Delete a trigger","produces":["application/json"],"parameters":[{"in":"path","name":"id","type":"integer","format":"int32","required":true}],"responses":{"204":{"description":"Delete a trigger"}},"tags":["triggers"],"operationId":"deleteApiV1TriggersId"}},"/api/v1/triggers/hook/{event}":{"get":{"description":"Show a sample webhook trigger response","produces":["application/json"],"parameters":[{"in":"path","name":"event","type":"string","required":true}],"responses":{"200":{"description":"Show a sample webhook trigger response","schema":{"$ref":"#/definitions/Trigger"}}},"tags":["triggers"],"operationId":"getApiV1TriggersHookEvent"}},"/api/v1/triggers":{"get":{"description":"List all triggers","produces":["application/json"],"responses":{"200":{"description":"List all triggers","schema":{"$ref":"#/definitions/Trigger"}}},"tags":["triggers"],"operationId":"getApiV1Triggers"},"post":{"description":"Add a new trigger automation or webhook","produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"formData","name":"name","type":"string","required":false},{"in":"formData","name":"event","type":"string","required":true},{"in":"formData","name":"conditions","type":"string","required":false},{"in":"formData","name":"actions","type":"string","required":true},{"in":"formData","name":"mode","type":"string","required":true},{"in":"formData","name":"url","type":"string","required":false},{"in":"formData","name":"active","type":"boolean","required":true}],"responses":{"201":{"description":"Add a new trigger automation or webhook","schema":{"$ref":"#/definitions/Trigger"}}},"tags":["triggers"],"operationId":"postApiV1Triggers"}}},"definitions":{"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int32","description":"Category ID"},"slug":{"type":"string"},"name":{"type":"string","description":"The name of the category of articles"},"icon":{"type":"string","description":"An icon that represents the category"},"keywords":{"type":"string","description":"Keywords that will be used for internal search and SEO"},"title_tag":{"type":"string","description":"An alternate title tag that will be used if provided"},"meta_description":{"type":"string","description":"A short description for SEO and internal purposes"},"rank":{"type":"integer","format":"int32","description":"The rank can be used to determine the ordering of categories"},"front_page":{"type":"boolean","description":"Whether or not the category should appear on the front page"},"active":{"type":"boolean","description":"Whether or not the category is live on the site"},"visibility":{"type":"string","description":"The visibility of the category.  Can be all, internal or public."},"created_at":{"type":"string"},"updated_at":{"type":"string"},"docs":{"$ref":"#/definitions/Doc"}},"description":"List all public categories"},"Doc":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"slug":{"type":"string"},"title":{"type":"string"},"body":{"type":"string"},"keywords":{"type":"string"},"title_tag":{"type":"string"},"meta_description":{"type":"string"},"category_id":{"type":"integer","format":"int32","description":"The ID of the category the document belongs to."},"user_id":{"type":"integer","format":"int32","description":"The user_id of the author of the document."},"active":{"type":"boolean","description":"Whether or not the document is active on the support site."},"rank":{"type":"integer","format":"int32","description":"The rank can be used to determine the ordering of categories"},"version":{"type":"integer","format":"int32"},"front_page":{"type":"boolean","description":"Whether or not the document should be featured."},"created_at":{"type":"string"},"updated_at":{"type":"string"},"topics_count":{"type":"integer","format":"int32"},"allow_comments":{"type":"boolean","description":"Whether or not the document should allow commenting."},"category":{"$ref":"#/definitions/Category"}},"description":"Shows a single doc"},"Forum":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"The name of the forum"},"description":{"type":"string","description":"A description for the forum"},"topics_count":{"type":"integer","format":"int32"},"last_post_id":{"type":"integer","format":"int32"},"last_post_date":{"type":"string"},"private":{"type":"boolean","description":"Whether the forum is publically accessible"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"allow_topic_voting":{"type":"boolean","description":"Whether or not to allow topic voting"},"allow_post_voting":{"type":"boolean","description":"Whether or not to allow voting of reply posts"},"layout":{"type":"string","description":"The layout the forum uses. Can be Table, Grid, or Q\u0026A"},"topics":{"$ref":"#/definitions/Topic"}},"description":"List all forums"},"Topic":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"forum_id":{"type":"integer","format":"int32","description":"The Forum this topic belongs to."},"user_id":{"type":"integer","format":"int32","description":"The ID representing the creator of the topic."},"user_name":{"type":"string"},"user":{"$ref":"#/definitions/User"},"name":{"type":"string","description":"The title or subject of the Topic thread."},"posts_count":{"type":"integer","format":"int32"},"last_post_date":{"type":"string"},"closed_date":{"type":"string"},"last_post_id":{"type":"integer","format":"int32","description":"Cached ID of the most recent post."},"current_status":{"type":"string","description":"The status of the Topic. Can be 'new', 'open', 'pending', 'closed', 'spam', 'trash'"},"private":{"type":"string","description":"Whether or not the Topic is private (a ticket). Tickets must also have forum_ID 1"},"assigned_user_id":{"type":"integer","format":"int32"},"points":{"type":"integer","format":"int32","description":"The number of times this Topic has been voted for."},"created_at":{"type":"string"},"updated_at":{"type":"string"},"doc_id":{"type":"integer","format":"int32"},"locale":{"type":"string","description":"The locale used when the author created the Topic."},"team_list":{"type":"string"},"tag_list":{"type":"string"},"channel":{"type":"string","description":"The channel that the topic was created from."},"kind":{"type":"string","description":"The kind of topic this is, can be 'ticket','discussion','chat', etc."},"priority":{"type":"string","description":"Priority of the topic, can be 'low', 'normal', 'high' or 'very_high'"},"posts":{"$ref":"#/definitions/Post"},"spam_score":{"type":"string"},"spam_report":{"type":"string"},"violations":{"$ref":"#/definitions/Violation"},"key_values":{"$ref":"#/definitions/KeyValue"}},"description":"Show a single ticket"},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"login":{"type":"string"},"name":{"type":"string"},"bio":{"type":"string"},"signature":{"type":"string"},"role":{"type":"string"},"home_phone":{"type":"string"},"work_phone":{"type":"string"},"cell_phone":{"type":"string"},"company":{"type":"string"},"street":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"zip":{"type":"string"},"title":{"type":"string"},"twitter":{"type":"string"},"linkedin":{"type":"string"},"thumbnail":{"type":"string"},"medium_image":{"type":"string"},"large_image":{"type":"string"},"language":{"type":"string"},"assigned_ticket_count":{"type":"integer","format":"int32"},"topics_count":{"type":"integer","format":"int32"},"active":{"type":"boolean","description":"Whether or not the user is active."},"created_at":{"type":"string"},"updated_at":{"type":"string"},"email":{"type":"string"},"sign_in_count":{"type":"integer","format":"int32"},"team_list":{"type":"string"},"account_number":{"type":"string"},"priority":{"type":"string"},"notes":{"type":"string"},"status":{"type":"string"},"key_values":{"$ref":"#/definitions/KeyValue"}},"description":"Allows searching using the advanced search functionality.  The\n          advanced search requires a JSON object describing the various filters\n          comprising the search query. Behind the scenes, Helpy uses a Ruby Gem\n          called 'Ransack' so any of the filter types here are allowable:\n          https://github.com/activerecord-hackery/ransack/wiki/Basic-Searching. An\n          example search JSON follows:\n\n          `\n          {\n            \"name_eq\": \"Jon\",\n            \"priority_eq\": \"high\"\n          }\n          `"},"KeyValue":{"type":"object","properties":{"id":{"type":"integer","format":"int32","description":"The PK for this kv pair"},"key":{"type":"string","description":"The key (variable) name for this attribute"},"value":{"type":"string","description":"The attribute value"},"kvable_id":{"type":"integer","format":"int32","description":"FK to the parent object of the attribute"},"kvable_type":{"type":"string","description":"The type of object this attribute belongs to"}},"description":"Key Values allow you to attach metadata to either `Topic` or `User`\n          objects in Helpy.  This is useful for storing additional custom data that\n          is not provided by Helpy.  Tickets generated by custom ticket form fields\n          will also be stored as attributes and attached to the ticket. \u003cbr/\u003e\u003cbr\u003e\n          Some examples of how you might want to use Key Value attributes could be\n          storing a customers service plan or sign up date."},"Post":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"topic_id":{"type":"integer","format":"int32","description":"The Topic this post belongs to."},"user_id":{"type":"integer","format":"int32","description":"The ID representing the author of the post."},"user":{"$ref":"#/definitions/User"},"body":{"type":"string"},"kind":{"type":"string","description":"The type of Post this is- can be 'first', 'reply' or 'note'."},"active":{"type":"boolean","description":"Whether or not the post is visible onsite."},"created_at":{"type":"string"},"updated_at":{"type":"string"},"points":{"type":"integer","format":"int32"},"cc":{"type":"string","description":"Comma separated list of emails to CC"},"bcc":{"type":"string","description":"Comma separated list of emails to BCC"},"raw_email":{"type":"string","description":"The original full raw email body"},"email_to_address":{"type":"string","description":"The address a ticket was sent to"}},"description":"Add a new reply to an existing discussion"},"Violation":{"type":"object","properties":{"id":{"type":"integer","format":"int32","description":"The PK for this kv pair"},"topic_id":{"type":"integer","format":"int32","description":"The FK to the Topic which generated the violation"},"sla_id":{"type":"integer","format":"int32","description":"The FK to the SLA which created the violation"}}},"Tag":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"The name of the tag"},"description":{"type":"string","description":"A description for the tag"},"color":{"type":"string","description":"A color hex code used for the tag"}},"description":"List all tags"},"Trigger":{"type":"object","properties":{"id":{"type":"integer","format":"int32","description":"The trigger ID"},"name":{"type":"string","description":"The name of the Trigger"},"event":{"type":"string","description":"The ticket lifecycle event"},"conditions":{"type":"string","description":"The ticket conditions"},"actions":{"type":"string","description":"The trigger actions"},"mode":{"type":"string","description":"The trigger mode- and/or"},"url":{"type":"string","description":"The trigger URL for webhook triggers"},"active":{"type":"boolean","description":"Whether or not the trigger is active"}},"description":"Add a new trigger automation or webhook"}}}