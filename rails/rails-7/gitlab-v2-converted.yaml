openapi: 3.0.1
info:
  title: GitLab API
  version: v4
servers:
  - url: gitlab.com/
tags:
  - name: badges
    description: Operations about badges
  - name: groups
    description: Operations about groups
  - name: runners
    description: Operations about runners
  - name: group_avatar
    description: Operations about group_avatars
  - name: invitations
    description: Operations about invitations
  - name: members
    description: Operations about members
  - name: group_access_tokens
    description: Operations about group_access_tokens
  - name: wikis
    description: Operations about wikis
  - name: branches
    description: Operations about branches
  - name: secure_files
    description: Operations about secure_files
  - name: commits
    description: Operations about commits
  - name: pages
    description: Operations about pages
  - name: pages_domains
    description: Operations about pages_domains
  - name: project_avatar
    description: Operations about project_avatars
  - name: projects_job_token_scope
    description: Operations about projects_job_token_scopes
  - name: project_snippets
    description: Operations about project_snippets
  - name: protected_tags
    description: Operations about protected_tags
  - name: remote_mirrors
    description: Operations about remote_mirrors
  - name: project_access_tokens
    description: Operations about project_access_tokens
  - name: tags
    description: Operations about tags
  - name: alert_management
    description: Operations about alert_managements
  - name: batched_background_migrations
    description: Operations about batched_background_migrations
  - name: admin
    description: Operations about admins
  - name: migrations
    description: Operations about migrations
  - name: broadcast_messages
    description: Operations about broadcast_messages
  - name: applications
    description: Operations about applications
  - name: avatar
    description: Operations about avatars
  - name: bulk_imports
    description: Operations about bulk_imports
  - name: job
    description: Operations about jobs
  - name: jobs
    description: Operations about jobs
  - name: events
    description: Operations about events
  - name: users
    description: Operations about users
  - name: keys
    description: Operations about keys
  - name: markdown
    description: Operations about markdowns
  - name: namespaces
    description: Operations about namespaces
  - name: personal_access_tokens
    description: Operations about personal_access_tokens
  - name: project_repository_storage_moves
    description: Operations about project_repository_storage_moves
  - name: snippets
    description: Operations about snippets
  - name: snippet_repository_storage_moves
    description: Operations about snippet_repository_storage_moves
  - name: hooks
    description: Operations about hooks
  - name: usage_data
    description: Operations about usage_data
  - name: metrics
    description: Operations about metrics
  - name: user
    description: Operations about users
  - name: user_counts
    description: Operations about user_counts
  - name: application
    description: Operations about applications
  - name: import
    description: Operations about imports
  - name: slack
    description: Operations about slacks
  - name: topics
    description: Operations about topics
  - name: access_requests
    description: Operations related to access requests
  - name: ci_lint
    description: Operations related to linting a CI config file
  - name: ci_resource_groups
    description: Operations to manage job concurrency with resource groups
  - name: ci_variables
    description: Operations related to CI/CD variables
  - name: cluster_agents
    description: Operations related to the GitLab agent for Kubernetes
  - name: clusters
    description: Operations related to clusters
  - name: composer_packages
    description: Operations related to Composer packages
  - name: conan_packages
    description: Operations related to Conan packages
  - name: container_registry
    description: Operations related to container registry
  - name: container_registry_event
    description: Operations related to container registry events
  - name: debian_distribution
    description: Operations related to Debian Linux distributions
  - name: debian_packages
    description: Operations related to Debian Linux packages
  - name: dependency_proxy
    description: Operations to manage dependency proxy for a groups
  - name: deploy_keys
    description: Operations related to deploy keys
  - name: deploy_tokens
    description: Operations related to deploy tokens
  - name: deployments
    description: Operations related to deployments
  - name: dora_metrics
    description: Operations related to DevOps Research and Assessment (DORA) key metrics
  - name: environments
    description: Operations related to environments
  - name: error_tracking_client_keys
    description: Operations related to error tracking client keys
  - name: error_tracking_project_settings
    description: Operations related to error tracking project settings
  - name: feature_flags_user_lists
    description: Operations related to accessing GitLab feature flag user lists
  - name: feature_flags
    description: Operations related to feature flags
  - name: features
    description: Operations related to managing Flipper-based feature flags
  - name: freeze_periods
    description: Operations related to deploy freeze periods
  - name: generic_packages
    description: Operations related to Generic packages
  - name: geo
    description: Operations related to Geo
  - name: geo_nodes
    description: Operations related Geo Nodes
  - name: go_proxy
    description: Operations related to Go Proxy
  - name: group_export
    description: Operations related to exporting groups
  - name: group_import
    description: Operations related to importing groups
  - name: group_packages
    description: Operations related to group packages
  - name: helm_packages
    description: Operations related to Helm packages
  - name: integrations
    description: Operations related to integrations
  - name: issue_links
    description: Operations related to issue links
  - name: jira_connect_subscriptions
    description: Operations related to JiraConnect subscriptions
  - name: maven_packages
    description: Operations related to Maven packages
  - name: merge_requests
    description: Operations related to merge requests
  - name: metadata
    description: Operations related to metadata of the GitLab instance
  - name: ml_model_registry
    description: Operations related to Model registry
  - name: npm_packages
    description: Operations related to NPM packages
  - name: nuget_packages
    description: Operations related to Nuget packages
  - name: package_files
    description: Operations about package files
  - name: plan_limits
    description: Operations related to plan limits
  - name: project_export
    description: Operations related to exporting projects
  - name: project_hooks
    description: Operations related to project hooks
  - name: project_import
    description: Operations related to importing projects
  - name: project_import_bitbucket
    description: Operations related to importing BitBucket projects
  - name: project_import_github
    description: Operations related to importing GitHub projects
  - name: project_packages
    description: Operations related to project packages
  - name: projects
    description: Operations related to projects
  - name: protected environments
    description: Operations related to protected environments
  - name: pypi_packages
    description: Operations related to PyPI packages
  - name: release_links
    description: Operations related to release assets (links)
  - name: releases
    description: Operations related to releases
  - name: resource_milestone_events
    description: Operations about resource milestone events
  - name: rpm_packages
    description: Operations related to RPM packages
  - name: rubygem_packages
    description: Operations related to RubyGems
  - name: suggestions
    description: Operations related to suggestions
  - name: system_hooks
    description: Operations related to system hooks
  - name: terraform_state
    description: Operations related to Terraform state files
  - name: terraform_registry
    description: Operations related to the Terraform module registry
  - name: unleash_api
    description: Operations related to Unleash API
paths:
  /api/v4/groups/{id}/access_requests:
    get:
      tags:
        - access_requests
      summary: Gets a list of access requests for a group.
      description: This feature was introduced in GitLab 8.11.
      operationId: getApiV4GroupsIdAccessRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Gets a list of access requests for a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_AccessRequester'
    post:
      tags:
        - access_requests
      summary: Requests access for the authenticated user to a group.
      description: This feature was introduced in GitLab 8.11.
      operationId: postApiV4GroupsIdAccessRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_AccessRequester'
            successfull_response:
              example:
                id: 1
                username: raymond_smith
                name: Raymond Smith
                state: active
                created_at: "2012-10-22T14:13:35Z"
                access_level: 20
  /api/v4/groups/{id}/access_requests/{user_id}/approve:
    put:
      tags:
        - access_requests
      summary: Approves an access request for the given user.
      description: This feature was introduced in GitLab 8.11.
      operationId: putApiV4GroupsIdAccessRequestsUserIdApprove
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the access requester
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdAccessRequestsUserIdApprove'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_AccessRequester'
            successfull_response:
              example:
                id: 1
                username: raymond_smith
                name: Raymond Smith
                state: active
                created_at: "2012-10-22T14:13:35Z"
                access_level: 20
      x-codegen-request-body-name: putApiV4GroupsIdAccessRequestsUserIdApprove
  /api/v4/groups/{id}/access_requests/{user_id}:
    delete:
      tags:
        - access_requests
      summary: Denies an access request for the given user.
      description: This feature was introduced in GitLab 8.11.
      operationId: deleteApiV4GroupsIdAccessRequestsUserId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the access requester
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Denies an access request for the given user.
          content: {}
  /api/v4/groups/{id}/badges:
    get:
      tags:
        - badges
      summary: Gets a list of group badges viewable by the authenticated user.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4GroupsIdBadges
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: name
          in: query
          description: Name for the badge
          schema:
            type: string
      responses:
        "200":
          description: Gets a list of group badges viewable by the authenticated user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Badge'
    post:
      tags:
        - badges
      summary: Adds a badge to a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: postApiV4GroupsIdBadges
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdBadges'
        required: true
      responses:
        "201":
          description: Adds a badge to a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
      x-codegen-request-body-name: postApiV4GroupsIdBadges
  /api/v4/groups/{id}/badges/render:
    get:
      tags:
        - badges
      summary: Preview a badge from a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4GroupsIdBadgesRender
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: link_url
          in: query
          description: URL of the badge link
          required: true
          schema:
            type: string
        - name: image_url
          in: query
          description: URL of the badge image
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preview a badge from a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicBadgeDetails'
  /api/v4/groups/{id}/badges/{badge_id}:
    get:
      tags:
        - badges
      summary: Gets a badge of a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4GroupsIdBadgesBadgeId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a badge of a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
    put:
      tags:
        - badges
      summary: Updates a badge of a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: putApiV4GroupsIdBadgesBadgeId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdBadgesBadgeId'
        required: true
      responses:
        "200":
          description: Updates a badge of a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
      x-codegen-request-body-name: putApiV4GroupsIdBadgesBadgeId
    delete:
      tags:
        - badges
      summary: Removes a badge from the group.
      description: This feature was introduced in GitLab 10.6.
      operationId: deleteApiV4GroupsIdBadgesBadgeId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Removes a badge from the group.
          content: {}
  /api/v4/groups/{id}/custom_attributes:
    get:
      tags:
        - groups
      description: Get all custom attributes on a group
      operationId: getApiV4GroupsIdCustomAttributes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get all custom attributes on a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CustomAttribute'
  /api/v4/groups/{id}/custom_attributes/{key}:
    get:
      tags:
        - groups
      description: Get a custom attribute on a group
      operationId: getApiV4GroupsIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a custom attribute on a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CustomAttribute'
    put:
      tags:
        - groups
      description: Set a custom attribute on a group
      operationId: putApiV4GroupsIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdCustomAttributesKey'
        required: true
      responses:
        "200":
          description: Set a custom attribute on a group
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdCustomAttributesKey
    delete:
      tags:
        - groups
      description: Delete a custom attribute on a group
      operationId: deleteApiV4GroupsIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a custom attribute on a group
          content: {}
  /api/v4/groups:
    get:
      tags:
        - groups
      description: Get a groups list
      operationId: getApiV4Groups
      parameters:
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
        - name: skip_groups
          in: query
          description: Array of group ids to exclude from list
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: all_available
          in: query
          description: Show all group that you have access to
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Search for a specific group
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: order_by
          in: query
          description: Order by name, path, id or similarity if searching
          schema:
            type: string
            default: name
            enum:
              - name
              - path
              - id
              - similarity
        - name: sort
          in: query
          description: Sort by asc (ascending) or desc (descending)
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: min_access_level
          in: query
          description: Minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: top_level_only
          in: query
          description: Only include top level groups
          schema:
            type: boolean
        - name: repository_storage
          in: query
          description: Filter by repository storage used by the group
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a groups list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Group'
    post:
      tags:
        - groups
      description: Create a group. Available only for users who can create groups.
      operationId: postApiV4Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Groups'
        required: true
      responses:
        "201":
          description: Create a group. Available only for users who can create groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Group'
      x-codegen-request-body-name: postApiV4Groups
  /api/v4/groups/{id}:
    get:
      tags:
        - groups
      description: Get a single group, with containing projects.
      operationId: getApiV4GroupsId
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
        - name: with_projects
          in: query
          description: Omit project details
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: Get a single group, with containing projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GroupDetail'
    put:
      tags:
        - groups
      description: Update a group. Available only for users who can administrate groups.
      operationId: putApiV4GroupsId
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsId'
        required: true
      responses:
        "200":
          description: Update a group. Available only for users who can administrate groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Group'
      x-codegen-request-body-name: putApiV4GroupsId
    delete:
      tags:
        - groups
      description: Remove a group.
      operationId: deleteApiV4GroupsId
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Remove a group.
          content: {}
  /api/v4/groups/{id}/projects:
    get:
      tags:
        - groups
      description: Get a list of projects in this group.
      operationId: getApiV4GroupsIdProjects
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Return list of authorized projects matching the search criteria
          schema:
            type: string
        - name: order_by
          in: query
          description: Return projects ordered by field
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - similarity
              - star_count
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: starred
          in: query
          description: Limit by starred status
          schema:
            type: boolean
            default: false
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature
          schema:
            type: boolean
            default: false
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature
          schema:
            type: boolean
            default: false
        - name: with_shared
          in: query
          description: Include projects shared to this group
          schema:
            type: boolean
            default: true
        - name: include_subgroups
          in: query
          description: Includes projects in subgroups of this group
          schema:
            type: boolean
            default: false
        - name: include_ancestor_groups
          in: query
          description: Includes projects in ancestors of this group
          schema:
            type: boolean
            default: false
        - name: min_access_level
          in: query
          description: Limit by minimum access level of authenticated user on projects
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
        - name: with_security_reports
          in: query
          description: Return only projects having security report artifacts present
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a list of projects in this group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Project'
  /api/v4/groups/{id}/projects/shared:
    get:
      tags:
        - groups
      description: Get a list of shared projects in this group
      operationId: getApiV4GroupsIdProjectsShared
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Return list of authorized projects matching the search criteria
          schema:
            type: string
        - name: order_by
          in: query
          description: Return projects ordered by field
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - star_count
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
        - name: starred
          in: query
          description: Limit by starred status
          schema:
            type: boolean
            default: false
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature
          schema:
            type: boolean
            default: false
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature
          schema:
            type: boolean
            default: false
        - name: min_access_level
          in: query
          description: Limit by minimum access level of authenticated user on projects
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a list of shared projects in this group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Project'
  /api/v4/groups/{id}/subgroups:
    get:
      tags:
        - groups
      description: Get a list of subgroups in this group.
      operationId: getApiV4GroupsIdSubgroups
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
        - name: skip_groups
          in: query
          description: Array of group ids to exclude from list
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: all_available
          in: query
          description: Show all group that you have access to
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Search for a specific group
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: order_by
          in: query
          description: Order by name, path, id or similarity if searching
          schema:
            type: string
            default: name
            enum:
              - name
              - path
              - id
              - similarity
        - name: sort
          in: query
          description: Sort by asc (ascending) or desc (descending)
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: min_access_level
          in: query
          description: Minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: top_level_only
          in: query
          description: Only include top level groups
          schema:
            type: boolean
        - name: repository_storage
          in: query
          description: Filter by repository storage used by the group
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a list of subgroups in this group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Group'
  /api/v4/groups/{id}/descendant_groups:
    get:
      tags:
        - groups
      description: Get a list of descendant groups of this group.
      operationId: getApiV4GroupsIdDescendantGroups
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
        - name: skip_groups
          in: query
          description: Array of group ids to exclude from list
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: all_available
          in: query
          description: Show all group that you have access to
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Search for a specific group
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: order_by
          in: query
          description: Order by name, path, id or similarity if searching
          schema:
            type: string
            default: name
            enum:
              - name
              - path
              - id
              - similarity
        - name: sort
          in: query
          description: Sort by asc (ascending) or desc (descending)
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: min_access_level
          in: query
          description: Minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: top_level_only
          in: query
          description: Only include top level groups
          schema:
            type: boolean
        - name: repository_storage
          in: query
          description: Filter by repository storage used by the group
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a list of descendant groups of this group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Group'
  /api/v4/groups/{id}/projects/{project_id}:
    post:
      tags:
        - groups
      description: Transfer a project to the group namespace. Available only for admin.
      operationId: postApiV4GroupsIdProjectsProjectId
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: The ID or path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Transfer a project to the group namespace. Available only for admin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GroupDetail'
  /api/v4/groups/{id}/transfer_locations:
    get:
      tags:
        - groups
      description: Get the groups to where the current group can be transferred to
      operationId: getApiV4GroupsIdTransferLocations
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return list of namespaces matching the search criteria
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the groups to where the current group can be transferred to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Group'
  /api/v4/groups/{id}/transfer:
    post:
      tags:
        - groups
      description: Transfer a group to a new parent group or promote a subgroup to a root group
      operationId: postApiV4GroupsIdTransfer
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdTransfer'
        required: true
      responses:
        "201":
          description: Transfer a group to a new parent group or promote a subgroup to a root group
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdTransfer
  /api/v4/groups/{id}/share:
    post:
      tags:
        - groups
      description: Share a group with a group
      operationId: postApiV4GroupsIdShare
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdShare'
        required: true
      responses:
        "201":
          description: Share a group with a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GroupDetail'
      x-codegen-request-body-name: postApiV4GroupsIdShare
  /api/v4/groups/{id}/share/{group_id}:
    delete:
      tags:
        - groups
      operationId: deleteApiV4GroupsIdShareGroupId
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: The ID of the shared group
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: deleted Share
          content: {}
  /api/v4/groups/{id}/ldap_sync:
    post:
      tags:
        - groups
      description: Sync a group with LDAP.
      operationId: postApiV4GroupsIdLdapSync
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Sync a group with LDAP.
          content: {}
  /api/v4/groups/{id}/restore:
    post:
      tags:
        - groups
      description: Restore a group.
      operationId: postApiV4GroupsIdRestore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Restore a group.
          content: {}
  /api/v4/groups/{id}/provisioned_users:
    get:
      tags:
        - groups
      description: Get a list of users provisioned by the group
      operationId: getApiV4GroupsIdProvisionedUsers
      parameters:
        - name: username
          in: query
          description: Return a single user with a specific username
          schema:
            type: string
        - name: search
          in: query
          description: Search users by name, email or username
          schema:
            type: string
        - name: active
          in: query
          description: Return only active users
          schema:
            type: boolean
            default: false
        - name: blocked
          in: query
          description: Return only blocked users
          schema:
            type: boolean
            default: false
        - name: created_after
          in: query
          description: Return users created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return users created before the specified time
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of users provisioned by the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserPublic'
  /api/v4/groups/{id}/users:
    get:
      tags:
        - groups
      description: Get a list of users for the group
      operationId: getApiV4GroupsIdUsers
      parameters:
        - name: search
          in: query
          description: Search users by name, email or username
          schema:
            type: string
        - name: active
          in: query
          description: Filters only active users
          schema:
            type: boolean
            default: false
        - name: include_saml_users
          in: query
          description: Return users with a SAML identity in this group
          schema:
            type: boolean
        - name: include_service_accounts
          in: query
          description: Return service accounts owned by this group
          schema:
            type: boolean
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of users for the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserPublic'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: 404 Not Found
          content: {}
  /api/v4/groups/{id}/ssh_certificates:
    get:
      tags:
        - groups
      summary: Get a list of Groups::SshCertificate for a Group.
      description: Get a list of ssh certificates created for a group.
      operationId: getApiV4GroupsIdSshCertificates
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of ssh certificates created for a group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EE_API_Entities_SshCertificate'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: 404 Not Found
          content: {}
    post:
      tags:
        - groups
      summary: Add a Groups::SshCertificate.
      description: Create a ssh certificate for a group.
      operationId: postApiV4GroupsIdSshCertificates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdSshCertificates'
        required: true
      responses:
        "201":
          description: Create a ssh certificate for a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_SshCertificate'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdSshCertificates
  /api/v4/groups/{id}/ssh_certificates/{ssh_certificates_id}:
    delete:
      tags:
        - groups
      summary: Removes an ssh certificate from a group.
      description: Removes a Groups::SshCertificate
      operationId: deleteApiV4GroupsIdSshCertificatesSshCertificatesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: ssh_certificates_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Removes an ssh certificate from a group.
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
  /api/v4/groups/{id}/runners:
    get:
      tags:
        - runners
        - groups
      summary: List group's runners
      description: List all runners available in the group as well as its ancestor groups, including any allowed shared runners.
      operationId: getApiV4GroupsIdRunners
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: The type of runners to return
          schema:
            type: string
            enum:
              - instance_type
              - group_type
              - project_type
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          schema:
            type: boolean
        - name: status
          in: query
          description: The status of runners to return
          schema:
            type: string
            enum:
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: tag_list
          in: query
          description: A list of runner tags
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: version_prefix
          in: query
          description: The version prefix of runners to return
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get runners available for group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "400":
          description: Scope contains invalid value
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/groups/{id}/runners/reset_registration_token:
    post:
      tags:
        - runners
        - groups
      summary: Reset the runner registration token for a group
      description: Reset runner registration token
      operationId: postApiV4GroupsIdRunnersResetRegistrationToken
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Reset runner registration token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResetTokenResult'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Group Not Found
          content: {}
  /api/v4/groups/{id}/dependency_proxy/cache:
    delete:
      tags:
        - dependency_proxy
      summary: Purge the dependency proxy for a group
      description: Schedules for deletion the cached manifests and blobs for a group.This endpoint requires the Owner role for the group.
      operationId: deleteApiV4GroupsIdDependencyProxyCache
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Purge the dependency proxy for a group
          content: {}
        "401":
          description: Unauthorized
          content: {}
  /api/v4/groups/{id}/deploy_tokens:
    get:
      tags:
        - deploy_tokens
      summary: List group deploy tokens
      description: Get a list of a group's deploy tokens. This feature was introduced in GitLab 12.9.
      operationId: getApiV4GroupsIdDeployTokens
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: active
          in: query
          description: Limit by active status
          schema:
            type: boolean
      responses:
        "200":
          description: List group deploy tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_DeployToken'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - deploy_tokens
      summary: Create a group deploy token
      description: Creates a new deploy token for a group. This feature was introduced in GitLab 12.9.
      operationId: postApiV4GroupsIdDeployTokens
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdDeployTokens'
        required: true
      responses:
        "201":
          description: Create a group deploy token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployTokenWithToken'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdDeployTokens
  /api/v4/groups/{id}/deploy_tokens/{token_id}:
    get:
      tags:
        - deploy_tokens
      summary: Get a group deploy token
      description: 'Get a single group''s deploy token by ID. This feature was introduced in GitLab 14.9. '
      operationId: getApiV4GroupsIdDeployTokensTokenId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: integer
            format: int32
        - name: token_id
          in: path
          description: The ID of the deploy token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a group deploy token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployToken'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - deploy_tokens
      summary: Delete a group deploy token
      description: Removes a deploy token from the group. This feature was introduced in GitLab 12.9.
      operationId: deleteApiV4GroupsIdDeployTokensTokenId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: integer
            format: int32
        - name: token_id
          in: path
          description: The ID of the deploy token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a group deploy token
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/groups/{id}/avatar:
    get:
      tags:
        - group_avatar
      summary: Download the group avatar
      description: This feature was introduced in GitLab 14.0
      operationId: getApiV4GroupsIdAvatar
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download the group avatar
          content: {}
  /api/v4/groups/{id}/clusters:
    get:
      tags:
        - clusters
      summary: List group clusters
      description: This feature was introduced in GitLab 12.1. Returns a list of group clusters.
      operationId: getApiV4GroupsIdClusters
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List group clusters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Cluster'
        "403":
          description: Forbidden
          content: {}
  /api/v4/groups/{id}/clusters/{cluster_id}:
    get:
      tags:
        - clusters
      summary: Get a single group cluster
      description: This feature was introduced in GitLab 12.1. Gets a single group cluster.
      operationId: getApiV4GroupsIdClustersClusterId
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single group cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterGroup'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - clusters
      summary: Edit group cluster
      description: This feature was introduced in GitLab 12.1. Updates an existing group cluster.
      operationId: putApiV4GroupsIdClustersClusterId
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdClustersClusterId'
        required: true
      responses:
        "200":
          description: Edit group cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterGroup'
        "400":
          description: Validation error
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdClustersClusterId
    delete:
      tags:
        - clusters
      summary: Delete group cluster
      description: This feature was introduced in GitLab 12.1. Deletes an existing group cluster. Does not remove existing resources within the connected Kubernetes cluster.
      operationId: deleteApiV4GroupsIdClustersClusterId
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The Cluster ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "403":
          description: Forbidden
          content: {}
        "204":
          description: Delete group cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterGroup'
        "404":
          description: Not found
          content: {}
  /api/v4/groups/{id}/clusters/user:
    post:
      tags:
        - clusters
      summary: Add existing cluster to group
      description: This feature was introduced in GitLab 12.1. Adds an existing Kubernetes cluster to the group.
      operationId: postApiV4GroupsIdClustersUser
      parameters:
        - name: id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdClustersUser'
        required: true
      responses:
        "201":
          description: Add existing cluster to group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterGroup'
        "400":
          description: Validation error
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdClustersUser
  /api/v4/groups/{id}/registry/repositories:
    get:
      tags:
        - container_registry
      summary: List registry repositories within a group
      description: Get a list of registry repositories in a group. This feature was introduced in GitLab 12.2.
      operationId: getApiV4GroupsIdRegistryRepositories
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group accessible by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List registry repositories within a group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ContainerRegistry_Repository'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Group Not Found
          content: {}
  /api/v4/groups/{id}/export/download:
    get:
      tags:
        - group_export
      summary: Download export
      description: This feature was introduced in GitLab 12.5.
      operationId: getApiV4GroupsIdExportDownload
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download export
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/groups/{id}/export:
    post:
      tags:
        - group_export
      summary: Start export
      description: This feature was introduced in GitLab 12.5.
      operationId: postApiV4GroupsIdExport
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Start export
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/groups/{id}/export_relations:
    post:
      tags:
        - group_export
      summary: Start relations export
      description: This feature was introduced in GitLab 13.12
      operationId: postApiV4GroupsIdExportRelations
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdExportRelations'
        required: true
      responses:
        "202":
          description: Start relations export
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdExportRelations
  /api/v4/groups/{id}/export_relations/download:
    get:
      tags:
        - group_export
      summary: Download relations export
      description: This feature was introduced in GitLab 13.12
      operationId: getApiV4GroupsIdExportRelationsDownload
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: relation
          in: query
          description: Group relation name
          required: true
          schema:
            type: string
        - name: batched
          in: query
          description: Whether to download in batches
          schema:
            type: boolean
        - name: batch_number
          in: query
          description: Batch number to download
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Download relations export
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/groups/{id}/export_relations/status:
    get:
      tags:
        - group_export
      summary: Relations export status
      description: This feature was introduced in GitLab 13.12
      operationId: getApiV4GroupsIdExportRelationsStatus
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: relation
          in: query
          description: Group relation name
          schema:
            type: string
      responses:
        "200":
          description: Relations export status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BulkImports_ExportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/groups/import/authorize:
    post:
      tags:
        - group_import
      summary: Workhorse authorize the group import upload
      description: This feature was introduced in GitLab 12.8
      operationId: postApiV4GroupsImportAuthorize
      responses:
        "201":
          description: Workhorse authorize the group import upload
          content: {}
  /api/v4/groups/import:
    post:
      tags:
        - group_import
      summary: Create a new group import
      description: This feature was introduced in GitLab 12.8
      operationId: postApiV4GroupsImport
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - name
                - path
              type: object
              properties:
                path:
                  type: string
                  description: Group path
                name:
                  type: string
                  description: Group name
                file:
                  type: string
                  description: The group export file to be imported
                  format: binary
                parent_id:
                  type: integer
                  description: The ID of the parent group that the group will be imported into. Defaults to the current user's namespace.
                  format: int32
                organization_id:
                  type: integer
                  description: 'The ID of the organization that the group will be part of. '
                  format: int32
        required: true
      responses:
        "202":
          description: Create a new group import
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/groups/{id}/packages:
    get:
      tags:
        - group_packages
      summary: List packages within a group
      description: Get a list of project packages at the group level. This feature was introduced in GitLab 12.5
      operationId: getApiV4GroupsIdPackages
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: exclude_subgroups
          in: query
          description: Determines if subgroups should be excluded
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: order_by
          in: query
          description: Return packages ordered by `created_at`, `name`, `version` or `type` fields.
          schema:
            type: string
            default: created_at
            enum:
              - created_at
              - name
              - version
              - type
              - project_path
        - name: sort
          in: query
          description: Return packages sorted in `asc` or `desc` order.
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: package_type
          in: query
          description: Return packages of a certain type
          schema:
            type: string
            enum:
              - maven
              - npm
              - conan
              - nuget
              - pypi
              - composer
              - generic
              - golang
              - debian
              - rubygems
              - helm
              - terraform_module
              - rpm
              - ml_model
        - name: package_name
          in: query
          description: Return packages with this name
          schema:
            type: string
        - name: package_version
          in: query
          description: Return packages with this version
          schema:
            type: string
        - name: include_versionless
          in: query
          description: Returns packages without a version
          schema:
            type: boolean
        - name: status
          in: query
          description: Return packages with specified status
          schema:
            type: string
            enum:
              - default
              - hidden
              - processing
              - error
              - pending_destruction
      responses:
        "200":
          description: List packages within a group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Package'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Group Not Found
          content: {}
  /api/v4/groups/{id}/variables:
    get:
      tags:
        - ci_variables
      description: Get a list of group-level variables
      operationId: getApiV4GroupsIdVariables
      parameters:
        - name: id
          in: path
          description: |-
            The ID of a group or URL-encoded path of the group owned by the authenticated
                  user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of group-level variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
    post:
      tags:
        - ci_variables
      description: Create a new variable in a group
      operationId: postApiV4GroupsIdVariables
      parameters:
        - name: id
          in: path
          description: |-
            The ID of a group or URL-encoded path of the group owned by the authenticated
                  user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdVariables'
        required: true
      responses:
        "201":
          description: Create a new variable in a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "400":
          description: 400 Bad Request
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdVariables
  /api/v4/groups/{id}/variables/{key}:
    get:
      tags:
        - ci_variables
      description: Get the details of a group’s specific variable
      operationId: getApiV4GroupsIdVariablesKey
      parameters:
        - name: id
          in: path
          description: |-
            The ID of a group or URL-encoded path of the group owned by the authenticated
                  user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get the details of a group’s specific variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "404":
          description: Group Variable Not Found
          content: {}
    put:
      tags:
        - ci_variables
      description: Update an existing variable from a group
      operationId: putApiV4GroupsIdVariablesKey
      parameters:
        - name: id
          in: path
          description: |-
            The ID of a group or URL-encoded path of the group owned by the authenticated
                  user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdVariablesKey'
        required: true
      responses:
        "200":
          description: Update an existing variable from a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "400":
          description: 400 Bad Request
          content: {}
        "404":
          description: Group Variable Not Found
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdVariablesKey
    delete:
      tags:
        - ci_variables
      description: Delete an existing variable from a group
      operationId: deleteApiV4GroupsIdVariablesKey
      parameters:
        - name: id
          in: path
          description: |-
            The ID of a group or URL-encoded path of the group owned by the authenticated
                  user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        "404":
          description: Group Variable Not Found
          content: {}
        "204":
          description: Delete an existing variable from a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
  /api/v4/groups/{id}/invitations:
    get:
      tags:
        - invitations
      summary: Get a list of group or project invitations viewable by the authenticated user
      description: This feature was introduced in GitLab 13.6
      operationId: getApiV4GroupsIdInvitations
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: query
          in: query
          description: A query string to search for members
          schema:
            type: string
      responses:
        "200":
          description: Get a list of group or project invitations viewable by the authenticated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Invitation'
    post:
      tags:
        - invitations
      summary: Invite non-members by email address to a group or project.
      description: This feature was introduced in GitLab 13.6
      operationId: postApiV4GroupsIdInvitations
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdInvitations'
        required: true
      responses:
        "201":
          description: Invite non-members by email address to a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Invitation'
      x-codegen-request-body-name: postApiV4GroupsIdInvitations
  /api/v4/groups/{id}/invitations/{email}:
    put:
      tags:
        - invitations
      description: Updates a group or project invitation.
      operationId: putApiV4GroupsIdInvitationsEmail
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: The email address of the invitation
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdInvitationsEmail'
        required: true
      responses:
        "200":
          description: Updates a group or project invitation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Invitation'
      x-codegen-request-body-name: putApiV4GroupsIdInvitationsEmail
    delete:
      tags:
        - invitations
      description: Removes an invitation from a group or project.
      operationId: deleteApiV4GroupsIdInvitationsEmail
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: The email address of the invitation
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Removes an invitation from a group or project.
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Could not delete invitation
          content: {}
  /api/v4/groups/{id}/-/packages/maven/*path/{file_name}:
    get:
      tags:
        - maven_packages
      summary: Download the maven package file at a group level
      description: This feature was introduced in GitLab 11.7
      operationId: getApiV4GroupsIdPackagesMaven*pathFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: Package path
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download the maven package file at a group level
          content: {}
        "302":
          description: Download the maven package file at a group level
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/members:
    get:
      tags:
        - members
      description: Gets a list of group or project members viewable by the authenticated user.
      operationId: getApiV4GroupsIdMembers
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          schema:
            type: string
        - name: user_ids
          in: query
          description: Array of user ids to look up for membership
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: skip_users
          in: query
          description: Array of user ids to be skipped for membership
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: show_seat_info
          in: query
          description: Show seat information for members
          schema:
            type: boolean
        - name: with_saml_identity
          in: query
          description: List only members with linked SAML identity
          schema:
            type: boolean
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Gets a list of group or project members viewable by the authenticated user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Member'
    post:
      tags:
        - members
      description: Adds a member to a group or project.
      operationId: postApiV4GroupsIdMembers
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdMembers'
        required: true
      responses:
        "201":
          description: Adds a member to a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
      x-codegen-request-body-name: postApiV4GroupsIdMembers
  /api/v4/groups/{id}/members/all:
    get:
      tags:
        - members
      description: Gets a list of group or project members viewable by the authenticated user, including those who gained membership through ancestor group.
      operationId: getApiV4GroupsIdMembersAll
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          schema:
            type: string
        - name: user_ids
          in: query
          description: Array of user ids to look up for membership
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: show_seat_info
          in: query
          description: Show seat information for members
          schema:
            type: boolean
        - name: state
          in: query
          description: Filter results by member state
          schema:
            type: string
            enum:
              - awaiting
              - active
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Gets a list of group or project members viewable by the authenticated user, including those who gained membership through ancestor group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Member'
  /api/v4/groups/{id}/members/{user_id}:
    get:
      tags:
        - members
      description: Gets a member of a group or project.
      operationId: getApiV4GroupsIdMembersUserId
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a member of a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
    put:
      tags:
        - members
      description: Updates a member of a group or project.
      operationId: putApiV4GroupsIdMembersUserId
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the new member
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdMembersUserId'
        required: true
      responses:
        "200":
          description: Updates a member of a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
      x-codegen-request-body-name: putApiV4GroupsIdMembersUserId
    delete:
      tags:
        - members
      description: Removes a user from a group or project.
      operationId: deleteApiV4GroupsIdMembersUserId
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
        - name: skip_subresources
          in: query
          description: Flag indicating if the deletion of direct memberships of the removed member in subgroups and projects should be skipped
          schema:
            type: boolean
            default: false
        - name: unassign_issuables
          in: query
          description: Flag indicating if the removed member should be unassigned from any issues or merge requests within given group or project
          schema:
            type: boolean
            default: false
      responses:
        "204":
          description: Removes a user from a group or project.
          content: {}
  /api/v4/groups/{id}/members/all/{user_id}:
    get:
      tags:
        - members
      description: Gets a member of a group or project, including those who gained membership through ancestor group
      operationId: getApiV4GroupsIdMembersAllUserId
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a member of a group or project, including those who gained membership through ancestor group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
  /api/v4/groups/{id}/members/{user_id}/override:
    post:
      tags:
        - groups
      description: Overrides the access level of an LDAP group member.
      operationId: postApiV4GroupsIdMembersUserIdOverride
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Overrides the access level of an LDAP group member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
    delete:
      tags:
        - groups
      description: Remove an LDAP group member access level override.
      operationId: deleteApiV4GroupsIdMembersUserIdOverride
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Remove an LDAP group member access level override.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
  /api/v4/groups/{id}/members/{member_id}/approve:
    put:
      tags:
        - groups
      description: Approves a pending member
      operationId: putApiV4GroupsIdMembersMemberIdApprove
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: member_id
          in: path
          description: The ID of the member requiring approval
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Approves a pending member
          content: {}
  /api/v4/groups/{id}/members/approve_all:
    post:
      tags:
        - groups
      description: Approves all pending members
      operationId: postApiV4GroupsIdMembersApproveAll
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Approves all pending members
          content: {}
  /api/v4/groups/{id}/pending_members:
    get:
      tags:
        - groups
      description: Lists all pending members for a group including invited users
      operationId: getApiV4GroupsIdPendingMembers
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Lists all pending members for a group including invited users
          content: {}
  /api/v4/groups/{id}/billable_members:
    get:
      tags:
        - groups
      description: Gets a list of billable users of root group.
      operationId: getApiV4GroupsIdBillableMembers
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: search
          in: query
          description: The exact name of the subscribed member
          schema:
            type: string
        - name: sort
          in: query
          description: The sorting option
          schema:
            type: string
            enum:
              - access_level_asc
              - access_level_desc
              - last_joined
              - name_asc
              - name_desc
              - oldest_joined
              - oldest_sign_in
              - recent_sign_in
              - last_activity_on_asc
              - last_activity_on_desc
      responses:
        "200":
          description: Gets a list of billable users of root group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
  /api/v4/groups/{id}/members/{user_id}/state:
    put:
      tags:
        - groups
      description: Changes the state of the memberships of a user in the group
      operationId: putApiV4GroupsIdMembersUserIdState
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdMembersUserIdState'
        required: true
      responses:
        "200":
          description: Changes the state of the memberships of a user in the group
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdMembersUserIdState
  /api/v4/groups/{id}/billable_members/{user_id}/memberships:
    get:
      tags:
        - groups
      description: Get the direct memberships of a billable user of a root group.
      operationId: getApiV4GroupsIdBillableMembersUserIdMemberships
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the direct memberships of a billable user of a root group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_BillableMembership'
  /api/v4/groups/{id}/billable_members/{user_id}/indirect:
    get:
      tags:
        - groups
      description: Get the indirect memberships of a billable user of a root group.
      operationId: getApiV4GroupsIdBillableMembersUserIdIndirect
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the indirect memberships of a billable user of a root group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_BillableMembership'
  /api/v4/groups/{id}/billable_members/{user_id}:
    delete:
      tags:
        - groups
      description: Removes a billable member from a group or project.
      operationId: deleteApiV4GroupsIdBillableMembersUserId
      parameters:
        - name: id
          in: path
          description: The ID of a group
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Removes a billable member from a group or project.
          content: {}
  /api/v4/groups/{id}/merge_requests:
    get:
      tags:
        - merge_requests
      summary: List group merge requests
      description: Get all merge requests for this group and its subgroups.
      operationId: getApiV4GroupsIdMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: author_id
          in: query
          description: Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.
          schema:
            type: integer
            format: int32
        - name: author_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          schema:
            type: string
        - name: assignee_id
          in: query
          description: Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.
          schema:
            type: integer
            format: int32
        - name: assignee_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: reviewer_username
          in: query
          description: Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.
          schema:
            type: string
        - name: labels
          in: query
          description: Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: milestone
          in: query
          description: Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: Returns `all` merge requests or just those that are `opened`, `closed`, `locked`, or `merged`.
          schema:
            type: string
            default: all
            enum:
              - opened
              - closed
              - locked
              - merged
              - all
        - name: order_by
          in: query
          description: Returns merge requests ordered by `created_at`, `label_priority`, `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields. Introduced in GitLab 14.8.
          schema:
            type: string
            default: created_at
            enum:
              - created_at
              - label_priority
              - milestone_due
              - popularity
              - priority
              - title
              - updated_at
        - name: sort
          in: query
          description: Returns merge requests sorted in `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: with_labels_details
          in: query
          description: 'If `true`, response returns more details for each label in labels field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`'
          schema:
            type: boolean
            default: false
        - name: with_merge_status_recheck
          in: query
          description: If `true`, this projection requests (but does not guarantee) that the `merge_status` field be recalculated asynchronously. Introduced in GitLab 13.0.
          schema:
            type: boolean
            default: false
        - name: created_after
          in: query
          description: Returns merge requests created on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Returns merge requests created on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: Returns merge requests updated on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_before
          in: query
          description: Returns merge requests updated on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: view
          in: query
          description: If simple, returns the `iid`, URL, title, description, and basic state of merge request
          schema:
            type: string
            enum:
              - simple
        - name: scope
          in: query
          description: 'Returns merge requests for the given scope: `created_by_me`, `assigned_to_me` or `all`'
          schema:
            type: string
            enum:
              - created-by-me
              - assigned-to-me
              - created_by_me
              - assigned_to_me
              - all
        - name: source_branch
          in: query
          description: Returns merge requests with the given source branch
          schema:
            type: string
        - name: source_project_id
          in: query
          description: Returns merge requests with the given source project id
          schema:
            type: integer
            format: int32
        - name: target_branch
          in: query
          description: Returns merge requests with the given target branch
          schema:
            type: string
        - name: search
          in: query
          description: Search merge requests against their `title` and `description`.
          schema:
            type: string
        - name: in
          in: query
          description: Modify the scope of the search attribute. `title`, `description`, or a string joining them with comma.
          schema:
            type: string
        - name: wip
          in: query
          description: Filter merge requests against their `wip` status. `yes` to return only draft merge requests, `no` to return non-draft merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: not[author_id]
          in: query
          description: '`<Negated>` Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.'
          schema:
            type: integer
            format: int32
        - name: not[author_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          schema:
            type: string
        - name: not[assignee_id]
          in: query
          description: '`<Negated>` Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.'
          schema:
            type: integer
            format: int32
        - name: not[assignee_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[reviewer_username]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.'
          schema:
            type: string
        - name: not[labels]
          in: query
          description: '`<Negated>` Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[milestone]
          in: query
          description: '`<Negated>` Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.'
          schema:
            type: string
        - name: not[my_reaction_emoji]
          in: query
          description: '`<Negated>` Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.'
          schema:
            type: string
        - name: not[reviewer_id]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.'
          schema:
            type: integer
            format: int32
        - name: deployed_before
          in: query
          description: Returns merge requests deployed before the given date/time. Expected in ISO 8601 format.
          schema:
            type: string
        - name: deployed_after
          in: query
          description: Returns merge requests deployed after the given date/time. Expected in ISO 8601 format
          schema:
            type: string
        - name: environment
          in: query
          description: Returns merge requests deployed to the given environment
          schema:
            type: string
        - name: approved
          in: query
          description: Filters merge requests by their `approved` status. `yes` returns only approved merge requests. `no` returns only non-approved merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: merge_user_id
          in: query
          description: Returns merge requests which have been merged by the user with the given user `id`. Mutually exclusive with `merge_user_username`.
          schema:
            type: integer
            format: int32
        - name: merge_user_username
          in: query
          description: Returns merge requests which have been merged by the user with the given `username`. Mutually exclusive with `merge_user_id`.
          schema:
            type: string
        - name: approver_ids
          in: query
          description: Return merge requests which have specified the users with the given IDs as an individual approver
          schema:
            type: string
        - name: approved_by_ids
          in: query
          description: Return merge requests which have been approved by the specified users with the given IDs
          schema:
            type: string
        - name: approved_by_usernames
          in: query
          description: |-
            Return merge requests which have been approved by the specified users with the given
                        usernames
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: non_archived
          in: query
          description: Returns merge requests from non archived projects only.
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: List group merge requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
  /api/v4/groups/{id}/releases:
    get:
      tags:
        - releases
      summary: List group releases
      description: Returns a list of group releases.
      operationId: getApiV4GroupsIdReleases
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The direction of the order. Either `desc` (default) for descending order or `asc` for ascending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: simple
          in: query
          description: Return only limited fields for each release
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List group releases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Release'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/groups/{id}/access_tokens:
    get:
      tags:
        - group_access_tokens
      summary: Get list of all access tokens for the specified resource
      description: This feature was introduced in GitLab 13.9.
      operationId: getApiV4GroupsIdAccessTokens
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get list of all access tokens for the specified resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ResourceAccessToken'
    post:
      tags:
        - group_access_tokens
      summary: Create a resource access token
      description: This feature was introduced in GitLab 13.9.
      operationId: postApiV4GroupsIdAccessTokens
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdAccessTokens'
        required: true
      responses:
        "201":
          description: Create a resource access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4GroupsIdAccessTokens
  /api/v4/groups/{id}/access_tokens/{token_id}:
    get:
      tags:
        - group_access_tokens
      summary: Get an access token for the specified resource by ID
      description: This feature was introduced in GitLab 14.10.
      operationId: getApiV4GroupsIdAccessTokensTokenId
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get an access token for the specified resource by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceAccessToken'
    delete:
      tags:
        - group_access_tokens
      summary: Revoke a resource access token
      description: This feature was introduced in GitLab 13.9.
      operationId: deleteApiV4GroupsIdAccessTokensTokenId
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the token
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Revoke a resource access token
          content: {}
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/groups/{id}/access_tokens/{token_id}/rotate:
    post:
      tags:
        - group_access_tokens
      summary: Rotate a resource access token
      description: This feature was introduced in GitLab 16.0.
      operationId: postApiV4GroupsIdAccessTokensTokenIdRotate
      parameters:
        - name: id
          in: path
          description: The group ID
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdAccessTokensTokenIdRotate'
        required: true
      responses:
        "201":
          description: Rotate a resource access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4GroupsIdAccessTokensTokenIdRotate
  /api/v4/groups/{id}/wikis:
    get:
      tags:
        - wikis
      description: Get a list of wiki pages
      operationId: getApiV4GroupsIdWikis
      parameters:
        - name: with_content
          in: query
          description: Include pages' content
          schema:
            type: boolean
            default: false
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of wiki pages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_WikiPageBasic'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - wikis
      description: Create a wiki page
      operationId: postApiV4GroupsIdWikis
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdWikis'
        required: true
      responses:
        "201":
          description: Create a wiki page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiPage'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdWikis
  /api/v4/groups/{id}/wikis/{slug}:
    get:
      tags:
        - wikis
      description: Get a wiki page
      operationId: getApiV4GroupsIdWikisSlug
      parameters:
        - name: slug
          in: path
          description: The slug of a wiki page
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: The version hash of a wiki page
          schema:
            type: string
        - name: render_html
          in: query
          description: Render content to HTML
          schema:
            type: boolean
            default: false
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a wiki page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiPage'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - wikis
      description: Update a wiki page
      operationId: putApiV4GroupsIdWikisSlug
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: slug
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdWikisSlug'
        required: true
      responses:
        "200":
          description: Update a wiki page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiPage'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdWikisSlug
    delete:
      tags:
        - wikis
      description: Delete a wiki page
      operationId: deleteApiV4GroupsIdWikisSlug
      parameters:
        - name: slug
          in: path
          description: The slug of a wiki page
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a wiki page
          content: {}
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/groups/{id}/wikis/attachments:
    post:
      tags:
        - wikis
      summary: Upload an attachment to the wiki repository
      description: This feature was introduced in GitLab 11.3.
      operationId: postApiV4GroupsIdWikisAttachments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdWikisAttachments'
        required: true
      responses:
        "201":
          description: Upload an attachment to the wiki repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiAttachment'
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdWikisAttachments
  /api/v4/groups/{id}/audit_events:
    get:
      tags:
        - groups
      description: Get a list of audit events in this group.
      operationId: getApiV4GroupsIdAuditEvents
      parameters:
        - name: created_after
          in: query
          description: Return audit events created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return audit events created before the specified time
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of audit events in this group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EE_API_Entities_AuditEvent'
  /api/v4/groups/{id}/audit_events/{audit_event_id}:
    get:
      tags:
        - groups
      description: Get a specific audit event in this group.
      operationId: getApiV4GroupsIdAuditEventsAuditEventId
      parameters:
        - name: audit_event_id
          in: path
          description: The ID of the audit event
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific audit event in this group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_AuditEvent'
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release.gpg:
    get:
      tags:
        - debian_packages
      summary: The Release file signature
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionReleaseGpg
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The Release file signature
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release:
    get:
      tags:
        - debian_packages
      summary: The unsigned Release file
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionRelease
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The unsigned Release file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/InRelease:
    get:
      tags:
        - debian_packages
      summary: The signed Release file
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionInrelease
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The signed Release file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages:
    get:
      tags:
        - debian_packages
      summary: The installer (udeb) binary files index
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitecturePackages
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The installer (udeb) binary files index
          content: {}
        "202":
          description: The installer (udeb) binary files index
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}:
    get:
      tags:
        - debian_packages
      summary: The installer (udeb) binary files index by hash
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitectureByHashSha256FileSha256
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
        - name: file_sha256
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The installer (udeb) binary files index by hash
          content: {}
        "202":
          description: The installer (udeb) binary files index by hash
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/Sources:
    get:
      tags:
        - debian_packages
      summary: The source files index
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionComponentSourceSources
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The source files index
          content: {}
        "202":
          description: The source files index
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}:
    get:
      tags:
        - debian_packages
      summary: The source files index by hash
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionComponentSourceByHashSha256FileSha256
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: file_sha256
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The source files index by hash
          content: {}
        "202":
          description: The source files index by hash
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages:
    get:
      tags:
        - debian_packages
      summary: The binary files index
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionComponentBinaryArchitecturePackages
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The binary files index
          content: {}
        "202":
          description: The binary files index
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}:
    get:
      tags:
        - debian_packages
      summary: The binary files index by hash
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4GroupsIdPackagesDebianDists*distributionComponentBinaryArchitectureByHashSha256FileSha256
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
        - name: file_sha256
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The binary files index by hash
          content: {}
        "202":
          description: The binary files index by hash
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/debian/pool/{distribution}/{project_id}/{letter}/{package_name}/{package_version}/{file_name}:
    get:
      tags:
        - debian_packages
      summary: Download Debian package
      description: This feature was introduced in GitLab 14.2
      operationId: getApiV4GroupsIdPackagesDebianPoolDistributionProjectIdLetterPackageNamePackageVersionFileName
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: The Project Id
          required: true
          schema:
            type: integer
            format: int32
        - name: distribution
          in: path
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: letter
          in: path
          description: The Debian Classification (first-letter or lib-first-letter)
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: The Debian Source Package Name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: The Debian Source Package Version
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: The Debian File Name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download Debian package
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/debian_distributions:
    get:
      tags:
        - debian_distribution
      summary: Get a list of Debian Distributions
      description: This feature was introduced in 14.0
      operationId: getApiV4GroupsIdDebianDistributions
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: codename
          in: query
          description: The Debian Codename
          schema:
            type: string
        - name: suite
          in: query
          description: The Debian Suite
          schema:
            type: string
        - name: origin
          in: query
          description: The Debian Origin
          schema:
            type: string
        - name: label
          in: query
          description: The Debian Label
          schema:
            type: string
        - name: version
          in: query
          description: The Debian Version
          schema:
            type: string
        - name: description
          in: query
          description: The Debian Description
          schema:
            type: string
        - name: valid_time_duration_seconds
          in: query
          description: The duration before the Release file should be considered expired by the client
          schema:
            type: integer
            format: int32
        - name: components
          in: query
          description: The list of Components
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: architectures
          in: query
          description: The list of Architectures
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Get a list of Debian Distributions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    post:
      tags:
        - debian_distribution
      summary: Create a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: postApiV4GroupsIdDebianDistributions
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GroupsIdDebianDistributions'
        required: true
      responses:
        "201":
          description: Create a Debian Distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: postApiV4GroupsIdDebianDistributions
  /api/v4/groups/{id}/-/debian_distributions/{codename}:
    get:
      tags:
        - debian_distribution
      summary: Get a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: getApiV4GroupsIdDebianDistributionsCodename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Debian Distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - debian_distribution
      summary: Update a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: putApiV4GroupsIdDebianDistributionsCodename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdDebianDistributionsCodename'
        required: true
      responses:
        "200":
          description: Update a Debian Distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdDebianDistributionsCodename
    delete:
      tags:
        - debian_distribution
      summary: Delete a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: deleteApiV4GroupsIdDebianDistributionsCodename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
        - name: suite
          in: query
          description: The Debian Suite
          schema:
            type: string
        - name: origin
          in: query
          description: The Debian Origin
          schema:
            type: string
        - name: label
          in: query
          description: The Debian Label
          schema:
            type: string
        - name: version
          in: query
          description: The Debian Version
          schema:
            type: string
        - name: description
          in: query
          description: The Debian Description
          schema:
            type: string
        - name: valid_time_duration_seconds
          in: query
          description: The duration before the Release file should be considered expired by the client
          schema:
            type: integer
            format: int32
        - name: components
          in: query
          description: The list of Components
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: architectures
          in: query
          description: The list of Architectures
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "202":
          description: Delete a Debian Distribution
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/debian_distributions/{codename}/key.asc:
    get:
      tags:
        - debian_distribution
      summary: Get a Debian Distribution Key
      description: This feature was introduced in 14.4
      operationId: getApiV4GroupsIdDebianDistributionsCodenameKeyAsc
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Debian Distribution Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags:
    get:
      tags:
        - npm_packages
      summary: Get all tags for a given an NPM package
      description: This feature was introduced in GitLab 12.7
      operationId: getApiV4GroupsIdPackagesNpmPackage*packageNameDistTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get all tags for a given an NPM package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NpmPackageTag'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags/{tag}:
    put:
      tags:
        - npm_packages
      summary: Create or Update the given tag for the given NPM package and version
      description: This feature was introduced in GitLab 12.7
      operationId: putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: tag
          in: path
          description: Package dist-tag
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag'
        required: true
      responses:
        "204":
          description: Create or Update the given tag for the given NPM package and version
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag
    delete:
      tags:
        - npm_packages
      summary: Deletes the given tag
      description: This feature was introduced in GitLab 12.7
      operationId: deleteApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
        - name: tag
          in: path
          description: Package dist-tag
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deletes the given tag
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/npm/*package_name:
    get:
      tags:
        - npm_packages
      summary: NPM registry metadata endpoint
      description: This feature was introduced in GitLab 11.8
      operationId: getApiV4GroupsIdPackagesNpm*packageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NpmPackage'
        "302":
          description: Found (redirect)
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/advisories/bulk:
    post:
      tags:
        - npm_packages
      summary: NPM registry bulk advisory endpoint
      description: This feature was introduced in GitLab 15.6
      operationId: postApiV4GroupsIdPackagesNpmNpmV1SecurityAdvisoriesBulk
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content: {}
        "307":
          description: Temporary Redirect
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/audits/quick:
    post:
      tags:
        - npm_packages
      summary: NPM registry quick audit endpoint
      description: This feature was introduced in GitLab 15.6
      operationId: postApiV4GroupsIdPackagesNpmNpmV1SecurityAuditsQuick
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content: {}
        "307":
          description: Temporary Redirect
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/index:
    get:
      tags:
        - nuget_packages
      summary: The NuGet V3 Feed Service Index
      description: This feature was introduced in GitLab 12.6
      operationId: getApiV4GroupsIdPackagesNugetIndex
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The NuGet V3 Feed Service Index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_ServiceIndex'
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Symbol File Download Endpoint
      description: This feature was introduced in GitLab 16.7
      operationId: getApiV4GroupsIdPackagesNugetSymbolfiles*fileName*signature*sameFileName
      parameters:
        - name: Symbolchecksum
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: query
          description: The symbol file name
          required: true
          schema:
            type: string
        - name: signature
          in: query
          description: The symbol file signature
          required: true
          schema:
            type: string
        - name: same_file_name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Symbol File Download Endpoint
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/v2:
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Service Index
      description: This feature was introduced in GitLab 16.2
      operationId: getApiV4GroupsIdPackagesNugetV2
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The NuGet V2 Feed Service Index
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/v2/$metadata:
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Package $metadata endpoint
      description: This feature was introduced in GitLab 16.3
      operationId: getApiV4GroupsIdPackagesNugetV2$metadata
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The NuGet V2 Feed Package $metadata endpoint
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/index:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Metadata Service - Package name level
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4GroupsIdPackagesNugetMetadata*packageNameIndex
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Metadata Service - Package name level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_PackagesMetadata'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/*package_version:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Metadata Service - Package name and version level
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4GroupsIdPackagesNugetMetadata*packageName*packageVersion
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
        - name: package_version
          in: query
          description: The NuGet package version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Metadata Service - Package name and version level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_PackageMetadata'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/nuget/query:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Search Service
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4GroupsIdPackagesNugetQuery
      parameters:
        - name: id
          in: path
          description: The group ID or full group path.
          required: true
          schema:
            type: integer
            format: int32
        - name: q
          in: query
          description: The search term
          schema:
            type: string
        - name: skip
          in: query
          description: The number of results to skip
          schema:
            type: integer
            format: int32
            default: 0
        - name: take
          in: query
          description: The number of results to return
          schema:
            type: integer
            format: int32
            default: 20
        - name: prerelease
          in: query
          description: Include prerelease versions
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: The NuGet Search Service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_SearchResults'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/pypi/files/{sha256}/*file_identifier:
    get:
      tags:
        - pypi_packages
      summary: Download a package file from a group
      description: This feature was introduced in GitLab 13.12
      operationId: getApiV4GroupsIdPackagesPypiFilesSha256*fileIdentifier
      parameters:
        - name: id
          in: path
          description: The ID or full path of the group.
          required: true
          schema:
            type: integer
            format: int32
        - name: file_identifier
          in: query
          description: The PyPi package file identifier
          required: true
          schema:
            type: string
        - name: sha256
          in: path
          description: The PyPi package sha256 check sum
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download a package file from a group
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/pypi/simple:
    get:
      tags:
        - pypi_packages
      summary: The PyPi Simple Group Index Endpoint
      description: This feature was introduced in GitLab 15.1
      operationId: getApiV4GroupsIdPackagesPypiSimple
      parameters:
        - name: id
          in: path
          description: The ID or full path of the group.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The PyPi Simple Group Index Endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/groups/{id}/-/packages/pypi/simple/*package_name:
    get:
      tags:
        - pypi_packages
      summary: The PyPi Simple Group Package Endpoint
      description: This feature was introduced in GitLab 12.10
      operationId: getApiV4GroupsIdPackagesPypiSimple*packageName
      parameters:
        - name: id
          in: path
          description: The ID or full path of the group.
          required: true
          schema:
            type: integer
            format: int32
        - name: package_name
          in: query
          description: The PyPi package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The PyPi Simple Group Package Endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/access_requests:
    get:
      tags:
        - access_requests
      summary: Gets a list of access requests for a project.
      description: This feature was introduced in GitLab 8.11.
      operationId: getApiV4ProjectsIdAccessRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Gets a list of access requests for a project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_AccessRequester'
    post:
      tags:
        - access_requests
      summary: Requests access for the authenticated user to a project.
      description: This feature was introduced in GitLab 8.11.
      operationId: postApiV4ProjectsIdAccessRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_AccessRequester'
            successfull_response:
              example:
                id: 1
                username: raymond_smith
                name: Raymond Smith
                state: active
                created_at: "2012-10-22T14:13:35Z"
                access_level: 20
  /api/v4/projects/{id}/access_requests/{user_id}/approve:
    put:
      tags:
        - access_requests
      summary: Approves an access request for the given user.
      description: This feature was introduced in GitLab 8.11.
      operationId: putApiV4ProjectsIdAccessRequestsUserIdApprove
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the access requester
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdAccessRequestsUserIdApprove'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_AccessRequester'
            successfull_response:
              example:
                id: 1
                username: raymond_smith
                name: Raymond Smith
                state: active
                created_at: "2012-10-22T14:13:35Z"
                access_level: 20
      x-codegen-request-body-name: putApiV4ProjectsIdAccessRequestsUserIdApprove
  /api/v4/projects/{id}/access_requests/{user_id}:
    delete:
      tags:
        - access_requests
      summary: Denies an access request for the given user.
      description: This feature was introduced in GitLab 8.11.
      operationId: deleteApiV4ProjectsIdAccessRequestsUserId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the access requester
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Denies an access request for the given user.
          content: {}
  /api/v4/projects/{id}/badges:
    get:
      tags:
        - badges
      summary: Gets a list of project badges viewable by the authenticated user.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4ProjectsIdBadges
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: name
          in: query
          description: Name for the badge
          schema:
            type: string
      responses:
        "200":
          description: Gets a list of project badges viewable by the authenticated user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Badge'
    post:
      tags:
        - badges
      summary: Adds a badge to a project.
      description: This feature was introduced in GitLab 10.6.
      operationId: postApiV4ProjectsIdBadges
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdBadges'
        required: true
      responses:
        "201":
          description: Adds a badge to a project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
      x-codegen-request-body-name: postApiV4ProjectsIdBadges
  /api/v4/projects/{id}/badges/render:
    get:
      tags:
        - badges
      summary: Preview a badge from a project.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4ProjectsIdBadgesRender
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: link_url
          in: query
          description: URL of the badge link
          required: true
          schema:
            type: string
        - name: image_url
          in: query
          description: URL of the badge image
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preview a badge from a project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicBadgeDetails'
  /api/v4/projects/{id}/badges/{badge_id}:
    get:
      tags:
        - badges
      summary: Gets a badge of a project.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4ProjectsIdBadgesBadgeId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a badge of a project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
    put:
      tags:
        - badges
      summary: Updates a badge of a project.
      description: This feature was introduced in GitLab 10.6.
      operationId: putApiV4ProjectsIdBadgesBadgeId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdBadgesBadgeId'
        required: true
      responses:
        "200":
          description: Updates a badge of a project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
      x-codegen-request-body-name: putApiV4ProjectsIdBadgesBadgeId
    delete:
      tags:
        - badges
      summary: Removes a badge from the project.
      description: This feature was introduced in GitLab 10.6.
      operationId: deleteApiV4ProjectsIdBadgesBadgeId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Removes a badge from the project.
          content: {}
  /api/v4/projects/{id}/repository/branches:
    get:
      tags:
        - branches
      description: Get a project repository branches
      operationId: getApiV4ProjectsIdRepositoryBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: search
          in: query
          description: Return list of branches matching the search criteria
          schema:
            type: string
        - name: regex
          in: query
          description: Return list of branches matching the regex
          schema:
            type: string
        - name: sort
          in: query
          description: Return list of branches sorted by the given field
          schema:
            type: string
            enum:
              - name_asc
              - updated_asc
              - updated_desc
        - name: page_token
          in: query
          description: Name of branch to start the pagination from
          schema:
            type: string
      responses:
        "200":
          description: Get a project repository branches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Branch'
        "404":
          description: 404 Project Not Found
          content: {}
    post:
      tags:
        - branches
      description: Create branch
      operationId: postApiV4ProjectsIdRepositoryBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryBranches'
        required: true
      responses:
        "201":
          description: Create branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Branch'
        "400":
          description: Failed to create branch
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryBranches
  /api/v4/projects/{id}/repository/branches/{branch}/protect:
    put:
      tags:
        - branches
      description: Protect a single branch
      operationId: putApiV4ProjectsIdRepositoryBranchesBranchProtect
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdRepositoryBranchesBranchProtect'
        required: true
      responses:
        "200":
          description: Protect a single branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Branch'
        "404":
          description: 404 Branch Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdRepositoryBranchesBranchProtect
  /api/v4/projects/{id}/repository/branches/{branch}/unprotect:
    put:
      tags:
        - branches
      description: Unprotect a single branch
      operationId: putApiV4ProjectsIdRepositoryBranchesBranchUnprotect
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Unprotect a single branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Branch'
        "404":
          description: 404 Project Not Found
          content: {}
  /api/v4/projects/{id}/repository/branches/{branch}:
    get:
      tags:
        - branches
      description: Get a single repository branch
      operationId: getApiV4ProjectsIdRepositoryBranchesBranch
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: branch
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single repository branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Branch'
        "404":
          description: Branch Not Found
          content: {}
    delete:
      tags:
        - branches
      description: Delete a branch
      operationId: deleteApiV4ProjectsIdRepositoryBranchesBranch
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a branch
          content: {}
        "404":
          description: Branch Not Found
          content: {}
    head:
      tags:
        - branches
      description: Check if a branch exists
      operationId: headApiV4ProjectsIdRepositoryBranchesBranch
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/repository/merged_branches:
    delete:
      tags:
        - branches
      description: Delete all merged branches
      operationId: deleteApiV4ProjectsIdRepositoryMergedBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "202":
          description: 202 Accepted
          content: {}
        "404":
          description: 404 Project Not Found
          content: {}
  /api/v4/projects/{id}/jobs/artifacts/{ref_name}/download:
    get:
      tags:
        - projects
      summary: Download the artifacts archive from a job
      description: This feature was introduced in GitLab 8.10
      operationId: getApiV4ProjectsIdJobsArtifactsRefNameDownload
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: ref_name
          in: path
          description: Branch or tag name in repository. `HEAD` or `SHA` references are not supported.
          required: true
          schema:
            type: string
        - name: job
          in: query
          description: The name of the job.
          required: true
          schema:
            type: string
        - name: job_token
          in: query
          description: To be used with triggers for multi-project pipelines, available only on Premium and Ultimate tiers.
          schema:
            type: string
      responses:
        "200":
          description: Download the artifacts archive from a job
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/artifacts/{ref_name}/raw/*artifact_path:
    get:
      tags:
        - projects
      summary: Download a specific file from artifacts archive from a ref
      description: This feature was introduced in GitLab 11.5
      operationId: getApiV4ProjectsIdJobsArtifactsRefNameRaw*artifactPath
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: ref_name
          in: path
          description: Branch or tag name in repository. `HEAD` or `SHA` references are not supported.
          required: true
          schema:
            type: string
        - name: job
          in: query
          description: The name of the job.
          required: true
          schema:
            type: string
        - name: artifact_path
          in: query
          description: Path to a file inside the artifacts archive.
          required: true
          schema:
            type: string
        - name: job_token
          in: query
          description: To be used with triggers for multi-project pipelines, available only on Premium and Ultimate tiers.
          schema:
            type: string
      responses:
        "200":
          description: Download a specific file from artifacts archive from a ref
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/artifacts:
    get:
      tags:
        - projects
      summary: Download the artifacts archive from a job
      description: This feature was introduced in GitLab 8.5
      operationId: getApiV4ProjectsIdJobsJobIdArtifacts
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
        - name: job_token
          in: query
          description: To be used with triggers for multi-project pipelines, available only on Premium and Ultimate tiers.
          schema:
            type: string
      responses:
        "200":
          description: Download the artifacts archive from a job
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - projects
      summary: Delete the artifacts files from a job
      description: This feature was introduced in GitLab 11.9
      operationId: deleteApiV4ProjectsIdJobsJobIdArtifacts
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete the artifacts files from a job
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "409":
          description: Conflict
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/artifacts/*artifact_path:
    get:
      tags:
        - projects
      summary: Download a specific file from artifacts archive
      description: This feature was introduced in GitLab 10.0
      operationId: getApiV4ProjectsIdJobsJobIdArtifacts*artifactPath
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
        - name: artifact_path
          in: query
          description: Path to a file inside the artifacts archive.
          required: true
          schema:
            type: string
        - name: job_token
          in: query
          description: To be used with triggers for multi-project pipelines, available only on Premium and Ultimate tiers.
          schema:
            type: string
      responses:
        "200":
          description: Download a specific file from artifacts archive
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/artifacts/keep:
    post:
      tags:
        - projects
      description: Keep the artifacts to prevent them from being deleted
      operationId: postApiV4ProjectsIdJobsJobIdArtifactsKeep
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Keep the artifacts to prevent them from being deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/artifacts:
    delete:
      tags:
        - projects
      description: Expire the artifacts files from a project
      operationId: deleteApiV4ProjectsIdArtifacts
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Expire the artifacts files from a project
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "409":
          description: Conflict
          content: {}
  /api/v4/projects/{id}/jobs:
    get:
      tags:
        - projects
      description: Get a projects jobs
      operationId: getApiV4ProjectsIdJobs
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: The scope of builds to show
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - created
                - waiting_for_resource
                - preparing
                - waiting_for_callback
                - pending
                - running
                - success
                - failed
                - canceling
                - canceled
                - skipped
                - manual
                - scheduled
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a projects jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}:
    get:
      tags:
        - projects
      description: Get a specific job of a project
      operationId: getApiV4ProjectsIdJobsJobId
      parameters:
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific job of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/trace:
    get:
      tags:
        - projects
      description: Get a trace of a specific job of a project
      operationId: getApiV4ProjectsIdJobsJobIdTrace
      parameters:
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a trace of a specific job of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/cancel:
    post:
      tags:
        - projects
      description: Cancel a specific job of a project
      operationId: postApiV4ProjectsIdJobsJobIdCancel
      parameters:
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Cancel a specific job of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/retry:
    post:
      tags:
        - projects
      description: Retry a specific job of a project
      operationId: postApiV4ProjectsIdJobsJobIdRetry
      parameters:
        - name: job_id
          in: path
          description: The ID of a job
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Retry a specific job of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/erase:
    post:
      tags:
        - projects
      description: Erase job (remove artifacts and the trace)
      operationId: postApiV4ProjectsIdJobsJobIdErase
      parameters:
        - name: job_id
          in: path
          description: The ID of a build
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Erase job (remove artifacts and the trace)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
  /api/v4/projects/{id}/jobs/{job_id}/play:
    post:
      tags:
        - projects
      summary: Trigger an actionable job (manual, delayed, etc)
      description: This feature was added in GitLab 8.11
      operationId: postApiV4ProjectsIdJobsJobIdPlay
      parameters:
        - name: job_id
          in: path
          description: The ID of a Job
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdJobsJobIdPlay'
        required: true
      responses:
        "200":
          description: Trigger an actionable job (manual, delayed, etc)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_JobBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdJobsJobIdPlay
  /api/v4/projects/{id}/resource_groups:
    get:
      tags:
        - ci_resource_groups
      description: Get all resource groups for a project
      operationId: getApiV4ProjectsIdResourceGroups
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all resource groups for a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_ResourceGroup'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/resource_groups/{key}:
    get:
      tags:
        - ci_resource_groups
      description: Get a specific resource group
      operationId: getApiV4ProjectsIdResourceGroupsKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of the resource group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a specific resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResourceGroup'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - ci_resource_groups
      summary: Edit an existing resource group
      description: Updates an existing resource group's properties.
      operationId: putApiV4ProjectsIdResourceGroupsKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of the resource group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdResourceGroupsKey'
        required: true
      responses:
        "200":
          description: Edit an existing resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResourceGroup'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdResourceGroupsKey
  /api/v4/projects/{id}/resource_groups/{key}/upcoming_jobs:
    get:
      tags:
        - ci_resource_groups
      description: List upcoming jobs for a specific resource group
      operationId: getApiV4ProjectsIdResourceGroupsKeyUpcomingJobs
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of the resource group
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List upcoming jobs for a specific resource group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_JobBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/runners:
    get:
      tags:
        - runners
        - projects
      summary: List project's runners
      description: List all runners available in the project, including from ancestor groups and any allowed shared runners.
      operationId: getApiV4ProjectsIdRunners
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: 'Deprecated: Use `type` or `status` instead. The scope of runners to return'
          schema:
            type: string
            enum:
              - specific
              - shared
              - instance_type
              - group_type
              - project_type
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: type
          in: query
          description: The type of runners to return
          schema:
            type: string
            enum:
              - instance_type
              - group_type
              - project_type
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          schema:
            type: boolean
        - name: status
          in: query
          description: The status of runners to return
          schema:
            type: string
            enum:
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: tag_list
          in: query
          description: A list of runner tags
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: version_prefix
          in: query
          description: The version prefix of runners to return
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get runners available for project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "400":
          description: Scope contains invalid value
          content: {}
        "403":
          description: No access granted
          content: {}
    post:
      tags:
        - runners
        - projects
      summary: Enable a runner in project
      description: Enable an available project runner in the project.
      operationId: postApiV4ProjectsIdRunners
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRunners'
        required: true
      responses:
        "201":
          description: Enable a runner in project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: No access granted
          content: {}
        "404":
          description: Runner not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRunners
  /api/v4/projects/{id}/runners/{runner_id}:
    delete:
      tags:
        - runners
        - projects
      summary: Disable a project runner from the project
      description: It works only if the project isn't the only project associated with the specified runner. If so, an error is returned. Use the call to delete a runner instead.
      operationId: deleteApiV4ProjectsIdRunnersRunnerId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: runner_id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Bad Request
          content: {}
        "204":
          description: Disable project's runner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "403":
          description: Only one project associated with the runner. Please remove the runner instead
          content: {}
        "404":
          description: Runner not found
          content: {}
        "412":
          description: Precondition Failed
          content: {}
  /api/v4/projects/{id}/runners/reset_registration_token:
    post:
      tags:
        - runners
        - projects
      summary: Reset the runner registration token for a project
      description: Reset runner registration token
      operationId: postApiV4ProjectsIdRunnersResetRegistrationToken
      parameters:
        - name: id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Reset runner registration token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResetTokenResult'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Project Not Found
          content: {}
  /api/v4/projects/{id}/secure_files:
    get:
      tags:
        - secure_files
      description: Get list of secure files in a project
      operationId: getApiV4ProjectsIdSecureFiles
      parameters:
        - name: id
          in: path
          description: |-
            The ID or URL-encoded path of the project owned by the
                    authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get list of secure files in a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_SecureFile'
    post:
      tags:
        - secure_files
      description: Create a secure file
      operationId: postApiV4ProjectsIdSecureFiles
      parameters:
        - name: id
          in: path
          description: |-
            The ID or URL-encoded path of the project owned by the
                    authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdSecureFiles'
        required: true
      responses:
        "201":
          description: Create a secure file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_SecureFile'
        "400":
          description: 400 Bad Request
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdSecureFiles
  /api/v4/projects/{id}/secure_files/{secure_file_id}:
    get:
      tags:
        - secure_files
      description: Get the details of a specific secure file in a project
      operationId: getApiV4ProjectsIdSecureFilesSecureFileId
      parameters:
        - name: id
          in: path
          description: The ID of a secure file
          required: true
          schema:
            type: integer
            format: int32
        - name: secure_file_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get the details of a specific secure file in a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_SecureFile'
        "404":
          description: 404 Not found
          content: {}
    delete:
      tags:
        - secure_files
      description: Remove a secure file
      operationId: deleteApiV4ProjectsIdSecureFilesSecureFileId
      parameters:
        - name: id
          in: path
          description: |-
            The ID or URL-encoded path of the project owned by the
                    authenticated user
          required: true
          schema:
            type: string
        - name: secure_file_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Remove a secure file
          content: {}
        "404":
          description: 404 Not found
          content: {}
  /api/v4/projects/{id}/secure_files/{secure_file_id}/download:
    get:
      tags:
        - secure_files
      description: Download secure file
      operationId: getApiV4ProjectsIdSecureFilesSecureFileIdDownload
      parameters:
        - name: id
          in: path
          description: |-
            The ID or URL-encoded path of the project owned by the
                    authenticated user
          required: true
          schema:
            type: string
        - name: secure_file_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Download secure file
          content: {}
        "404":
          description: 404 Not found
          content: {}
  /api/v4/projects/{id}/pipelines:
    get:
      tags:
        - projects
      summary: Get all Pipelines of the project
      description: This feature was introduced in GitLab 8.11.
      operationId: getApiV4ProjectsIdPipelines
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: scope
          in: query
          description: The scope of pipelines
          schema:
            type: string
            enum:
              - running
              - pending
              - finished
              - branches
              - tags
        - name: status
          in: query
          description: The status of pipelines
          schema:
            type: string
            enum:
              - created
              - waiting_for_resource
              - preparing
              - waiting_for_callback
              - pending
              - running
              - success
              - failed
              - canceling
              - canceled
              - skipped
              - manual
              - scheduled
        - name: ref
          in: query
          description: The ref of pipelines
          schema:
            type: string
        - name: sha
          in: query
          description: The sha of pipelines
          schema:
            type: string
        - name: yaml_errors
          in: query
          description: Returns pipelines with invalid configurations
          schema:
            type: boolean
        - name: username
          in: query
          description: The username of the user who triggered pipelines
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return pipelines updated before the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: 'Return pipelines updated after the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: order_by
          in: query
          description: Order pipelines
          schema:
            type: string
            default: id
            enum:
              - id
              - status
              - ref
              - updated_at
              - user_id
        - name: sort
          in: query
          description: Sort pipelines
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: source
          in: query
          schema:
            type: string
            enum:
              - unknown
              - push
              - web
              - trigger
              - schedule
              - api
              - external
              - pipeline
              - chat
              - webide
              - merge_request_event
              - external_pull_request_event
              - parent_pipeline
              - ondemand_dast_scan
              - ondemand_dast_validation
              - security_orchestration_policy
              - container_registry_push
        - name: name
          in: query
          description: Filter pipelines by name
          schema:
            type: string
      responses:
        "200":
          description: Get all Pipelines of the project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/pipeline:
    post:
      tags:
        - projects
      summary: Create a new pipeline
      description: This feature was introduced in GitLab 8.14
      operationId: postApiV4ProjectsIdPipeline
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPipeline'
        required: true
      responses:
        "201":
          description: Create a new pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPipeline
  /api/v4/projects/{id}/pipelines/latest:
    get:
      tags:
        - projects
      summary: Gets the latest pipeline for the project branch
      description: This feature was introduced in GitLab 12.3
      operationId: getApiV4ProjectsIdPipelinesLatest
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: Branch ref of pipeline. Uses project default branch if not specified.
          schema:
            type: string
      responses:
        "200":
          description: Gets the latest pipeline for the project branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineWithMetadata'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}:
    get:
      tags:
        - projects
      summary: Gets a specific pipeline for the project
      description: This feature was introduced in GitLab 8.11
      operationId: getApiV4ProjectsIdPipelinesPipelineId
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a specific pipeline for the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineWithMetadata'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - projects
      summary: Deletes a pipeline
      description: This feature was introduced in GitLab 11.6
      operationId: deleteApiV4ProjectsIdPipelinesPipelineId
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Pipeline was deleted
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/jobs:
    get:
      tags:
        - projects
      description: Get pipeline jobs
      operationId: getApiV4ProjectsIdPipelinesPipelineIdJobs
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
        - name: include_retried
          in: query
          description: Includes retried jobs
          schema:
            type: boolean
            default: false
        - name: scope
          in: query
          description: The scope of builds to show
          schema:
            type: string
            enum:
              - created
              - waiting_for_resource
              - preparing
              - waiting_for_callback
              - pending
              - running
              - success
              - failed
              - canceling
              - canceled
              - skipped
              - manual
              - scheduled
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get pipeline jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_Job'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/bridges:
    get:
      tags:
        - projects
      description: Get pipeline bridge jobs
      operationId: getApiV4ProjectsIdPipelinesPipelineIdBridges
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
        - name: scope
          in: query
          description: The scope of builds to show
          schema:
            type: string
            enum:
              - created
              - waiting_for_resource
              - preparing
              - waiting_for_callback
              - pending
              - running
              - success
              - failed
              - canceling
              - canceled
              - skipped
              - manual
              - scheduled
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get pipeline bridge jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_Bridge'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/variables:
    get:
      tags:
        - projects
      summary: Gets the variables for a given pipeline
      description: This feature was introduced in GitLab 11.11
      operationId: getApiV4ProjectsIdPipelinesPipelineIdVariables
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets the variables for a given pipeline
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report:
    get:
      tags:
        - projects
      summary: Gets the test report for a given pipeline
      description: This feature was introduced in GitLab 13.0.
      operationId: getApiV4ProjectsIdPipelinesPipelineIdTestReport
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets the test report for a given pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportEntity'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report_summary:
    get:
      tags:
        - projects
      summary: Gets the test report summary for a given pipeline
      description: This feature was introduced in GitLab 14.2
      operationId: getApiV4ProjectsIdPipelinesPipelineIdTestReportSummary
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets the test report summary for a given pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportSummaryEntity'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/metadata:
    put:
      tags:
        - projects
      summary: Updates pipeline metadata
      description: This feature was introduced in GitLab 16.6
      operationId: putApiV4ProjectsIdPipelinesPipelineIdMetadata
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPipelinesPipelineIdMetadata'
        required: true
      responses:
        "200":
          description: Updates pipeline metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineWithMetadata'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPipelinesPipelineIdMetadata
  /api/v4/projects/{id}/pipelines/{pipeline_id}/retry:
    post:
      tags:
        - projects
      summary: Retry builds in the pipeline
      description: This feature was introduced in GitLab 8.11.
      operationId: postApiV4ProjectsIdPipelinesPipelineIdRetry
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Retry builds in the pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipelines/{pipeline_id}/cancel:
    post:
      tags:
        - projects
      summary: Cancel all builds in the pipeline
      description: This feature was introduced in GitLab 8.11.
      operationId: postApiV4ProjectsIdPipelinesPipelineIdCancel
      parameters:
        - name: id
          in: path
          description: The project ID or URL-encoded path
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The pipeline ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Cancel all builds in the pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipeline_schedules:
    get:
      tags:
        - projects
      description: Get all pipeline schedules
      operationId: getApiV4ProjectsIdPipelineSchedules
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: scope
          in: query
          description: The scope of pipeline schedules
          schema:
            type: string
            enum:
              - active
              - inactive
      responses:
        "200":
          description: Get all pipeline schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_PipelineSchedule'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - projects
      description: Create a new pipeline schedule
      operationId: postApiV4ProjectsIdPipelineSchedules
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPipelineSchedules'
        required: true
      responses:
        "201":
          description: Create a new pipeline schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineScheduleDetails'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPipelineSchedules
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}:
    get:
      tags:
        - projects
      description: Get a single pipeline schedule
      operationId: getApiV4ProjectsIdPipelineSchedulesPipelineScheduleId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single pipeline schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineScheduleDetails'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - projects
      description: Edit a pipeline schedule
      operationId: putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId'
        required: true
      responses:
        "200":
          description: Edit a pipeline schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineScheduleDetails'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId
    delete:
      tags:
        - projects
      description: Delete a pipeline schedule
      operationId: deleteApiV4ProjectsIdPipelineSchedulesPipelineScheduleId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a pipeline schedule
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "412":
          description: Precondition Failed
          content: {}
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/pipelines:
    get:
      tags:
        - projects
      description: Get all pipelines triggered from a pipeline schedule
      operationId: getApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdPipelines
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get all pipelines triggered from a pipeline schedule
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership:
    post:
      tags:
        - projects
      description: Take ownership of a pipeline schedule
      operationId: postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdTakeOwnership
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Take ownership of a pipeline schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineScheduleDetails'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play:
    post:
      tags:
        - projects
      summary: Play a scheduled pipeline immediately
      description: This feature was added in GitLab 12.8
      operationId: postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdPlay
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Play a scheduled pipeline immediately
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables:
    post:
      tags:
        - projects
      description: Create a new pipeline schedule variable
      operationId: postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables'
        required: true
      responses:
        "201":
          description: Create a new pipeline schedule variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}:
    put:
      tags:
        - projects
      description: Edit a pipeline schedule variable
      operationId: putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey'
        required: true
      responses:
        "200":
          description: Edit a pipeline schedule variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey
    delete:
      tags:
        - projects
      description: Delete a pipeline schedule variable
      operationId: deleteApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule id
          required: true
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Delete a pipeline schedule variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/(ref/{ref}/)trigger/pipeline:
    post:
      tags:
        - projects
      description: Trigger a GitLab project pipeline
      operationId: postApiV4ProjectsId(refRef)triggerPipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: The commit sha or name of a branch or tag
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsId(refRef)triggerPipeline'
        required: true
      responses:
        "201":
          description: Trigger a GitLab project pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsId(refRef)triggerPipeline
  /api/v4/projects/{id}/triggers:
    get:
      tags:
        - projects
      description: Get trigger tokens list
      operationId: getApiV4ProjectsIdTriggers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get trigger tokens list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Trigger'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - projects
      description: Create a trigger token
      operationId: postApiV4ProjectsIdTriggers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdTriggers'
        required: true
      responses:
        "201":
          description: Create a trigger token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Trigger'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdTriggers
  /api/v4/projects/{id}/triggers/{trigger_id}:
    get:
      tags:
        - projects
      description: Get specific trigger token of a project
      operationId: getApiV4ProjectsIdTriggersTriggerId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: trigger_id
          in: path
          description: The trigger token ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get specific trigger token of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Trigger'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - projects
      description: Update a trigger token
      operationId: putApiV4ProjectsIdTriggersTriggerId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: trigger_id
          in: path
          description: The trigger token ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdTriggersTriggerId'
        required: true
      responses:
        "200":
          description: Update a trigger token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Trigger'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdTriggersTriggerId
    delete:
      tags:
        - projects
      description: Delete a trigger token
      operationId: deleteApiV4ProjectsIdTriggersTriggerId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: trigger_id
          in: path
          description: The trigger token ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a trigger token
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "412":
          description: Precondition Failed
          content: {}
  /api/v4/projects/{id}/variables:
    get:
      tags:
        - ci_variables
      description: Get project variables
      operationId: getApiV4ProjectsIdVariables
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get project variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
    post:
      tags:
        - ci_variables
      description: Create a new variable in a project
      operationId: postApiV4ProjectsIdVariables
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdVariables'
        required: true
      responses:
        "201":
          description: Create a new variable in a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "400":
          description: 400 Bad Request
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdVariables
  /api/v4/projects/{id}/variables/{key}:
    get:
      tags:
        - ci_variables
      description: Get the details of a single variable from a project
      operationId: getApiV4ProjectsIdVariablesKey
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
        - name: filter[environment_scope]
          in: query
          description: The environment scope of a variable
          schema:
            type: string
      responses:
        "200":
          description: Get the details of a single variable from a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "404":
          description: Variable Not Found
          content: {}
    put:
      tags:
        - ci_variables
      description: Update an existing variable from a project
      operationId: putApiV4ProjectsIdVariablesKey
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdVariablesKey'
        required: true
      responses:
        "200":
          description: Update an existing variable from a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "404":
          description: Variable Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdVariablesKey
    delete:
      tags:
        - ci_variables
      description: Delete an existing variable from a project
      operationId: deleteApiV4ProjectsIdVariablesKey
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
        - name: filter[environment_scope]
          in: query
          description: The environment scope of the variable
          schema:
            type: string
      responses:
        "404":
          description: Variable Not Found
          content: {}
        "204":
          description: Delete an existing variable from a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
  /api/v4/projects/{id}/cluster_agents:
    get:
      tags:
        - cluster_agents
      summary: List the agents for a project
      description: This feature was introduced in GitLab 14.10. Returns the list of agents registered for the project.
      operationId: getApiV4ProjectsIdClusterAgents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List the agents for a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Clusters_Agent'
    post:
      tags:
        - cluster_agents
      summary: Register an agent with a project
      description: This feature was introduced in GitLab 14.10. Registers an agent to the project.
      operationId: postApiV4ProjectsIdClusterAgents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdClusterAgents'
        required: true
      responses:
        "201":
          description: Register an agent with a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Clusters_Agent'
      x-codegen-request-body-name: postApiV4ProjectsIdClusterAgents
  /api/v4/projects/{id}/cluster_agents/{agent_id}:
    get:
      tags:
        - cluster_agents
      summary: Get details about an agent
      description: This feature was introduced in GitLab 14.10. Gets a single agent details.
      operationId: getApiV4ProjectsIdClusterAgentsAgentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: The ID of an agent
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get details about an agent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Clusters_Agent'
    delete:
      tags:
        - cluster_agents
      summary: Delete a registered agent
      description: This feature was introduced in GitLab 14.10. Deletes an existing agent registration.
      operationId: deleteApiV4ProjectsIdClusterAgentsAgentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: The ID of an agent
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a registered agent
          content: {}
  /api/v4/projects/{id}/repository/commits:
    get:
      tags:
        - commits
      description: Get a project repository commits
      operationId: getApiV4ProjectsIdRepositoryCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: ref_name
          in: query
          description: The name of a repository branch or tag, if not given the default branch is used
          schema:
            type: string
        - name: since
          in: query
          description: Only commits after or on this date will be returned
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          description: Only commits before or on this date will be returned
          schema:
            type: string
            format: date-time
        - name: path
          in: query
          description: The file path
          schema:
            type: string
        - name: author
          in: query
          description: Search commits by commit author
          schema:
            type: string
        - name: all
          in: query
          description: Every commit will be returned
          schema:
            type: boolean
        - name: with_stats
          in: query
          description: Stats about each commit will be added to the response
          schema:
            type: boolean
        - name: first_parent
          in: query
          description: Only include the first parent of merges
          schema:
            type: boolean
        - name: order
          in: query
          description: List commits in order
          schema:
            type: string
            default: default
            enum:
              - default
              - topo
        - name: trailers
          in: query
          description: Parse and include Git trailers for every commit
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a project repository commits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Commit'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - commits
      summary: Commit multiple file changes as one commit
      description: This feature was introduced in GitLab 8.13
      operationId: postApiV4ProjectsIdRepositoryCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryCommits'
        required: true
      responses:
        "200":
          description: Commit multiple file changes as one commit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitDetail'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryCommits
  /api/v4/projects/{id}/repository/commits/{sha}:
    get:
      tags:
        - commits
      description: Get a specific commit of a project
      operationId: getApiV4ProjectsIdRepositoryCommitsSha
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag
          required: true
          schema:
            type: string
        - name: stats
          in: query
          description: Include commit stats
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: Get a specific commit of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitDetail'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/commits/{sha}/diff:
    get:
      tags:
        - commits
      description: Get the diff for a specific commit of a project
      operationId: getApiV4ProjectsIdRepositoryCommitsShaDiff
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: unidiff
          in: query
          description: A diff in a Unified diff format
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get the diff for a specific commit of a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Diff'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/commits/{sha}/comments:
    get:
      tags:
        - commits
      description: Get a commit's comments
      operationId: getApiV4ProjectsIdRepositoryCommitsShaComments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a commit's comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_CommitNote'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - commits
      description: Post comment to commit
      operationId: postApiV4ProjectsIdRepositoryCommitsShaComments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag on which to post a comment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryCommitsShaComments'
        required: true
      responses:
        "200":
          description: Post comment to commit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitNote'
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryCommitsShaComments
  /api/v4/projects/{id}/repository/commits/{sha}/sequence:
    get:
      tags:
        - commits
      description: Get the sequence count of a commit SHA
      operationId: getApiV4ProjectsIdRepositoryCommitsShaSequence
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit SHA
          required: true
          schema:
            type: string
        - name: first_parent
          in: query
          description: Only include the first parent of merges
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get the sequence count of a commit SHA
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitSequence'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/commits/{sha}/cherry_pick:
    post:
      tags:
        - commits
      summary: Cherry pick commit into a branch
      description: This feature was introduced in GitLab 8.15
      operationId: postApiV4ProjectsIdRepositoryCommitsShaCherryPick
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag to be cherry picked
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryCommitsShaCherryPick'
        required: true
      responses:
        "200":
          description: Cherry pick commit into a branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Commit'
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryCommitsShaCherryPick
  /api/v4/projects/{id}/repository/commits/{sha}/revert:
    post:
      tags:
        - commits
      summary: Revert a commit in a branch
      description: This feature was introduced in GitLab 11.5
      operationId: postApiV4ProjectsIdRepositoryCommitsShaRevert
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: Commit SHA to revert
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryCommitsShaRevert'
        required: true
      responses:
        "200":
          description: Revert a commit in a branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Commit'
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryCommitsShaRevert
  /api/v4/projects/{id}/repository/commits/{sha}/refs:
    get:
      tags:
        - commits
      summary: Get all references a commit is pushed to
      description: This feature was introduced in GitLab 10.6
      operationId: getApiV4ProjectsIdRepositoryCommitsShaRefs
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Scope
          schema:
            type: string
            default: all
            enum:
              - branch
              - tag
              - all
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all references a commit is pushed to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BasicRef'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/commits/{sha}/merge_requests:
    get:
      tags:
        - commits
      description: Get Merge Requests associated with a commit
      operationId: getApiV4ProjectsIdRepositoryCommitsShaMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag on which to find Merge Requests
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get Merge Requests associated with a commit
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_MergeRequestBasic'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/commits/{sha}/signature:
    get:
      tags:
        - commits
      description: Get a commit's signature
      operationId: getApiV4ProjectsIdRepositoryCommitsShaSignature
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: A commit sha, or the name of a branch or tag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a commit's signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitSignature'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/commits/{sha}/statuses:
    get:
      tags:
        - projects
      description: Get a commit's statuses
      operationId: getApiV4ProjectsIdRepositoryCommitsShaStatuses
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The ref
          schema:
            type: string
        - name: stage
          in: query
          description: The stage
          schema:
            type: string
        - name: name
          in: query
          description: The name
          schema:
            type: string
        - name: all
          in: query
          description: Show all statuses
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a commit's statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_CommitStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/statuses/{sha}:
    post:
      tags:
        - projects
      description: Post status to a commit
      operationId: postApiV4ProjectsIdStatusesSha
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdStatusesSha'
        required: true
      responses:
        "200":
          description: Post status to a commit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitStatus'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdStatusesSha
  /api/v4/projects/{id}/deploy_keys:
    get:
      tags:
        - deploy_keys
      summary: List deploy keys for project
      description: Get a list of a project's deploy keys.
      operationId: getApiV4ProjectsIdDeployKeys
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List deploy keys for project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_DeployKeysProject'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - deploy_keys
      summary: Add deploy key
      description: Creates a new deploy key for a project. If the deploy key already exists in another project, it's joined to the current project only if the original one is accessible by the same user.
      operationId: postApiV4ProjectsIdDeployKeys
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdDeployKeys'
        required: true
      responses:
        "201":
          description: Add deploy key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployKeysProject'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdDeployKeys
  /api/v4/projects/{id}/deploy_keys/{key_id}:
    get:
      tags:
        - deploy_keys
      summary: Get a single deploy key
      description: Get a single key.
      operationId: getApiV4ProjectsIdDeployKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the deploy key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single deploy key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployKeysProject'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - deploy_keys
      summary: Update deploy key
      description: Updates a deploy key for a project.
      operationId: putApiV4ProjectsIdDeployKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the deploy key
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdDeployKeysKeyId'
        required: true
      responses:
        "200":
          description: Update deploy key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployKey'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdDeployKeysKeyId
    delete:
      tags:
        - deploy_keys
      summary: Delete deploy key
      description: Removes a deploy key from the project. If the deploy key is used only for this project, it's deleted from the system.
      operationId: deleteApiV4ProjectsIdDeployKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the deploy key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete deploy key
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/deploy_keys/{key_id}/enable:
    post:
      tags:
        - deploy_keys
      summary: Enable a deploy key
      description: Enables a deploy key for a project so this can be used. Returns the enabled key, with a status code 201 when successful. This feature was added in GitLab 8.11.
      operationId: postApiV4ProjectsIdDeployKeysKeyIdEnable
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the deploy key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Enable a deploy key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployKey'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/deploy_tokens:
    get:
      tags:
        - deploy_tokens
      summary: List project deploy tokens
      description: Get a list of a project's deploy tokens. This feature was introduced in GitLab 12.9.
      operationId: getApiV4ProjectsIdDeployTokens
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: active
          in: query
          description: Limit by active status
          schema:
            type: boolean
      responses:
        "200":
          description: List project deploy tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_DeployToken'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - deploy_tokens
      summary: Create a project deploy token
      description: Creates a new deploy token for a project. This feature was introduced in GitLab 12.9.
      operationId: postApiV4ProjectsIdDeployTokens
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdDeployTokens'
        required: true
      responses:
        "201":
          description: Create a project deploy token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployTokenWithToken'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdDeployTokens
  /api/v4/projects/{id}/deploy_tokens/{token_id}:
    get:
      tags:
        - deploy_tokens
      summary: Get a project deploy token
      description: Get a single project's deploy token by ID. This feature was introduced in GitLab 14.9.
      operationId: getApiV4ProjectsIdDeployTokensTokenId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the deploy token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a project deploy token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployToken'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - deploy_tokens
      summary: Delete a project deploy token
      description: This feature was introduced in GitLab 12.9.
      operationId: deleteApiV4ProjectsIdDeployTokensTokenId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the deploy token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a project deploy token
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/deployments:
    get:
      tags:
        - deployments
      summary: List project deployments
      description: Get a list of deployments in a project. This feature was introduced in GitLab 8.11.
      operationId: getApiV4ProjectsIdDeployments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: order_by
          in: query
          description: Return deployments ordered by either one of `id`, `iid`, `created_at`, `updated_at` or `ref` fields. Default is `id`
          schema:
            type: string
            default: id
            enum:
              - id
              - iid
              - created_at
              - updated_at
              - finished_at
        - name: sort
          in: query
          description: Return deployments sorted in `asc` or `desc` order. Default is `asc`
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: updated_after
          in: query
          description: Return deployments updated after the specified date. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)
          schema:
            type: string
            format: date-time
        - name: updated_before
          in: query
          description: Return deployments updated before the specified date. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)
          schema:
            type: string
            format: date-time
        - name: finished_after
          in: query
          description: Return deployments finished after the specified date. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)
          schema:
            type: string
            format: date-time
        - name: finished_before
          in: query
          description: Return deployments finished before the specified date. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)
          schema:
            type: string
            format: date-time
        - name: environment
          in: query
          description: The name of the environment to filter deployments by
          schema:
            type: string
        - name: status
          in: query
          description: The status to filter deployments by. One of `created`, `running`, `success`, `failed`, `canceled`, or `blocked`
          schema:
            type: string
            enum:
              - created
              - running
              - success
              - failed
              - canceled
              - skipped
              - blocked
      responses:
        "200":
          description: List project deployments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Deployment'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - deployments
      summary: Create a deployment
      description: This feature was introduced in GitLab 12.4.
      operationId: postApiV4ProjectsIdDeployments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdDeployments'
        required: true
      responses:
        "201":
          description: Create a deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeploymentExtended'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdDeployments
  /api/v4/projects/{id}/deployments/{deployment_id}:
    get:
      tags:
        - deployments
      summary: Get a specific deployment
      description: This feature was introduced in GitLab 8.11.
      operationId: getApiV4ProjectsIdDeploymentsDeploymentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          description: The ID of the deployment
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeploymentExtended'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - deployments
      summary: Update a deployment
      description: This feature was introduced in GitLab 12.4.
      operationId: putApiV4ProjectsIdDeploymentsDeploymentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdDeploymentsDeploymentId'
        required: true
      responses:
        "200":
          description: Update a deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeploymentExtended'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdDeploymentsDeploymentId
    delete:
      tags:
        - deployments
      summary: Delete a specific deployment
      description: Delete a specific deployment that is not currently the last deployment for an environment or in a running state. This feature was introduced in GitLab 15.3.
      operationId: deleteApiV4ProjectsIdDeploymentsDeploymentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          description: The ID of the deployment
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Deployment destroyed
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: '"Cannot destroy running deployment" or "Deployment currently deployed to environment"'
          content: {}
  /api/v4/projects/{id}/deployments/{deployment_id}/merge_requests:
    get:
      tags:
        - deployments
      summary: List of merge requests associated with a deployment
      description: Retrieves the list of merge requests shipped with a given deployment. This feature was introduced in GitLab 12.7.
      operationId: getApiV4ProjectsIdDeploymentsDeploymentIdMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: deployment_id
          in: path
          description: The ID of the deployment
          required: true
          schema:
            type: integer
            format: int32
        - name: author_id
          in: query
          description: Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.
          schema:
            type: integer
            format: int32
        - name: author_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          schema:
            type: string
        - name: assignee_id
          in: query
          description: Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.
          schema:
            type: integer
            format: int32
        - name: assignee_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: reviewer_username
          in: query
          description: Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.
          schema:
            type: string
        - name: labels
          in: query
          description: Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: milestone
          in: query
          description: Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: Returns `all` merge requests or just those that are `opened`, `closed`, `locked`, or `merged`.
          schema:
            type: string
            default: all
            enum:
              - opened
              - closed
              - locked
              - merged
              - all
        - name: order_by
          in: query
          description: Returns merge requests ordered by `created_at`, `label_priority`, `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields. Introduced in GitLab 14.8.
          schema:
            type: string
            default: created_at
            enum:
              - created_at
              - label_priority
              - milestone_due
              - popularity
              - priority
              - title
              - updated_at
        - name: sort
          in: query
          description: Returns merge requests sorted in `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: with_labels_details
          in: query
          description: 'If `true`, response returns more details for each label in labels field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`'
          schema:
            type: boolean
            default: false
        - name: with_merge_status_recheck
          in: query
          description: If `true`, this projection requests (but does not guarantee) that the `merge_status` field be recalculated asynchronously. Introduced in GitLab 13.0.
          schema:
            type: boolean
            default: false
        - name: created_after
          in: query
          description: Returns merge requests created on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Returns merge requests created on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: Returns merge requests updated on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_before
          in: query
          description: Returns merge requests updated on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: view
          in: query
          description: If simple, returns the `iid`, URL, title, description, and basic state of merge request
          schema:
            type: string
            enum:
              - simple
        - name: scope
          in: query
          description: 'Returns merge requests for the given scope: `created_by_me`, `assigned_to_me` or `all`'
          schema:
            type: string
            enum:
              - created-by-me
              - assigned-to-me
              - created_by_me
              - assigned_to_me
              - all
        - name: source_branch
          in: query
          description: Returns merge requests with the given source branch
          schema:
            type: string
        - name: source_project_id
          in: query
          description: Returns merge requests with the given source project id
          schema:
            type: integer
            format: int32
        - name: target_branch
          in: query
          description: Returns merge requests with the given target branch
          schema:
            type: string
        - name: search
          in: query
          description: Search merge requests against their `title` and `description`.
          schema:
            type: string
        - name: in
          in: query
          description: Modify the scope of the search attribute. `title`, `description`, or a string joining them with comma.
          schema:
            type: string
        - name: wip
          in: query
          description: Filter merge requests against their `wip` status. `yes` to return only draft merge requests, `no` to return non-draft merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: not[author_id]
          in: query
          description: '`<Negated>` Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.'
          schema:
            type: integer
            format: int32
        - name: not[author_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          schema:
            type: string
        - name: not[assignee_id]
          in: query
          description: '`<Negated>` Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.'
          schema:
            type: integer
            format: int32
        - name: not[assignee_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[reviewer_username]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.'
          schema:
            type: string
        - name: not[labels]
          in: query
          description: '`<Negated>` Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[milestone]
          in: query
          description: '`<Negated>` Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.'
          schema:
            type: string
        - name: not[my_reaction_emoji]
          in: query
          description: '`<Negated>` Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.'
          schema:
            type: string
        - name: not[reviewer_id]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.'
          schema:
            type: integer
            format: int32
        - name: deployed_before
          in: query
          description: Returns merge requests deployed before the given date/time. Expected in ISO 8601 format.
          schema:
            type: string
        - name: deployed_after
          in: query
          description: Returns merge requests deployed after the given date/time. Expected in ISO 8601 format
          schema:
            type: string
        - name: environment
          in: query
          description: Returns merge requests deployed to the given environment
          schema:
            type: string
        - name: approved
          in: query
          description: Filters merge requests by their `approved` status. `yes` returns only approved merge requests. `no` returns only non-approved merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: merge_user_id
          in: query
          description: Returns merge requests which have been merged by the user with the given user `id`. Mutually exclusive with `merge_user_username`.
          schema:
            type: integer
            format: int32
        - name: merge_user_username
          in: query
          description: Returns merge requests which have been merged by the user with the given `username`. Mutually exclusive with `merge_user_id`.
          schema:
            type: string
      responses:
        "200":
          description: List of merge requests associated with a deployment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_MergeRequestBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/deployments/{deployment_id}/approval:
    post:
      tags:
        - deployments
      summary: Approve or reject a blocked deployment
      description: This feature was introduced in GitLab 14.8.
      operationId: postApiV4ProjectsIdDeploymentsDeploymentIdApproval
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          description: The ID of the deployment
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdDeploymentsDeploymentIdApproval'
        required: true
      responses:
        "201":
          description: Approve or reject a blocked deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Deployments_Approval'
      x-codegen-request-body-name: postApiV4ProjectsIdDeploymentsDeploymentIdApproval
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes:
    get:
      tags:
        - projects
      description: Get a list of merge request draft notes
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes
      parameters:
        - name: id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of merge request draft notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_DraftNote'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - projects
      description: Create a new draft note
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes
      parameters:
        - name: id
          in: path
          description: The ID of a project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes'
        required: true
      responses:
        "201":
          description: Create a new draft note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DraftNote'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}:
    get:
      tags:
        - projects
      description: Get a single draft note
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId
      parameters:
        - name: id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request
          required: true
          schema:
            type: integer
            format: int32
        - name: draft_note_id
          in: path
          description: The ID of a draft note
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single draft note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DraftNote'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - projects
      description: Modify an existing draft note
      operationId: putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId
      parameters:
        - name: id
          in: path
          description: The ID of a project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request.
          required: true
          schema:
            type: integer
            format: int32
        - name: draft_note_id
          in: path
          description: The ID of a draft note
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId'
        required: true
      responses:
        "200":
          description: Modify an existing draft note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DraftNote'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId
    delete:
      tags:
        - projects
      description: Delete a draft note
      operationId: deleteApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId
      parameters:
        - name: id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request
          required: true
          schema:
            type: integer
            format: int32
        - name: draft_note_id
          in: path
          description: The ID of a draft note
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "401":
          description: Unauthorized
          content: {}
        "204":
          description: Delete a draft note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DraftNote'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}/publish:
    put:
      tags:
        - projects
      description: Publish a pending draft note
      operationId: putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteIdPublish
      parameters:
        - name: id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request
          required: true
          schema:
            type: integer
            format: int32
        - name: draft_note_id
          in: path
          description: The ID of a draft note
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Publish a pending draft note
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/bulk_publish:
    post:
      tags:
        - projects
      description: Bulk publish all pending draft notes
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesBulkPublish
      parameters:
        - name: id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Bulk publish all pending draft notes
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/environments:
    get:
      tags:
        - environments
      summary: List environments
      description: Get all environments for a given project. This feature was introduced in GitLab 8.11.
      operationId: getApiV4ProjectsIdEnvironments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: name
          in: query
          description: Return the environment with this name. Mutually exclusive with search
          schema:
            type: string
        - name: search
          in: query
          description: Return list of environments matching the search criteria. Mutually exclusive with name. Must be at least 3 characters.
          schema:
            type: string
        - name: states
          in: query
          description: 'List all environments that match a specific state. Accepted values: `available`, `stopping`, or `stopped`. If no state value given, returns all environments'
          schema:
            type: string
            enum:
              - stopped
              - available
              - stopping
      responses:
        "200":
          description: List environments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Environment'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - environments
      summary: Create a new environment
      description: Creates a new environment with the given name and `external_url`. It returns `201` if the environment was successfully created, `400` for wrong parameters. This feature was introduced in GitLab 8.11.
      operationId: postApiV4ProjectsIdEnvironments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdEnvironments'
        required: true
      responses:
        "201":
          description: Create a new environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Environment'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdEnvironments
  /api/v4/projects/{id}/environments/{environment_id}:
    get:
      tags:
        - environments
      description: Get a specific environment
      operationId: getApiV4ProjectsIdEnvironmentsEnvironmentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Environment'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - environments
      summary: Update an existing environment
      description: Updates an existing environment name and/or `external_url`. It returns `200` if the environment was successfully updated. In case of an error, a status code `400` is returned. This feature was introduced in GitLab 8.11.
      operationId: putApiV4ProjectsIdEnvironmentsEnvironmentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdEnvironmentsEnvironmentId'
        required: true
      responses:
        "200":
          description: Update an existing environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Environment'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdEnvironmentsEnvironmentId
    delete:
      tags:
        - environments
      summary: Delete an environment
      description: It returns 204 if the environment was successfully deleted, and 404 if the environment does not exist. This feature was introduced in GitLab 8.11.
      operationId: deleteApiV4ProjectsIdEnvironmentsEnvironmentId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "401":
          description: Unauthorized
          content: {}
        "204":
          description: Delete an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Environment'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/environments/review_apps:
    delete:
      tags:
        - environments
      summary: Delete multiple stopped review apps
      description: It schedules for deletion multiple environments that have already been stopped and are in the review app folder. The actual deletion is performed after 1 week from the time of execution. By default, it only deletes environments 30 days or older. You can change this default using the `before` parameter.
      operationId: deleteApiV4ProjectsIdEnvironmentsReviewApps
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: before
          in: query
          description: The date before which environments can be deleted. Defaults to 30 days ago. Expected in ISO 8601 format (`YYYY-MM-DDTHH:MM:SSZ`)
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Maximum number of environments to delete. Defaults to 100
          schema:
            maximum: 1000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: dry_run
          in: query
          description: Defaults to true for safety reasons. It performs a dry run where no actual deletion will be performed. Set to false to actually delete the environment
          schema:
            type: boolean
            default: true
      responses:
        "400":
          description: Bad request
          content: {}
        "204":
          description: Delete multiple stopped review apps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_EnvironmentBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
  /api/v4/projects/{id}/environments/{environment_id}/stop:
    post:
      tags:
        - environments
      summary: Stop an environment
      description: It returns 200 if the environment was successfully stopped, and 404 if the environment does not exist.
      operationId: postApiV4ProjectsIdEnvironmentsEnvironmentIdStop
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdEnvironmentsEnvironmentIdStop'
        required: true
      responses:
        "201":
          description: Stop an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Environment'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdEnvironmentsEnvironmentIdStop
  /api/v4/projects/{id}/environments/stop_stale:
    post:
      tags:
        - environments
      summary: Stop stale environments
      description: It returns `200` if stale environment check was scheduled successfully
      operationId: postApiV4ProjectsIdEnvironmentsStopStale
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdEnvironmentsStopStale'
        required: true
      responses:
        "201":
          description: Stop stale environments
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdEnvironmentsStopStale
  /api/v4/projects/{id}/error_tracking/settings:
    get:
      tags:
        - error_tracking_project_settings
      summary: Get Error Tracking settings
      description: Get error tracking settings for the project. This feature was introduced in GitLab 12.7.
      operationId: getApiV4ProjectsIdErrorTrackingSettings
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get Error Tracking settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ErrorTracking_ProjectSetting'
    put:
      tags:
        - error_tracking_project_settings
      summary: Update Error Tracking project settings. Available in GitLab 15.10 and later.
      description: Update Error Tracking settings for a project. Only for users with Maintainer role for the project.
      operationId: putApiV4ProjectsIdErrorTrackingSettings
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdErrorTrackingSettings'
        required: true
      responses:
        "200":
          description: Update Error Tracking project settings. Available in GitLab 15.10 and later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ErrorTracking_ProjectSetting'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdErrorTrackingSettings
    patch:
      tags:
        - error_tracking_project_settings
      summary: Enable or disable the Error Tracking project settings
      description: The API allows you to enable or disable the Error Tracking settings for a project.Only for users with the Maintainer role for the project.
      operationId: patchApiV4ProjectsIdErrorTrackingSettings
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiV4ProjectsIdErrorTrackingSettings'
        required: true
      responses:
        "200":
          description: Enable or disable the Error Tracking project settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ErrorTracking_ProjectSetting'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: patchApiV4ProjectsIdErrorTrackingSettings
  /api/v4/projects/{id}/repository/files/{file_path}/blame:
    get:
      tags:
        - projects
      description: Get blame file from the repository
      operationId: getApiV4ProjectsIdRepositoryFilesFilePathBlame
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The name of branch, tag or commit
          required: true
          schema:
            type: string
        - name: range[start]
          in: query
          description: The first line of the range to blame
          required: true
          schema:
            type: integer
            format: int32
        - name: range[end]
          in: query
          description: The last line of the range to blame
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get blame file from the repository
          content: {}
    head:
      tags:
        - projects
      description: Get blame file metadata from repository
      operationId: headApiV4ProjectsIdRepositoryFilesFilePathBlame
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The name of branch, tag or commit
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get blame file metadata from repository
          content: {}
  /api/v4/projects/{id}/repository/files/{file_path}/raw:
    get:
      tags:
        - projects
      description: Get raw file contents from the repository
      operationId: getApiV4ProjectsIdRepositoryFilesFilePathRaw
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The name of branch, tag or commit
          schema:
            type: string
        - name: lfs
          in: query
          description: Retrieve binary data for a file that is an lfs pointer
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get raw file contents from the repository
          content:
            application/json:
              schema:
                type: string
                format: binary
  /api/v4/projects/{id}/repository/files/{file_path}:
    get:
      tags:
        - projects
      description: Get a file from the repository
      operationId: getApiV4ProjectsIdRepositoryFilesFilePath
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The name of branch, tag or commit
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a file from the repository
          content: {}
    put:
      tags:
        - projects
      description: Update existing file in repository
      operationId: putApiV4ProjectsIdRepositoryFilesFilePath
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdRepositoryFilesFilePath'
        required: true
      responses:
        "200":
          description: Update existing file in repository
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdRepositoryFilesFilePath
    post:
      tags:
        - projects
      description: Create new file in repository
      operationId: postApiV4ProjectsIdRepositoryFilesFilePath
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryFilesFilePath'
        required: true
      responses:
        "201":
          description: Create new file in repository
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryFilesFilePath
    delete:
      tags:
        - projects
      description: Delete an existing file in repository
      operationId: deleteApiV4ProjectsIdRepositoryFilesFilePath
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
        - name: branch
          in: query
          description: Name of the branch to commit into. To create a new branch, also provide `start_branch`.
          required: true
          schema:
            type: string
        - name: commit_message
          in: query
          description: Commit message
          required: true
          schema:
            type: string
        - name: start_branch
          in: query
          description: Name of the branch to start the new commit from
          schema:
            type: string
        - name: author_email
          in: query
          description: The email of the author
          schema:
            type: string
        - name: author_name
          in: query
          description: The name of the author
          schema:
            type: string
      responses:
        "204":
          description: Delete an existing file in repository
          content: {}
    head:
      tags:
        - projects
      description: Get file metadata from repository
      operationId: headApiV4ProjectsIdRepositoryFilesFilePath
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The name of branch, tag or commit
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get file metadata from repository
          content: {}
  /api/v4/projects/{id}/freeze_periods:
    get:
      tags:
        - freeze_periods
      summary: List freeze periods
      description: Paginated list of Freeze Periods, sorted by created_at in ascending order. This feature was introduced in GitLab 13.0.
      operationId: getApiV4ProjectsIdFreezePeriods
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List freeze periods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_FreezePeriod'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - freeze_periods
      summary: Create a freeze period
      description: Creates a freeze period. This feature was introduced in GitLab 13.0.
      operationId: postApiV4ProjectsIdFreezePeriods
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdFreezePeriods'
        required: true
      responses:
        "201":
          description: Create a freeze period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FreezePeriod'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdFreezePeriods
  /api/v4/projects/{id}/freeze_periods/{freeze_period_id}:
    get:
      tags:
        - freeze_periods
      summary: Get a freeze period
      description: Get a freeze period for the given `freeze_period_id`. This feature was introduced in GitLab 13.0.
      operationId: getApiV4ProjectsIdFreezePeriodsFreezePeriodId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: freeze_period_id
          in: path
          description: The ID of the freeze period
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a freeze period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FreezePeriod'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - freeze_periods
      summary: Update a freeze period
      description: Updates a freeze period for the given `freeze_period_id`. This feature was introduced in GitLab 13.0.
      operationId: putApiV4ProjectsIdFreezePeriodsFreezePeriodId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: freeze_period_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdFreezePeriodsFreezePeriodId'
        required: true
      responses:
        "200":
          description: Update a freeze period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FreezePeriod'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdFreezePeriodsFreezePeriodId
    delete:
      tags:
        - freeze_periods
      summary: Delete a freeze period
      description: Deletes a freeze period for the given `freeze_period_id`. This feature was introduced in GitLab 13.0.
      operationId: deleteApiV4ProjectsIdFreezePeriodsFreezePeriodId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: freeze_period_id
          in: path
          description: The ID of the freeze period
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "401":
          description: Unauthorized
          content: {}
        "204":
          description: Delete a freeze period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FreezePeriod'
  /api/v4/projects/{id}/services:
    get:
      tags:
        - integrations
      summary: List all active integrations
      description: Get a list of all active project integrations.
      operationId: getApiV4ProjectsIdServices
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List all active integrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/services/apple-app-store:
    put:
      tags:
        - integrations
      summary: Create/Edit Apple App Store integration
      description: Set Apple App Store integration for a project.
      operationId: putApiV4ProjectsIdServicesAppleAppStore
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesAppleAppStore'
        required: true
      responses:
        "200":
          description: Create/Edit Apple App Store integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesAppleAppStore
  /api/v4/projects/{id}/services/asana:
    put:
      tags:
        - integrations
      summary: Create/Edit Asana integration
      description: Set Asana integration for a project.
      operationId: putApiV4ProjectsIdServicesAsana
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesAsana'
        required: true
      responses:
        "200":
          description: Create/Edit Asana integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesAsana
  /api/v4/projects/{id}/services/assembla:
    put:
      tags:
        - integrations
      summary: Create/Edit Assembla integration
      description: Set Assembla integration for a project.
      operationId: putApiV4ProjectsIdServicesAssembla
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesAssembla'
        required: true
      responses:
        "200":
          description: Create/Edit Assembla integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesAssembla
  /api/v4/projects/{id}/services/bamboo:
    put:
      tags:
        - integrations
      summary: Create/Edit Bamboo integration
      description: Set Bamboo integration for a project.
      operationId: putApiV4ProjectsIdServicesBamboo
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesBamboo'
        required: true
      responses:
        "200":
          description: Create/Edit Bamboo integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesBamboo
  /api/v4/projects/{id}/services/bugzilla:
    put:
      tags:
        - integrations
      summary: Create/Edit Bugzilla integration
      description: Set Bugzilla integration for a project.
      operationId: putApiV4ProjectsIdServicesBugzilla
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesBugzilla'
        required: true
      responses:
        "200":
          description: Create/Edit Bugzilla integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesBugzilla
  /api/v4/projects/{id}/services/buildkite:
    put:
      tags:
        - integrations
      summary: Create/Edit Buildkite integration
      description: Set Buildkite integration for a project.
      operationId: putApiV4ProjectsIdServicesBuildkite
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesBuildkite'
        required: true
      responses:
        "200":
          description: Create/Edit Buildkite integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesBuildkite
  /api/v4/projects/{id}/services/campfire:
    put:
      tags:
        - integrations
      summary: Create/Edit Campfire integration
      description: Set Campfire integration for a project.
      operationId: putApiV4ProjectsIdServicesCampfire
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesCampfire'
        required: true
      responses:
        "200":
          description: Create/Edit Campfire integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesCampfire
  /api/v4/projects/{id}/services/confluence:
    put:
      tags:
        - integrations
      summary: Create/Edit Confluence integration
      description: Set Confluence integration for a project.
      operationId: putApiV4ProjectsIdServicesConfluence
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesConfluence'
        required: true
      responses:
        "200":
          description: Create/Edit Confluence integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesConfluence
  /api/v4/projects/{id}/services/custom-issue-tracker:
    put:
      tags:
        - integrations
      summary: Create/Edit Custom Issue Tracker integration
      description: Set Custom Issue Tracker integration for a project.
      operationId: putApiV4ProjectsIdServicesCustomIssueTracker
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesCustomIssueTracker'
        required: true
      responses:
        "200":
          description: Create/Edit Custom Issue Tracker integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesCustomIssueTracker
  /api/v4/projects/{id}/services/datadog:
    put:
      tags:
        - integrations
      summary: Create/Edit Datadog integration
      description: Set Datadog integration for a project.
      operationId: putApiV4ProjectsIdServicesDatadog
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesDatadog'
        required: true
      responses:
        "200":
          description: Create/Edit Datadog integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesDatadog
  /api/v4/projects/{id}/services/diffblue-cover:
    put:
      tags:
        - integrations
      summary: Create/Edit Diffblue Cover integration
      description: Set Diffblue Cover integration for a project.
      operationId: putApiV4ProjectsIdServicesDiffblueCover
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesDiffblueCover'
        required: true
      responses:
        "200":
          description: Create/Edit Diffblue Cover integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesDiffblueCover
  /api/v4/projects/{id}/services/discord:
    put:
      tags:
        - integrations
      summary: Create/Edit Discord integration
      description: Set Discord integration for a project.
      operationId: putApiV4ProjectsIdServicesDiscord
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesDiscord'
        required: true
      responses:
        "200":
          description: Create/Edit Discord integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesDiscord
  /api/v4/projects/{id}/services/drone-ci:
    put:
      tags:
        - integrations
      summary: Create/Edit Drone Ci integration
      description: Set Drone Ci integration for a project.
      operationId: putApiV4ProjectsIdServicesDroneCi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesDroneCi'
        required: true
      responses:
        "200":
          description: Create/Edit Drone Ci integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesDroneCi
  /api/v4/projects/{id}/services/emails-on-push:
    put:
      tags:
        - integrations
      summary: Create/Edit Emails On Push integration
      description: Set Emails On Push integration for a project.
      operationId: putApiV4ProjectsIdServicesEmailsOnPush
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesEmailsOnPush'
        required: true
      responses:
        "200":
          description: Create/Edit Emails On Push integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesEmailsOnPush
  /api/v4/projects/{id}/services/external-wiki:
    put:
      tags:
        - integrations
      summary: Create/Edit External Wiki integration
      description: Set External Wiki integration for a project.
      operationId: putApiV4ProjectsIdServicesExternalWiki
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesExternalWiki'
        required: true
      responses:
        "200":
          description: Create/Edit External Wiki integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesExternalWiki
  /api/v4/projects/{id}/services/gitlab-slack-application:
    put:
      tags:
        - integrations
      summary: Create/Edit Gitlab Slack Application integration
      description: Set Gitlab Slack Application integration for a project.
      operationId: putApiV4ProjectsIdServicesGitlabSlackApplication
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesGitlabSlackApplication'
        required: true
      responses:
        "200":
          description: Create/Edit Gitlab Slack Application integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesGitlabSlackApplication
  /api/v4/projects/{id}/services/google-play:
    put:
      tags:
        - integrations
      summary: Create/Edit Google Play integration
      description: Set Google Play integration for a project.
      operationId: putApiV4ProjectsIdServicesGooglePlay
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesGooglePlay'
        required: true
      responses:
        "200":
          description: Create/Edit Google Play integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesGooglePlay
  /api/v4/projects/{id}/services/hangouts-chat:
    put:
      tags:
        - integrations
      summary: Create/Edit Hangouts Chat integration
      description: Set Hangouts Chat integration for a project.
      operationId: putApiV4ProjectsIdServicesHangoutsChat
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesHangoutsChat'
        required: true
      responses:
        "200":
          description: Create/Edit Hangouts Chat integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesHangoutsChat
  /api/v4/projects/{id}/services/harbor:
    put:
      tags:
        - integrations
      summary: Create/Edit Harbor integration
      description: Set Harbor integration for a project.
      operationId: putApiV4ProjectsIdServicesHarbor
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesHarbor'
        required: true
      responses:
        "200":
          description: Create/Edit Harbor integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesHarbor
  /api/v4/projects/{id}/services/irker:
    put:
      tags:
        - integrations
      summary: Create/Edit Irker integration
      description: Set Irker integration for a project.
      operationId: putApiV4ProjectsIdServicesIrker
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesIrker'
        required: true
      responses:
        "200":
          description: Create/Edit Irker integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesIrker
  /api/v4/projects/{id}/services/jenkins:
    put:
      tags:
        - integrations
      summary: Create/Edit Jenkins integration
      description: Set Jenkins integration for a project.
      operationId: putApiV4ProjectsIdServicesJenkins
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesJenkins'
        required: true
      responses:
        "200":
          description: Create/Edit Jenkins integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesJenkins
  /api/v4/projects/{id}/services/jira:
    put:
      tags:
        - integrations
      summary: Create/Edit Jira integration
      description: Set Jira integration for a project.
      operationId: putApiV4ProjectsIdServicesJira
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesJira'
        required: true
      responses:
        "200":
          description: Create/Edit Jira integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesJira
  /api/v4/projects/{id}/services/mattermost-slash-commands:
    put:
      tags:
        - integrations
      summary: Create/Edit Mattermost Slash Commands integration
      description: Set Mattermost Slash Commands integration for a project.
      operationId: putApiV4ProjectsIdServicesMattermostSlashCommands
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesMattermostSlashCommands'
        required: true
      responses:
        "200":
          description: Create/Edit Mattermost Slash Commands integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesMattermostSlashCommands
  /api/v4/projects/{id}/services/slack-slash-commands:
    put:
      tags:
        - integrations
      summary: Create/Edit Slack Slash Commands integration
      description: Set Slack Slash Commands integration for a project.
      operationId: putApiV4ProjectsIdServicesSlackSlashCommands
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesSlackSlashCommands'
        required: true
      responses:
        "200":
          description: Create/Edit Slack Slash Commands integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesSlackSlashCommands
  /api/v4/projects/{id}/services/packagist:
    put:
      tags:
        - integrations
      summary: Create/Edit Packagist integration
      description: Set Packagist integration for a project.
      operationId: putApiV4ProjectsIdServicesPackagist
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPackagist'
        required: true
      responses:
        "200":
          description: Create/Edit Packagist integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPackagist
  /api/v4/projects/{id}/services/phorge:
    put:
      tags:
        - integrations
      summary: Create/Edit Phorge integration
      description: Set Phorge integration for a project.
      operationId: putApiV4ProjectsIdServicesPhorge
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPhorge'
        required: true
      responses:
        "200":
          description: Create/Edit Phorge integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPhorge
  /api/v4/projects/{id}/services/pipelines-email:
    put:
      tags:
        - integrations
      summary: Create/Edit Pipelines Email integration
      description: Set Pipelines Email integration for a project.
      operationId: putApiV4ProjectsIdServicesPipelinesEmail
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPipelinesEmail'
        required: true
      responses:
        "200":
          description: Create/Edit Pipelines Email integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPipelinesEmail
  /api/v4/projects/{id}/services/pivotaltracker:
    put:
      tags:
        - integrations
      summary: Create/Edit Pivotaltracker integration
      description: Set Pivotaltracker integration for a project.
      operationId: putApiV4ProjectsIdServicesPivotaltracker
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPivotaltracker'
        required: true
      responses:
        "200":
          description: Create/Edit Pivotaltracker integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPivotaltracker
  /api/v4/projects/{id}/services/prometheus:
    put:
      tags:
        - integrations
      summary: Create/Edit Prometheus integration
      description: Set Prometheus integration for a project.
      operationId: putApiV4ProjectsIdServicesPrometheus
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPrometheus'
        required: true
      responses:
        "200":
          description: Create/Edit Prometheus integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPrometheus
  /api/v4/projects/{id}/services/pumble:
    put:
      tags:
        - integrations
      summary: Create/Edit Pumble integration
      description: Set Pumble integration for a project.
      operationId: putApiV4ProjectsIdServicesPumble
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPumble'
        required: true
      responses:
        "200":
          description: Create/Edit Pumble integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPumble
  /api/v4/projects/{id}/services/pushover:
    put:
      tags:
        - integrations
      summary: Create/Edit Pushover integration
      description: Set Pushover integration for a project.
      operationId: putApiV4ProjectsIdServicesPushover
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesPushover'
        required: true
      responses:
        "200":
          description: Create/Edit Pushover integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesPushover
  /api/v4/projects/{id}/services/redmine:
    put:
      tags:
        - integrations
      summary: Create/Edit Redmine integration
      description: Set Redmine integration for a project.
      operationId: putApiV4ProjectsIdServicesRedmine
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesRedmine'
        required: true
      responses:
        "200":
          description: Create/Edit Redmine integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesRedmine
  /api/v4/projects/{id}/services/ewm:
    put:
      tags:
        - integrations
      summary: Create/Edit Ewm integration
      description: Set Ewm integration for a project.
      operationId: putApiV4ProjectsIdServicesEwm
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesEwm'
        required: true
      responses:
        "200":
          description: Create/Edit Ewm integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesEwm
  /api/v4/projects/{id}/services/youtrack:
    put:
      tags:
        - integrations
      summary: Create/Edit Youtrack integration
      description: Set Youtrack integration for a project.
      operationId: putApiV4ProjectsIdServicesYoutrack
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesYoutrack'
        required: true
      responses:
        "200":
          description: Create/Edit Youtrack integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesYoutrack
  /api/v4/projects/{id}/services/clickup:
    put:
      tags:
        - integrations
      summary: Create/Edit Clickup integration
      description: Set Clickup integration for a project.
      operationId: putApiV4ProjectsIdServicesClickup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesClickup'
        required: true
      responses:
        "200":
          description: Create/Edit Clickup integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesClickup
  /api/v4/projects/{id}/services/slack:
    put:
      tags:
        - integrations
      summary: Create/Edit Slack integration
      description: Set Slack integration for a project.
      operationId: putApiV4ProjectsIdServicesSlack
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesSlack'
        required: true
      responses:
        "200":
          description: Create/Edit Slack integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesSlack
  /api/v4/projects/{id}/services/microsoft-teams:
    put:
      tags:
        - integrations
      summary: Create/Edit Microsoft Teams integration
      description: Set Microsoft Teams integration for a project.
      operationId: putApiV4ProjectsIdServicesMicrosoftTeams
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesMicrosoftTeams'
        required: true
      responses:
        "200":
          description: Create/Edit Microsoft Teams integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesMicrosoftTeams
  /api/v4/projects/{id}/services/mattermost:
    put:
      tags:
        - integrations
      summary: Create/Edit Mattermost integration
      description: Set Mattermost integration for a project.
      operationId: putApiV4ProjectsIdServicesMattermost
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesMattermost'
        required: true
      responses:
        "200":
          description: Create/Edit Mattermost integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesMattermost
  /api/v4/projects/{id}/services/teamcity:
    put:
      tags:
        - integrations
      summary: Create/Edit Teamcity integration
      description: Set Teamcity integration for a project.
      operationId: putApiV4ProjectsIdServicesTeamcity
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesTeamcity'
        required: true
      responses:
        "200":
          description: Create/Edit Teamcity integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesTeamcity
  /api/v4/projects/{id}/services/telegram:
    put:
      tags:
        - integrations
      summary: Create/Edit Telegram integration
      description: Set Telegram integration for a project.
      operationId: putApiV4ProjectsIdServicesTelegram
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesTelegram'
        required: true
      responses:
        "200":
          description: Create/Edit Telegram integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesTelegram
  /api/v4/projects/{id}/services/unify-circuit:
    put:
      tags:
        - integrations
      summary: Create/Edit Unify Circuit integration
      description: Set Unify Circuit integration for a project.
      operationId: putApiV4ProjectsIdServicesUnifyCircuit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesUnifyCircuit'
        required: true
      responses:
        "200":
          description: Create/Edit Unify Circuit integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesUnifyCircuit
  /api/v4/projects/{id}/services/webex-teams:
    put:
      tags:
        - integrations
      summary: Create/Edit Webex Teams integration
      description: Set Webex Teams integration for a project.
      operationId: putApiV4ProjectsIdServicesWebexTeams
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesWebexTeams'
        required: true
      responses:
        "200":
          description: Create/Edit Webex Teams integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesWebexTeams
  /api/v4/projects/{id}/services/zentao:
    put:
      tags:
        - integrations
      summary: Create/Edit Zentao integration
      description: Set Zentao integration for a project.
      operationId: putApiV4ProjectsIdServicesZentao
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesZentao'
        required: true
      responses:
        "200":
          description: Create/Edit Zentao integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesZentao
  /api/v4/projects/{id}/services/squash-tm:
    put:
      tags:
        - integrations
      summary: Create/Edit Squash Tm integration
      description: Set Squash Tm integration for a project.
      operationId: putApiV4ProjectsIdServicesSquashTm
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesSquashTm'
        required: true
      responses:
        "200":
          description: Create/Edit Squash Tm integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesSquashTm
  /api/v4/projects/{id}/services/github:
    put:
      tags:
        - integrations
      summary: Create/Edit Github integration
      description: Set Github integration for a project.
      operationId: putApiV4ProjectsIdServicesGithub
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesGithub'
        required: true
      responses:
        "200":
          description: Create/Edit Github integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesGithub
  /api/v4/projects/{id}/services/git-guardian:
    put:
      tags:
        - integrations
      summary: Create/Edit Git Guardian integration
      description: Set Git Guardian integration for a project.
      operationId: putApiV4ProjectsIdServicesGitGuardian
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesGitGuardian'
        required: true
      responses:
        "200":
          description: Create/Edit Git Guardian integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesGitGuardian
  /api/v4/projects/{id}/services/google-cloud-platform-artifact-registry:
    put:
      tags:
        - integrations
      summary: Create/Edit Google Cloud Platform Artifact Registry integration
      description: Set Google Cloud Platform Artifact Registry integration for a project.
      operationId: putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry'
        required: true
      responses:
        "200":
          description: Create/Edit Google Cloud Platform Artifact Registry integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry
  /api/v4/projects/{id}/services/google-cloud-platform-workload-identity-federation:
    put:
      tags:
        - integrations
      summary: Create/Edit Google Cloud Platform Workload Identity Federation integration
      description: Set Google Cloud Platform Workload Identity Federation integration for a project.
      operationId: putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation'
        required: true
      responses:
        "200":
          description: Create/Edit Google Cloud Platform Workload Identity Federation integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation
  /api/v4/projects/{id}/services/mock-ci:
    put:
      tags:
        - integrations
      summary: Create/Edit Mock Ci integration
      description: Set Mock Ci integration for a project.
      operationId: putApiV4ProjectsIdServicesMockCi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdServicesMockCi'
        required: true
      responses:
        "200":
          description: Create/Edit Mock Ci integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdServicesMockCi
  /api/v4/projects/{id}/services/mock-monitoring:
    put:
      tags:
        - integrations
      summary: Create/Edit Mock Monitoring integration
      description: Set Mock Monitoring integration for a project.
      operationId: putApiV4ProjectsIdServicesMockMonitoring
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Create/Edit Mock Monitoring integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/services/{slug}:
    get:
      tags:
        - integrations
      summary: Get an integration settings
      description: Get the integration settings for a project.
      operationId: getApiV4ProjectsIdServicesSlug
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: The name of the integration
          required: true
          schema:
            type: string
            enum:
              - apple-app-store
              - asana
              - assembla
              - bamboo
              - bugzilla
              - buildkite
              - campfire
              - confluence
              - custom-issue-tracker
              - datadog
              - diffblue-cover
              - discord
              - drone-ci
              - emails-on-push
              - external-wiki
              - gitlab-slack-application
              - google-play
              - hangouts-chat
              - harbor
              - irker
              - jenkins
              - jira
              - jira-cloud-app
              - mattermost-slash-commands
              - slack-slash-commands
              - packagist
              - phorge
              - pipelines-email
              - pivotaltracker
              - prometheus
              - pumble
              - pushover
              - redmine
              - ewm
              - youtrack
              - clickup
              - slack
              - microsoft-teams
              - mattermost
              - teamcity
              - telegram
              - unify-circuit
              - webex-teams
              - zentao
              - squash-tm
              - github
              - git-guardian
              - google-cloud-platform-artifact-registry
              - google-cloud-platform-workload-identity-federation
              - mock-ci
              - mock-monitoring
      responses:
        "200":
          description: Get an integration settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegration'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - integrations
      summary: Disable an integration
      description: Disable the integration for a project. Integration settings are preserved.
      operationId: deleteApiV4ProjectsIdServicesSlug
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: The name of the integration
          required: true
          schema:
            type: string
            enum:
              - apple-app-store
              - asana
              - assembla
              - bamboo
              - bugzilla
              - buildkite
              - campfire
              - confluence
              - custom-issue-tracker
              - datadog
              - diffblue-cover
              - discord
              - drone-ci
              - emails-on-push
              - external-wiki
              - gitlab-slack-application
              - google-play
              - hangouts-chat
              - harbor
              - irker
              - jenkins
              - jira
              - jira-cloud-app
              - mattermost-slash-commands
              - slack-slash-commands
              - packagist
              - phorge
              - pipelines-email
              - pivotaltracker
              - prometheus
              - pumble
              - pushover
              - redmine
              - ewm
              - youtrack
              - clickup
              - slack
              - microsoft-teams
              - mattermost
              - teamcity
              - telegram
              - unify-circuit
              - webex-teams
              - zentao
              - squash-tm
              - github
              - git-guardian
              - google-cloud-platform-artifact-registry
              - google-cloud-platform-workload-identity-federation
              - mock-ci
              - mock-monitoring
      responses:
        "204":
          description: Disable an integration
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/services/mattermost_slash_commands/trigger:
    post:
      tags:
        - integrations
      summary: Trigger a slash command for mattermost-slash-commands
      description: Added in GitLab 8.13
      operationId: postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger'
        required: true
      responses:
        "201":
          description: Trigger a slash command for mattermost-slash-commands
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger
  /api/v4/projects/{id}/services/slack_slash_commands/trigger:
    post:
      tags:
        - integrations
      summary: Trigger a slash command for slack-slash-commands
      description: Added in GitLab 8.13
      operationId: postApiV4ProjectsIdServicesSlackSlashCommandsTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdServicesSlackSlashCommandsTrigger'
        required: true
      responses:
        "201":
          description: Trigger a slash command for slack-slash-commands
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdServicesSlackSlashCommandsTrigger
  /api/v4/projects/{id}/integrations:
    get:
      tags:
        - integrations
      summary: List all active integrations
      description: Get a list of all active project integrations.
      operationId: getApiV4ProjectsIdIntegrations
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List all active integrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/integrations/apple-app-store:
    put:
      tags:
        - integrations
      summary: Create/Edit Apple App Store integration
      description: Set Apple App Store integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsAppleAppStore
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsAppleAppStore'
        required: true
      responses:
        "200":
          description: Create/Edit Apple App Store integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsAppleAppStore
  /api/v4/projects/{id}/integrations/asana:
    put:
      tags:
        - integrations
      summary: Create/Edit Asana integration
      description: Set Asana integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsAsana
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsAsana'
        required: true
      responses:
        "200":
          description: Create/Edit Asana integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsAsana
  /api/v4/projects/{id}/integrations/assembla:
    put:
      tags:
        - integrations
      summary: Create/Edit Assembla integration
      description: Set Assembla integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsAssembla
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsAssembla'
        required: true
      responses:
        "200":
          description: Create/Edit Assembla integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsAssembla
  /api/v4/projects/{id}/integrations/bamboo:
    put:
      tags:
        - integrations
      summary: Create/Edit Bamboo integration
      description: Set Bamboo integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsBamboo
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsBamboo'
        required: true
      responses:
        "200":
          description: Create/Edit Bamboo integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsBamboo
  /api/v4/projects/{id}/integrations/bugzilla:
    put:
      tags:
        - integrations
      summary: Create/Edit Bugzilla integration
      description: Set Bugzilla integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsBugzilla
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsBugzilla'
        required: true
      responses:
        "200":
          description: Create/Edit Bugzilla integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsBugzilla
  /api/v4/projects/{id}/integrations/buildkite:
    put:
      tags:
        - integrations
      summary: Create/Edit Buildkite integration
      description: Set Buildkite integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsBuildkite
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsBuildkite'
        required: true
      responses:
        "200":
          description: Create/Edit Buildkite integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsBuildkite
  /api/v4/projects/{id}/integrations/campfire:
    put:
      tags:
        - integrations
      summary: Create/Edit Campfire integration
      description: Set Campfire integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsCampfire
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsCampfire'
        required: true
      responses:
        "200":
          description: Create/Edit Campfire integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsCampfire
  /api/v4/projects/{id}/integrations/confluence:
    put:
      tags:
        - integrations
      summary: Create/Edit Confluence integration
      description: Set Confluence integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsConfluence
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsConfluence'
        required: true
      responses:
        "200":
          description: Create/Edit Confluence integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsConfluence
  /api/v4/projects/{id}/integrations/custom-issue-tracker:
    put:
      tags:
        - integrations
      summary: Create/Edit Custom Issue Tracker integration
      description: Set Custom Issue Tracker integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsCustomIssueTracker
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsCustomIssueTracker'
        required: true
      responses:
        "200":
          description: Create/Edit Custom Issue Tracker integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsCustomIssueTracker
  /api/v4/projects/{id}/integrations/datadog:
    put:
      tags:
        - integrations
      summary: Create/Edit Datadog integration
      description: Set Datadog integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsDatadog
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsDatadog'
        required: true
      responses:
        "200":
          description: Create/Edit Datadog integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsDatadog
  /api/v4/projects/{id}/integrations/diffblue-cover:
    put:
      tags:
        - integrations
      summary: Create/Edit Diffblue Cover integration
      description: Set Diffblue Cover integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsDiffblueCover
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsDiffblueCover'
        required: true
      responses:
        "200":
          description: Create/Edit Diffblue Cover integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsDiffblueCover
  /api/v4/projects/{id}/integrations/discord:
    put:
      tags:
        - integrations
      summary: Create/Edit Discord integration
      description: Set Discord integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsDiscord
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsDiscord'
        required: true
      responses:
        "200":
          description: Create/Edit Discord integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsDiscord
  /api/v4/projects/{id}/integrations/drone-ci:
    put:
      tags:
        - integrations
      summary: Create/Edit Drone Ci integration
      description: Set Drone Ci integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsDroneCi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsDroneCi'
        required: true
      responses:
        "200":
          description: Create/Edit Drone Ci integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsDroneCi
  /api/v4/projects/{id}/integrations/emails-on-push:
    put:
      tags:
        - integrations
      summary: Create/Edit Emails On Push integration
      description: Set Emails On Push integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsEmailsOnPush
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsEmailsOnPush'
        required: true
      responses:
        "200":
          description: Create/Edit Emails On Push integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsEmailsOnPush
  /api/v4/projects/{id}/integrations/external-wiki:
    put:
      tags:
        - integrations
      summary: Create/Edit External Wiki integration
      description: Set External Wiki integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsExternalWiki
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsExternalWiki'
        required: true
      responses:
        "200":
          description: Create/Edit External Wiki integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsExternalWiki
  /api/v4/projects/{id}/integrations/gitlab-slack-application:
    put:
      tags:
        - integrations
      summary: Create/Edit Gitlab Slack Application integration
      description: Set Gitlab Slack Application integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsGitlabSlackApplication
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsGitlabSlackApplication'
        required: true
      responses:
        "200":
          description: Create/Edit Gitlab Slack Application integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsGitlabSlackApplication
  /api/v4/projects/{id}/integrations/google-play:
    put:
      tags:
        - integrations
      summary: Create/Edit Google Play integration
      description: Set Google Play integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsGooglePlay
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsGooglePlay'
        required: true
      responses:
        "200":
          description: Create/Edit Google Play integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsGooglePlay
  /api/v4/projects/{id}/integrations/hangouts-chat:
    put:
      tags:
        - integrations
      summary: Create/Edit Hangouts Chat integration
      description: Set Hangouts Chat integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsHangoutsChat
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsHangoutsChat'
        required: true
      responses:
        "200":
          description: Create/Edit Hangouts Chat integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsHangoutsChat
  /api/v4/projects/{id}/integrations/harbor:
    put:
      tags:
        - integrations
      summary: Create/Edit Harbor integration
      description: Set Harbor integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsHarbor
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsHarbor'
        required: true
      responses:
        "200":
          description: Create/Edit Harbor integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsHarbor
  /api/v4/projects/{id}/integrations/irker:
    put:
      tags:
        - integrations
      summary: Create/Edit Irker integration
      description: Set Irker integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsIrker
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsIrker'
        required: true
      responses:
        "200":
          description: Create/Edit Irker integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsIrker
  /api/v4/projects/{id}/integrations/jenkins:
    put:
      tags:
        - integrations
      summary: Create/Edit Jenkins integration
      description: Set Jenkins integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsJenkins
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsJenkins'
        required: true
      responses:
        "200":
          description: Create/Edit Jenkins integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsJenkins
  /api/v4/projects/{id}/integrations/jira:
    put:
      tags:
        - integrations
      summary: Create/Edit Jira integration
      description: Set Jira integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsJira
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsJira'
        required: true
      responses:
        "200":
          description: Create/Edit Jira integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsJira
  /api/v4/projects/{id}/integrations/mattermost-slash-commands:
    put:
      tags:
        - integrations
      summary: Create/Edit Mattermost Slash Commands integration
      description: Set Mattermost Slash Commands integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsMattermostSlashCommands
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsMattermostSlashCommands'
        required: true
      responses:
        "200":
          description: Create/Edit Mattermost Slash Commands integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsMattermostSlashCommands
  /api/v4/projects/{id}/integrations/slack-slash-commands:
    put:
      tags:
        - integrations
      summary: Create/Edit Slack Slash Commands integration
      description: Set Slack Slash Commands integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsSlackSlashCommands
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsSlackSlashCommands'
        required: true
      responses:
        "200":
          description: Create/Edit Slack Slash Commands integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsSlackSlashCommands
  /api/v4/projects/{id}/integrations/packagist:
    put:
      tags:
        - integrations
      summary: Create/Edit Packagist integration
      description: Set Packagist integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPackagist
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPackagist'
        required: true
      responses:
        "200":
          description: Create/Edit Packagist integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPackagist
  /api/v4/projects/{id}/integrations/phorge:
    put:
      tags:
        - integrations
      summary: Create/Edit Phorge integration
      description: Set Phorge integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPhorge
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPhorge'
        required: true
      responses:
        "200":
          description: Create/Edit Phorge integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPhorge
  /api/v4/projects/{id}/integrations/pipelines-email:
    put:
      tags:
        - integrations
      summary: Create/Edit Pipelines Email integration
      description: Set Pipelines Email integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPipelinesEmail
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPipelinesEmail'
        required: true
      responses:
        "200":
          description: Create/Edit Pipelines Email integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPipelinesEmail
  /api/v4/projects/{id}/integrations/pivotaltracker:
    put:
      tags:
        - integrations
      summary: Create/Edit Pivotaltracker integration
      description: Set Pivotaltracker integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPivotaltracker
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPivotaltracker'
        required: true
      responses:
        "200":
          description: Create/Edit Pivotaltracker integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPivotaltracker
  /api/v4/projects/{id}/integrations/prometheus:
    put:
      tags:
        - integrations
      summary: Create/Edit Prometheus integration
      description: Set Prometheus integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPrometheus
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPrometheus'
        required: true
      responses:
        "200":
          description: Create/Edit Prometheus integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPrometheus
  /api/v4/projects/{id}/integrations/pumble:
    put:
      tags:
        - integrations
      summary: Create/Edit Pumble integration
      description: Set Pumble integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPumble
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPumble'
        required: true
      responses:
        "200":
          description: Create/Edit Pumble integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPumble
  /api/v4/projects/{id}/integrations/pushover:
    put:
      tags:
        - integrations
      summary: Create/Edit Pushover integration
      description: Set Pushover integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsPushover
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsPushover'
        required: true
      responses:
        "200":
          description: Create/Edit Pushover integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsPushover
  /api/v4/projects/{id}/integrations/redmine:
    put:
      tags:
        - integrations
      summary: Create/Edit Redmine integration
      description: Set Redmine integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsRedmine
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsRedmine'
        required: true
      responses:
        "200":
          description: Create/Edit Redmine integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsRedmine
  /api/v4/projects/{id}/integrations/ewm:
    put:
      tags:
        - integrations
      summary: Create/Edit Ewm integration
      description: Set Ewm integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsEwm
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsEwm'
        required: true
      responses:
        "200":
          description: Create/Edit Ewm integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsEwm
  /api/v4/projects/{id}/integrations/youtrack:
    put:
      tags:
        - integrations
      summary: Create/Edit Youtrack integration
      description: Set Youtrack integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsYoutrack
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsYoutrack'
        required: true
      responses:
        "200":
          description: Create/Edit Youtrack integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsYoutrack
  /api/v4/projects/{id}/integrations/clickup:
    put:
      tags:
        - integrations
      summary: Create/Edit Clickup integration
      description: Set Clickup integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsClickup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsClickup'
        required: true
      responses:
        "200":
          description: Create/Edit Clickup integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsClickup
  /api/v4/projects/{id}/integrations/slack:
    put:
      tags:
        - integrations
      summary: Create/Edit Slack integration
      description: Set Slack integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsSlack
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsSlack'
        required: true
      responses:
        "200":
          description: Create/Edit Slack integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsSlack
  /api/v4/projects/{id}/integrations/microsoft-teams:
    put:
      tags:
        - integrations
      summary: Create/Edit Microsoft Teams integration
      description: Set Microsoft Teams integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsMicrosoftTeams
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsMicrosoftTeams'
        required: true
      responses:
        "200":
          description: Create/Edit Microsoft Teams integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsMicrosoftTeams
  /api/v4/projects/{id}/integrations/mattermost:
    put:
      tags:
        - integrations
      summary: Create/Edit Mattermost integration
      description: Set Mattermost integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsMattermost
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsMattermost'
        required: true
      responses:
        "200":
          description: Create/Edit Mattermost integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsMattermost
  /api/v4/projects/{id}/integrations/teamcity:
    put:
      tags:
        - integrations
      summary: Create/Edit Teamcity integration
      description: Set Teamcity integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsTeamcity
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsTeamcity'
        required: true
      responses:
        "200":
          description: Create/Edit Teamcity integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsTeamcity
  /api/v4/projects/{id}/integrations/telegram:
    put:
      tags:
        - integrations
      summary: Create/Edit Telegram integration
      description: Set Telegram integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsTelegram
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsTelegram'
        required: true
      responses:
        "200":
          description: Create/Edit Telegram integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsTelegram
  /api/v4/projects/{id}/integrations/unify-circuit:
    put:
      tags:
        - integrations
      summary: Create/Edit Unify Circuit integration
      description: Set Unify Circuit integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsUnifyCircuit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsUnifyCircuit'
        required: true
      responses:
        "200":
          description: Create/Edit Unify Circuit integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsUnifyCircuit
  /api/v4/projects/{id}/integrations/webex-teams:
    put:
      tags:
        - integrations
      summary: Create/Edit Webex Teams integration
      description: Set Webex Teams integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsWebexTeams
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsWebexTeams'
        required: true
      responses:
        "200":
          description: Create/Edit Webex Teams integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsWebexTeams
  /api/v4/projects/{id}/integrations/zentao:
    put:
      tags:
        - integrations
      summary: Create/Edit Zentao integration
      description: Set Zentao integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsZentao
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsZentao'
        required: true
      responses:
        "200":
          description: Create/Edit Zentao integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsZentao
  /api/v4/projects/{id}/integrations/squash-tm:
    put:
      tags:
        - integrations
      summary: Create/Edit Squash Tm integration
      description: Set Squash Tm integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsSquashTm
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsSquashTm'
        required: true
      responses:
        "200":
          description: Create/Edit Squash Tm integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsSquashTm
  /api/v4/projects/{id}/integrations/github:
    put:
      tags:
        - integrations
      summary: Create/Edit Github integration
      description: Set Github integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsGithub
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsGithub'
        required: true
      responses:
        "200":
          description: Create/Edit Github integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsGithub
  /api/v4/projects/{id}/integrations/git-guardian:
    put:
      tags:
        - integrations
      summary: Create/Edit Git Guardian integration
      description: Set Git Guardian integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsGitGuardian
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsGitGuardian'
        required: true
      responses:
        "200":
          description: Create/Edit Git Guardian integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsGitGuardian
  /api/v4/projects/{id}/integrations/google-cloud-platform-artifact-registry:
    put:
      tags:
        - integrations
      summary: Create/Edit Google Cloud Platform Artifact Registry integration
      description: Set Google Cloud Platform Artifact Registry integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry'
        required: true
      responses:
        "200":
          description: Create/Edit Google Cloud Platform Artifact Registry integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry
  /api/v4/projects/{id}/integrations/google-cloud-platform-workload-identity-federation:
    put:
      tags:
        - integrations
      summary: Create/Edit Google Cloud Platform Workload Identity Federation integration
      description: Set Google Cloud Platform Workload Identity Federation integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation'
        required: true
      responses:
        "200":
          description: Create/Edit Google Cloud Platform Workload Identity Federation integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation
  /api/v4/projects/{id}/integrations/mock-ci:
    put:
      tags:
        - integrations
      summary: Create/Edit Mock Ci integration
      description: Set Mock Ci integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsMockCi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdIntegrationsMockCi'
        required: true
      responses:
        "200":
          description: Create/Edit Mock Ci integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdIntegrationsMockCi
  /api/v4/projects/{id}/integrations/mock-monitoring:
    put:
      tags:
        - integrations
      summary: Create/Edit Mock Monitoring integration
      description: Set Mock Monitoring integration for a project.
      operationId: putApiV4ProjectsIdIntegrationsMockMonitoring
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Create/Edit Mock Monitoring integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegrationBasic'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/integrations/{slug}:
    get:
      tags:
        - integrations
      summary: Get an integration settings
      description: Get the integration settings for a project.
      operationId: getApiV4ProjectsIdIntegrationsSlug
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: The name of the integration
          required: true
          schema:
            type: string
            enum:
              - apple-app-store
              - asana
              - assembla
              - bamboo
              - bugzilla
              - buildkite
              - campfire
              - confluence
              - custom-issue-tracker
              - datadog
              - diffblue-cover
              - discord
              - drone-ci
              - emails-on-push
              - external-wiki
              - gitlab-slack-application
              - google-play
              - hangouts-chat
              - harbor
              - irker
              - jenkins
              - jira
              - jira-cloud-app
              - mattermost-slash-commands
              - slack-slash-commands
              - packagist
              - phorge
              - pipelines-email
              - pivotaltracker
              - prometheus
              - pumble
              - pushover
              - redmine
              - ewm
              - youtrack
              - clickup
              - slack
              - microsoft-teams
              - mattermost
              - teamcity
              - telegram
              - unify-circuit
              - webex-teams
              - zentao
              - squash-tm
              - github
              - git-guardian
              - google-cloud-platform-artifact-registry
              - google-cloud-platform-workload-identity-federation
              - mock-ci
              - mock-monitoring
      responses:
        "200":
          description: Get an integration settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectIntegration'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - integrations
      summary: Disable an integration
      description: Disable the integration for a project. Integration settings are preserved.
      operationId: deleteApiV4ProjectsIdIntegrationsSlug
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: The name of the integration
          required: true
          schema:
            type: string
            enum:
              - apple-app-store
              - asana
              - assembla
              - bamboo
              - bugzilla
              - buildkite
              - campfire
              - confluence
              - custom-issue-tracker
              - datadog
              - diffblue-cover
              - discord
              - drone-ci
              - emails-on-push
              - external-wiki
              - gitlab-slack-application
              - google-play
              - hangouts-chat
              - harbor
              - irker
              - jenkins
              - jira
              - jira-cloud-app
              - mattermost-slash-commands
              - slack-slash-commands
              - packagist
              - phorge
              - pipelines-email
              - pivotaltracker
              - prometheus
              - pumble
              - pushover
              - redmine
              - ewm
              - youtrack
              - clickup
              - slack
              - microsoft-teams
              - mattermost
              - teamcity
              - telegram
              - unify-circuit
              - webex-teams
              - zentao
              - squash-tm
              - github
              - git-guardian
              - google-cloud-platform-artifact-registry
              - google-cloud-platform-workload-identity-federation
              - mock-ci
              - mock-monitoring
      responses:
        "204":
          description: Disable an integration
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/integrations/mattermost_slash_commands/trigger:
    post:
      tags:
        - integrations
      summary: Trigger a slash command for mattermost-slash-commands
      description: Added in GitLab 8.13
      operationId: postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger'
        required: true
      responses:
        "201":
          description: Trigger a slash command for mattermost-slash-commands
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger
  /api/v4/projects/{id}/integrations/slack_slash_commands/trigger:
    post:
      tags:
        - integrations
      summary: Trigger a slash command for slack-slash-commands
      description: Added in GitLab 8.13
      operationId: postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger'
        required: true
      responses:
        "201":
          description: Trigger a slash command for slack-slash-commands
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger
  /api/v4/projects/{id}/invitations:
    get:
      tags:
        - invitations
      summary: Get a list of group or project invitations viewable by the authenticated user
      description: This feature was introduced in GitLab 13.6
      operationId: getApiV4ProjectsIdInvitations
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: query
          in: query
          description: A query string to search for members
          schema:
            type: string
      responses:
        "200":
          description: Get a list of group or project invitations viewable by the authenticated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Invitation'
    post:
      tags:
        - invitations
      summary: Invite non-members by email address to a group or project.
      description: This feature was introduced in GitLab 13.6
      operationId: postApiV4ProjectsIdInvitations
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdInvitations'
        required: true
      responses:
        "201":
          description: Invite non-members by email address to a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Invitation'
      x-codegen-request-body-name: postApiV4ProjectsIdInvitations
  /api/v4/projects/{id}/invitations/{email}:
    put:
      tags:
        - invitations
      description: Updates a group or project invitation.
      operationId: putApiV4ProjectsIdInvitationsEmail
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: The email address of the invitation
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdInvitationsEmail'
        required: true
      responses:
        "200":
          description: Updates a group or project invitation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Invitation'
      x-codegen-request-body-name: putApiV4ProjectsIdInvitationsEmail
    delete:
      tags:
        - invitations
      description: Removes an invitation from a group or project.
      operationId: deleteApiV4ProjectsIdInvitationsEmail
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: The email address of the invitation
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Removes an invitation from a group or project.
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Could not delete invitation
          content: {}
  /api/v4/projects/{id}/issues/{issue_iid}/links:
    get:
      tags:
        - issue_links
      summary: List issue relations
      description: Get a list of a given issue’s linked issues, sorted by the relationship creation datetime (ascending).Issues are filtered according to the user authorizations.
      operationId: getApiV4ProjectsIdIssuesIssueIidLinks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List issue relations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_RelatedIssue'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - issue_links
      summary: Create an issue link
      description: Creates a two-way relation between two issues.The user must be allowed to update both issues to succeed.
      operationId: postApiV4ProjectsIdIssuesIssueIidLinks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdIssuesIssueIidLinks'
        required: true
      responses:
        "201":
          description: Create an issue link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssueLink'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdIssuesIssueIidLinks
  /api/v4/projects/{id}/issues/{issue_iid}/links/{issue_link_id}:
    get:
      tags:
        - issue_links
      summary: Get an issue link
      description: Gets details about an issue link. This feature was introduced in GitLab 15.1.
      operationId: getApiV4ProjectsIdIssuesIssueIidLinksIssueLinkId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
            format: int32
        - name: issue_link_id
          in: path
          description: ID of an issue relationship
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get an issue link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssueLink'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - issue_links
      summary: Delete an issue link
      description: Deletes an issue link, thus removes the two-way relationship.
      operationId: deleteApiV4ProjectsIdIssuesIssueIidLinksIssueLinkId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
            format: int32
        - name: issue_link_id
          in: path
          description: The ID of an issue relationship
          required: true
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content: {}
        "204":
          description: Delete an issue link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssueLink'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/ci/lint:
    get:
      tags:
        - ci_lint
      summary: Validates a CI YAML configuration with a namespace
      description: |-
        Checks if a project’s .gitlab-ci.yml configuration in a given commit (by default HEAD of the
                project’s default branch) is valid
      operationId: getApiV4ProjectsIdCiLint
      parameters:
        - name: sha
          in: query
          description: 'Deprecated: Use content_ref instead'
          schema:
            type: string
        - name: content_ref
          in: query
          description: The CI/CD configuration content is taken from this commit SHA, branch or tag. Defaults to the HEAD of the project's default branch
          schema:
            type: string
        - name: dry_run
          in: query
          description: Run pipeline creation simulation, or only do static check. This is false by default
          schema:
            type: boolean
            default: false
        - name: include_jobs
          in: query
          description: |-
            If the list of jobs that would exist in a static check or pipeline
                    simulation should be included in the response. This is false by default
          schema:
            type: boolean
        - name: ref
          in: query
          description: 'Deprecated: Use dry_run_ref instead'
          schema:
            type: string
        - name: dry_run_ref
          in: query
          description: Branch or tag used as context when executing a dry run. Defaults to the default branch of the project. Only used when dry_run is true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Validates a CI YAML configuration with a namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Lint_Result'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - ci_lint
      summary: Validate a CI YAML configuration with a namespace
      description: Checks if CI/CD YAML configuration is valid. This endpoint has namespace specific context
      operationId: postApiV4ProjectsIdCiLint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdCiLint'
        required: true
      responses:
        "200":
          description: Validate a CI YAML configuration with a namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Lint_Result'
      x-codegen-request-body-name: postApiV4ProjectsIdCiLint
  /api/v4/projects/{id}/packages/maven/*path/{file_name}:
    get:
      tags:
        - maven_packages
      summary: Download the maven package file at a project level
      description: This feature was introduced in GitLab 11.3
      operationId: getApiV4ProjectsIdPackagesMaven*pathFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: Package path
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download the maven package file at a project level
          content: {}
        "302":
          description: Download the maven package file at a project level
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - maven_packages
      summary: Upload the maven package file
      description: This feature was introduced in GitLab 11.3
      operationId: putApiV4ProjectsIdPackagesMaven*pathFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesMaven*pathFileName'
        required: true
      responses:
        "200":
          description: Upload the maven package file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "422":
          description: Unprocessable Entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesMaven*pathFileName
  /api/v4/projects/{id}/packages/maven/*path/{file_name}/authorize:
    put:
      tags:
        - maven_packages
      summary: Workhorse authorize the maven package file upload
      description: This feature was introduced in GitLab 11.3
      operationId: putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize'
        required: true
      responses:
        "200":
          description: Workhorse authorize the maven package file upload
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize
  /api/v4/projects/{id}/members:
    get:
      tags:
        - members
      description: Gets a list of group or project members viewable by the authenticated user.
      operationId: getApiV4ProjectsIdMembers
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          schema:
            type: string
        - name: user_ids
          in: query
          description: Array of user ids to look up for membership
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: skip_users
          in: query
          description: Array of user ids to be skipped for membership
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: show_seat_info
          in: query
          description: Show seat information for members
          schema:
            type: boolean
        - name: with_saml_identity
          in: query
          description: List only members with linked SAML identity
          schema:
            type: boolean
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Gets a list of group or project members viewable by the authenticated user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Member'
    post:
      tags:
        - members
      description: Adds a member to a group or project.
      operationId: postApiV4ProjectsIdMembers
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMembers'
        required: true
      responses:
        "201":
          description: Adds a member to a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
      x-codegen-request-body-name: postApiV4ProjectsIdMembers
  /api/v4/projects/{id}/members/all:
    get:
      tags:
        - members
      description: Gets a list of group or project members viewable by the authenticated user, including those who gained membership through ancestor group.
      operationId: getApiV4ProjectsIdMembersAll
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          schema:
            type: string
        - name: user_ids
          in: query
          description: Array of user ids to look up for membership
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: show_seat_info
          in: query
          description: Show seat information for members
          schema:
            type: boolean
        - name: state
          in: query
          description: Filter results by member state
          schema:
            type: string
            enum:
              - awaiting
              - active
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Gets a list of group or project members viewable by the authenticated user, including those who gained membership through ancestor group.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Member'
  /api/v4/projects/{id}/members/{user_id}:
    get:
      tags:
        - members
      description: Gets a member of a group or project.
      operationId: getApiV4ProjectsIdMembersUserId
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a member of a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
    put:
      tags:
        - members
      description: Updates a member of a group or project.
      operationId: putApiV4ProjectsIdMembersUserId
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the new member
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdMembersUserId'
        required: true
      responses:
        "200":
          description: Updates a member of a group or project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
      x-codegen-request-body-name: putApiV4ProjectsIdMembersUserId
    delete:
      tags:
        - members
      description: Removes a user from a group or project.
      operationId: deleteApiV4ProjectsIdMembersUserId
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
        - name: skip_subresources
          in: query
          description: Flag indicating if the deletion of direct memberships of the removed member in subgroups and projects should be skipped
          schema:
            type: boolean
            default: false
        - name: unassign_issuables
          in: query
          description: Flag indicating if the removed member should be unassigned from any issues or merge requests within given group or project
          schema:
            type: boolean
            default: false
      responses:
        "204":
          description: Removes a user from a group or project.
          content: {}
  /api/v4/projects/{id}/members/all/{user_id}:
    get:
      tags:
        - members
      description: Gets a member of a group or project, including those who gained membership through ancestor group
      operationId: getApiV4ProjectsIdMembersAllUserId
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Gets a member of a group or project, including those who gained membership through ancestor group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Member'
  /api/v4/projects/{id}/create_ci_config:
    post:
      tags:
        - projects
      description: Creates merge request for missing ci config in project
      operationId: postApiV4ProjectsIdCreateCiConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Creates merge request for missing ci config in project
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_estimate:
    post:
      tags:
        - merge_requests
      summary: Set a time estimate for a merge_request
      description: Sets an estimated time of work for this merge_request.
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge_request.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate'
        required: true
      responses:
        "201":
          description: Set a time estimate for a merge_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        "401":
          description: Unauthorized
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate:
    post:
      tags:
        - merge_requests
      summary: Reset the time estimate for a project merge_request
      description: Resets the estimated time for this merge_request to 0 seconds.
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidResetTimeEstimate
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge_request.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Reset the time estimate for a project merge_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/add_spent_time:
    post:
      tags:
        - merge_requests
      summary: Add spent time for a merge_request
      description: Adds spent time for this merge_request.
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge_request.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime'
        required: true
      responses:
        "201":
          description: Add spent time for a merge_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time:
    post:
      tags:
        - merge_requests
      summary: Reset spent time for a merge_request
      description: Resets the total spent time for this merge_request to 0 seconds.
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidResetSpentTime
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge_request
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Reset spent time for a merge_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_stats:
    get:
      tags:
        - merge_requests
      summary: Get time tracking stats
      description: Get time tracking stats
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidTimeStats
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge_request
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get time tracking stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests:
    get:
      tags:
        - merge_requests
      summary: List project merge requests
      description: Get all merge requests for this project.
      operationId: getApiV4ProjectsIdMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: author_id
          in: query
          description: Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.
          schema:
            type: integer
            format: int32
        - name: author_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          schema:
            type: string
        - name: assignee_id
          in: query
          description: Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.
          schema:
            type: integer
            format: int32
        - name: assignee_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: reviewer_username
          in: query
          description: Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.
          schema:
            type: string
        - name: labels
          in: query
          description: Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: milestone
          in: query
          description: Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: Returns `all` merge requests or just those that are `opened`, `closed`, `locked`, or `merged`.
          schema:
            type: string
            default: all
            enum:
              - opened
              - closed
              - locked
              - merged
              - all
        - name: order_by
          in: query
          description: Returns merge requests ordered by `created_at`, `label_priority`, `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields. Introduced in GitLab 14.8.
          schema:
            type: string
            default: created_at
            enum:
              - created_at
              - label_priority
              - milestone_due
              - popularity
              - priority
              - title
              - updated_at
        - name: sort
          in: query
          description: Returns merge requests sorted in `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: with_labels_details
          in: query
          description: 'If `true`, response returns more details for each label in labels field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`'
          schema:
            type: boolean
            default: false
        - name: with_merge_status_recheck
          in: query
          description: If `true`, this projection requests (but does not guarantee) that the `merge_status` field be recalculated asynchronously. Introduced in GitLab 13.0.
          schema:
            type: boolean
            default: false
        - name: created_after
          in: query
          description: Returns merge requests created on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Returns merge requests created on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: Returns merge requests updated on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_before
          in: query
          description: Returns merge requests updated on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: view
          in: query
          description: If simple, returns the `iid`, URL, title, description, and basic state of merge request
          schema:
            type: string
            enum:
              - simple
        - name: scope
          in: query
          description: 'Returns merge requests for the given scope: `created_by_me`, `assigned_to_me` or `all`'
          schema:
            type: string
            enum:
              - created-by-me
              - assigned-to-me
              - created_by_me
              - assigned_to_me
              - all
        - name: source_branch
          in: query
          description: Returns merge requests with the given source branch
          schema:
            type: string
        - name: source_project_id
          in: query
          description: Returns merge requests with the given source project id
          schema:
            type: integer
            format: int32
        - name: target_branch
          in: query
          description: Returns merge requests with the given target branch
          schema:
            type: string
        - name: search
          in: query
          description: Search merge requests against their `title` and `description`.
          schema:
            type: string
        - name: in
          in: query
          description: Modify the scope of the search attribute. `title`, `description`, or a string joining them with comma.
          schema:
            type: string
        - name: wip
          in: query
          description: Filter merge requests against their `wip` status. `yes` to return only draft merge requests, `no` to return non-draft merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: not[author_id]
          in: query
          description: '`<Negated>` Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.'
          schema:
            type: integer
            format: int32
        - name: not[author_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          schema:
            type: string
        - name: not[assignee_id]
          in: query
          description: '`<Negated>` Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.'
          schema:
            type: integer
            format: int32
        - name: not[assignee_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[reviewer_username]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.'
          schema:
            type: string
        - name: not[labels]
          in: query
          description: '`<Negated>` Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[milestone]
          in: query
          description: '`<Negated>` Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.'
          schema:
            type: string
        - name: not[my_reaction_emoji]
          in: query
          description: '`<Negated>` Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.'
          schema:
            type: string
        - name: not[reviewer_id]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.'
          schema:
            type: integer
            format: int32
        - name: deployed_before
          in: query
          description: Returns merge requests deployed before the given date/time. Expected in ISO 8601 format.
          schema:
            type: string
        - name: deployed_after
          in: query
          description: Returns merge requests deployed after the given date/time. Expected in ISO 8601 format
          schema:
            type: string
        - name: environment
          in: query
          description: Returns merge requests deployed to the given environment
          schema:
            type: string
        - name: approved
          in: query
          description: Filters merge requests by their `approved` status. `yes` returns only approved merge requests. `no` returns only non-approved merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: merge_user_id
          in: query
          description: Returns merge requests which have been merged by the user with the given user `id`. Mutually exclusive with `merge_user_username`.
          schema:
            type: integer
            format: int32
        - name: merge_user_username
          in: query
          description: Returns merge requests which have been merged by the user with the given `username`. Mutually exclusive with `merge_user_id`.
          schema:
            type: string
        - name: approver_ids
          in: query
          description: Return merge requests which have specified the users with the given IDs as an individual approver
          schema:
            type: string
        - name: approved_by_ids
          in: query
          description: Return merge requests which have been approved by the specified users with the given IDs
          schema:
            type: string
        - name: approved_by_usernames
          in: query
          description: |-
            Return merge requests which have been approved by the specified users with the given
                        usernames
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: iids
          in: query
          description: Returns the request having the given `iid`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        "200":
          description: List project merge requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestBasic'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
    post:
      tags:
        - merge_requests
      summary: Create merge request
      description: Create a new merge request.
      operationId: postApiV4ProjectsIdMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequests'
        required: true
      responses:
        "201":
          description: Create merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequest'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequests
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}:
    get:
      tags:
        - merge_requests
      summary: Get single merge request
      description: 'Shows information about a single merge request. Note: the `changes_count` value in the response is a string, not an integer. This is because when an merge request has too many changes to display and store, it is capped at 1,000. In that case, the API returns the string `"1000+"` for the changes count.'
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIid
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
            format: int32
        - name: render_html
          in: query
          description: If `true`, response includes rendered HTML for title and description.
          schema:
            type: boolean
        - name: include_diverged_commits_count
          in: query
          description: If `true`, response includes the commits behind the target branch.
          schema:
            type: boolean
        - name: include_rebase_in_progress
          in: query
          description: If `true`, response includes whether a rebase operation is in progress.
          schema:
            type: boolean
      responses:
        "200":
          description: Get single merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequest'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - merge_requests
      summary: Update merge request
      description: Updates an existing merge request. You can change the target branch, title, or even close the merge request.
      operationId: putApiV4ProjectsIdMergeRequestsMergeRequestIid
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdMergeRequestsMergeRequestIid'
        required: true
      responses:
        "200":
          description: Update merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequest'
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdMergeRequestsMergeRequestIid
    delete:
      tags:
        - merge_requests
      summary: Delete a merge request
      description: 'Only for administrators and project owners. Deletes the merge request in question. '
      operationId: deleteApiV4ProjectsIdMergeRequestsMergeRequestIid
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a merge request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "412":
          description: Precondition failed
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/participants:
    get:
      tags:
        - merge_requests
      summary: Get single merge request participants
      description: Get a list of merge request participants.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidParticipants
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single merge request participants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserBasic'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reviewers:
    get:
      tags:
        - merge_requests
      summary: Get single merge request reviewers
      description: Get a list of merge request reviewers.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidReviewers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single merge request reviewers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestReviewer'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/commits:
    get:
      tags:
        - merge_requests
      summary: Get single merge request commits
      description: Get a list of merge request commits.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single merge request commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Commit'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits:
    get:
      tags:
        - merge_requests
      summary: List merge request context commits
      description: Get a list of merge request context commits.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List merge request context commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Commit'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - merge_requests
      summary: Create merge request context commits
      description: Create a list of merge request context commits.
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits'
        required: true
      responses:
        "201":
          description: Create merge request context commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Commit'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits
    delete:
      tags:
        - merge_requests
      summary: Delete merge request context commits
      description: Delete a list of merge request context commits.
      operationId: deleteApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: commits
          in: query
          description: The context commits’ SHA.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete merge request context commits
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/changes:
    get:
      tags:
        - merge_requests
      summary: Get single merge request changes
      description: Shows information about the merge request including its files and changes.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidChanges
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: unidiff
          in: query
          description: A diff in a Unified diff format
          schema:
            type: boolean
            default: false
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single merge request changes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestChanges'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/diffs:
    get:
      tags:
        - merge_requests
      summary: Get the merge request diffs
      description: Get a list of merge request diffs.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidDiffs
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: unidiff
          in: query
          description: A diff in a Unified diff format
          schema:
            type: boolean
            default: false
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get the merge request diffs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Diff'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/pipelines:
    get:
      tags:
        - merge_requests
      summary: Get single merge request pipelines
      description: Get a list of merge request pipelines.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidPipelines
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single merge request pipelines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - merge_requests
      summary: Create merge request pipeline
      description: 'Create a new pipeline for a merge request. A pipeline created via this endpoint doesn’t run a regular branch/tag pipeline. It requires `.gitlab-ci.yml` to be configured with `only: [merge_requests]` to create jobs.'
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidPipelines
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Create merge request pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "405":
          description: Method not allowed
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge:
    put:
      tags:
        - merge_requests
      summary: Merge a merge request
      description: Accept and merge changes submitted with the merge request using this API.
      operationId: putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge'
        required: true
      responses:
        "200":
          description: Merge a merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequest'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "405":
          description: Method not allowed
          content: {}
        "409":
          description: Conflict
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge_ref:
    get:
      tags:
        - merge_requests
      summary: Returns the up to date merge-ref HEAD commit
      description: Returns the up to date merge-ref HEAD commit
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidMergeRef
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the up to date merge-ref HEAD commit
          content: {}
        "400":
          description: Bad request
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds:
    post:
      tags:
        - merge_requests
      summary: Cancel Merge When Pipeline Succeeds
      description: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidCancelMergeWhenPipelineSucceeds
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Cancel Merge When Pipeline Succeeds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequest'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "405":
          description: Method not allowed
          content: {}
        "406":
          description: Not acceptable
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/rebase:
    put:
      tags:
        - merge_requests
      summary: Rebase a merge request
      description: Automatically rebase the `source_branch` of the merge request against its `target_branch`. This feature was added in GitLab 11.6
      operationId: putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase'
        required: true
      responses:
        "200":
          description: Rebase a merge request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/closes_issues:
    get:
      tags:
        - merge_requests
      summary: List issues that close on merge
      description: Get all the issues that would be closed by merging the provided merge request.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidClosesIssues
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List issues that close on merge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MRNote'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions:
    get:
      tags:
        - merge_requests
      summary: Get a list of merge request diff versions
      description: This feature was introduced in GitLab 8.12.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidVersions
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of merge request diff versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_MergeRequestDiff'
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}:
    get:
      tags:
        - merge_requests
      summary: Get a single merge request diff version
      description: This feature was introduced in GitLab 8.12.
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidVersionsVersionId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request
          required: true
          schema:
            type: integer
            format: int32
        - name: version_id
          in: path
          description: The ID of the merge request diff version
          required: true
          schema:
            type: integer
            format: int32
        - name: unidiff
          in: query
          description: A diff in a Unified diff format
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a single merge request diff version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestDiffFull'
  /api/v4/projects/{id}/packages/{package_id}/package_files:
    get:
      tags:
        - package_files
      summary: List package files
      description: Get a list of package files of a single package
      operationId: getApiV4ProjectsIdPackagesPackageIdPackageFiles
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: ID of a package
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List package files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_PackageFile'
  /api/v4/projects/{id}/packages/{package_id}/package_files/{package_file_id}:
    delete:
      tags:
        - package_files
      summary: Delete a package file
      description: This feature was introduced in GitLab 13.12
      operationId: deleteApiV4ProjectsIdPackagesPackageIdPackageFilesPackageFileId
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: ID of a package
          required: true
          schema:
            type: integer
            format: int32
        - name: package_file_id
          in: path
          description: ID of a package file
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a package file
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/pages:
    get:
      tags:
        - pages
      summary: Get pages settings
      description: Get pages URL and other settings. This feature was introduced in Gitlab 16.8
      operationId: getApiV4ProjectsIdPages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get pages settings
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
    delete:
      tags:
        - pages
      summary: Unpublish pages
      description: Remove pages. The user must have administrator access. This feature was introduced in GitLab 12.6
      operationId: deleteApiV4ProjectsIdPages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Unpublish pages
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
    patch:
      tags:
        - pages
      summary: Update pages settings
      description: Update page settings for a project. User must have administrative access.
      operationId: patchApiV4ProjectsIdPages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiV4ProjectsIdPages'
        required: true
      responses:
        "200":
          description: Update pages settings
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: patchApiV4ProjectsIdPages
  /api/v4/projects/{id}/pages/domains:
    get:
      tags:
        - pages_domains
      description: Get all pages domains
      operationId: getApiV4ProjectsIdPagesDomains
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all pages domains
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_PagesDomain'
    post:
      tags:
        - projects
      description: Create a new pages domain
      operationId: postApiV4ProjectsIdPagesDomains
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPagesDomains'
        required: true
      responses:
        "201":
          description: Create a new pages domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PagesDomain'
      x-codegen-request-body-name: postApiV4ProjectsIdPagesDomains
  /api/v4/projects/{id}/pages/domains/{domain}:
    get:
      tags:
        - projects
      description: Get a single pages domain
      operationId: getApiV4ProjectsIdPagesDomainsDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: The domain
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a single pages domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PagesDomain'
    put:
      tags:
        - projects
      description: Updates a pages domain
      operationId: putApiV4ProjectsIdPagesDomainsDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: The domain
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPagesDomainsDomain'
        required: true
      responses:
        "200":
          description: Updates a pages domain
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPagesDomainsDomain
    delete:
      tags:
        - projects
      description: Delete a pages domain
      operationId: deleteApiV4ProjectsIdPagesDomainsDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: The domain
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a pages domain
          content: {}
  /api/v4/projects/{id}/avatar:
    get:
      tags:
        - project_avatar
      summary: Download a project avatar
      description: This feature was introduced in GitLab 16.9
      operationId: getApiV4ProjectsIdAvatar
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download a project avatar
          content: {}
  /api/v4/projects/{id}/clusters:
    get:
      tags:
        - clusters
      summary: List project clusters
      description: This feature was introduced in GitLab 11.7. Returns a list of project clusters.
      operationId: getApiV4ProjectsIdClusters
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List project clusters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Cluster'
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/clusters/{cluster_id}:
    get:
      tags:
        - clusters
      summary: Get a single project cluster
      description: This feature was introduced in GitLab 11.7. Gets a single project cluster.
      operationId: getApiV4ProjectsIdClustersClusterId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single project cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterProject'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - clusters
      summary: Edit project cluster
      description: This feature was introduced in GitLab 11.7. Updates an existing project cluster.
      operationId: putApiV4ProjectsIdClustersClusterId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdClustersClusterId'
        required: true
      responses:
        "200":
          description: Edit project cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterProject'
        "400":
          description: Validation error
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdClustersClusterId
    delete:
      tags:
        - clusters
      summary: Delete project cluster
      description: This feature was introduced in GitLab 11.7. Deletes an existing project cluster. Does not remove existing resources within the connected Kubernetes cluster.
      operationId: deleteApiV4ProjectsIdClustersClusterId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The Cluster ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "403":
          description: Forbidden
          content: {}
        "204":
          description: Delete project cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterProject'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/clusters/user:
    post:
      tags:
        - clusters
      summary: Add existing cluster to project
      description: This feature was introduced in GitLab 11.7. Adds an existing Kubernetes cluster to the project.
      operationId: postApiV4ProjectsIdClustersUser
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdClustersUser'
        required: true
      responses:
        "201":
          description: Add existing cluster to project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ClusterProject'
        "400":
          description: Validation error
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdClustersUser
  /api/v4/projects/{id}/registry/repositories:
    get:
      tags:
        - container_registry
      summary: List container repositories within a project
      description: This feature was introduced in GitLab 11.8.
      operationId: getApiV4ProjectsIdRegistryRepositories
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: tags
          in: query
          description: Determines if tags should be included
          schema:
            type: boolean
            default: false
        - name: tags_count
          in: query
          description: Determines if the tags count should be included
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: List container repositories within a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ContainerRegistry_Repository'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/registry/repositories/{repository_id}:
    delete:
      tags:
        - container_registry
      summary: Delete repository
      description: This feature was introduced in GitLab 11.8.
      operationId: deleteApiV4ProjectsIdRegistryRepositoriesRepositoryId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of the repository
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/registry/repositories/{repository_id}/tags:
    get:
      tags:
        - container_registry
      summary: List tags of a repository
      description: This feature was introduced in GitLab 11.8.
      operationId: getApiV4ProjectsIdRegistryRepositoriesRepositoryIdTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of the repository
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List tags of a repository
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ContainerRegistry_Tag'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
    delete:
      tags:
        - container_registry
      summary: Delete repository tags (in bulk)
      description: This feature was introduced in GitLab 11.8.
      operationId: deleteApiV4ProjectsIdRegistryRepositoriesRepositoryIdTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of the repository
          required: true
          schema:
            type: integer
            format: int32
        - name: name_regex_delete
          in: query
          description: The tag name regexp to delete, specify .* to delete all
          schema:
            type: string
        - name: name_regex
          in: query
          description: The tag name regexp to delete, specify .* to delete all
          schema:
            type: string
        - name: name_regex_keep
          in: query
          description: The tag name regexp to retain
          schema:
            type: string
        - name: keep_n
          in: query
          description: Keep n of latest tags with matching name
          schema:
            type: integer
            format: int32
        - name: older_than
          in: query
          description: 'Delete older than: 1h, 1d, 1month'
          schema:
            type: string
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}:
    get:
      tags:
        - container_registry
      summary: Get details about a repository tag
      description: This feature was introduced in GitLab 11.8.
      operationId: getApiV4ProjectsIdRegistryRepositoriesRepositoryIdTagsTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of the repository
          required: true
          schema:
            type: integer
            format: int32
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get details about a repository tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ContainerRegistry_TagDetails'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
    delete:
      tags:
        - container_registry
      summary: Delete repository tag
      description: This feature was introduced in GitLab 11.8.
      operationId: deleteApiV4ProjectsIdRegistryRepositoriesRepositoryIdTagsTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of the repository
          required: true
          schema:
            type: integer
            format: int32
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/events:
    get:
      tags:
        - projects
      description: List a project's visible events
      operationId: getApiV4ProjectsIdEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: action
          in: query
          description: Event action to filter on
          schema:
            type: string
        - name: target_type
          in: query
          description: Event target type to filter on
          schema:
            type: string
            enum:
              - issue
              - milestone
              - merge_request
              - note
              - project
              - snippet
              - user
              - wiki
              - design
        - name: before
          in: query
          description: Include only events created before this date
          schema:
            type: string
            format: date
        - name: after
          in: query
          description: Include only events created after this date
          schema:
            type: string
            format: date
        - name: sort
          in: query
          description: Return events sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List a project's visible events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Event'
  /api/v4/projects/{id}/export:
    get:
      tags:
        - project_export
      summary: Get export status
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4ProjectsIdExport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get export status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectExportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
    post:
      tags:
        - project_export
      summary: Start export
      description: This feature was introduced in GitLab 10.6.
      operationId: postApiV4ProjectsIdExport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdExport'
        required: true
      responses:
        "202":
          description: Start export
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdExport
  /api/v4/projects/{id}/export/download:
    get:
      tags:
        - project_export
      summary: Download export
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4ProjectsIdExportDownload
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download export
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/{id}/export_relations:
    post:
      tags:
        - project_export
      summary: Start relations export
      description: This feature was introduced in GitLab 14.4
      operationId: postApiV4ProjectsIdExportRelations
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdExportRelations'
        required: true
      responses:
        "202":
          description: Start relations export
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdExportRelations
  /api/v4/projects/{id}/export_relations/download:
    get:
      tags:
        - project_export
      summary: Download relations export
      description: This feature was introduced in GitLab 14.4
      operationId: getApiV4ProjectsIdExportRelationsDownload
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: relation
          in: query
          description: Project relation name
          required: true
          schema:
            type: string
        - name: batched
          in: query
          description: Whether to download in batches
          schema:
            type: boolean
        - name: batch_number
          in: query
          description: Batch number to download
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Download relations export
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/{id}/export_relations/status:
    get:
      tags:
        - project_export
      summary: Relations export status
      description: This feature was introduced in GitLab 14.4
      operationId: getApiV4ProjectsIdExportRelationsStatus
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: relation
          in: query
          description: Project relation name
          schema:
            type: string
      responses:
        "200":
          description: Relations export status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BulkImports_ExportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/{id}/hooks:
    get:
      tags:
        - project_hooks
      summary: List project hooks
      description: Get a list of project hooks
      operationId: getApiV4ProjectsIdHooks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List project hooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ProjectHook'
    post:
      tags:
        - project_hooks
      summary: Add project hook
      description: Adds a hook to a specified project
      operationId: postApiV4ProjectsIdHooks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdHooks'
        required: true
      responses:
        "201":
          description: Add project hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectHook'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdHooks
  /api/v4/projects/{id}/hooks/{hook_id}:
    get:
      tags:
        - project_hooks
      summary: Get project hook
      description: Get a specific hook for a project
      operationId: getApiV4ProjectsIdHooksHookId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: hook_id
          in: path
          description: The ID of a project hook
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get project hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectHook'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - project_hooks
      summary: Edit project hook
      description: Edits a hook for a specified project.
      operationId: putApiV4ProjectsIdHooksHookId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: hook_id
          in: path
          description: The ID of the project hook
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdHooksHookId'
        required: true
      responses:
        "200":
          description: Edit project hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectHook'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdHooksHookId
    delete:
      tags:
        - project_hooks
      summary: Delete a project hook
      description: Removes a hook from a project. This is an idempotent method and can be called multiple times. Either the hook is available or not.
      operationId: deleteApiV4ProjectsIdHooksHookId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: hook_id
          in: path
          description: The ID of the project hook
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "404":
          description: Not found
          content: {}
        "204":
          description: Delete a project hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectHook'
  /api/v4/projects/import/authorize:
    post:
      tags:
        - project_import
      summary: Workhorse authorize the project import upload
      description: This feature was introduced in GitLab 12.9
      operationId: postApiV4ProjectsImportAuthorize
      responses:
        "201":
          description: Workhorse authorize the project import upload
          content: {}
  /api/v4/projects/import:
    post:
      tags:
        - project_import
      summary: Create a new project import
      description: This feature was introduced in GitLab 10.6.
      operationId: postApiV4ProjectsImport
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - path
              type: object
              properties:
                path:
                  type: string
                  description: The new project path and name
                file:
                  type: string
                  description: The project export file to be imported
                  format: binary
                name:
                  type: string
                  description: The name of the project to be imported. Defaults to the path of the project if not provided.
                namespace:
                  type: string
                  description: The ID or name of the namespace that the project will be imported into. Defaults to the current user's namespace.
                overwrite:
                  type: boolean
                  description: If there is a project in the same namespace and with the same name overwrite it
                  default: false
                override_params[description]:
                  type: string
                  description: The description of the project
                override_params[build_git_strategy]:
                  type: string
                  description: The Git strategy. Defaults to `fetch`
                  enum:
                    - fetch
                    - clone
                override_params[build_timeout]:
                  type: integer
                  description: Build timeout
                  format: int32
                override_params[auto_cancel_pending_pipelines]:
                  type: string
                  description: Auto-cancel pending pipelines
                  enum:
                    - disabled
                    - enabled
                override_params[ci_config_path]:
                  type: string
                  description: The path to CI config file. Defaults to `.gitlab-ci.yml`
                override_params[service_desk_enabled]:
                  type: boolean
                  description: Disable or enable the service desk
                override_params[issues_enabled]:
                  type: boolean
                  description: Flag indication if the issue tracker is enabled
                override_params[merge_requests_enabled]:
                  type: boolean
                  description: Flag indication if merge requests are enabled
                override_params[wiki_enabled]:
                  type: boolean
                  description: Flag indication if the wiki is enabled
                override_params[jobs_enabled]:
                  type: boolean
                  description: Flag indication if jobs are enabled
                override_params[snippets_enabled]:
                  type: boolean
                  description: Flag indication if snippets are enabled
                override_params[issues_access_level]:
                  type: string
                  description: Issues access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[repository_access_level]:
                  type: string
                  description: Repository access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[merge_requests_access_level]:
                  type: string
                  description: Merge requests access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[forking_access_level]:
                  type: string
                  description: Forks access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[wiki_access_level]:
                  type: string
                  description: Wiki access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[builds_access_level]:
                  type: string
                  description: Builds access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[snippets_access_level]:
                  type: string
                  description: Snippets access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[pages_access_level]:
                  type: string
                  description: Pages access level. One of `disabled`, `private`, `enabled` or `public`
                  enum:
                    - disabled
                    - private
                    - enabled
                    - public
                override_params[analytics_access_level]:
                  type: string
                  description: Analytics access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[container_registry_access_level]:
                  type: string
                  description: Controls visibility of the container registry. One of `disabled`, `private` or `enabled`. `private` will make the container registry accessible only to project members (reporter role and above). `enabled` will make the container registry accessible to everyone who has access to the project. `disabled` will disable the container registry
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[security_and_compliance_access_level]:
                  type: string
                  description: Security and compliance access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[releases_access_level]:
                  type: string
                  description: Releases access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[environments_access_level]:
                  type: string
                  description: Environments access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[feature_flags_access_level]:
                  type: string
                  description: Feature flags access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[infrastructure_access_level]:
                  type: string
                  description: Infrastructure access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[monitor_access_level]:
                  type: string
                  description: Monitor access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[model_experiments_access_level]:
                  type: string
                  description: Model experiments access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[model_registry_access_level]:
                  type: string
                  description: Model registry access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[emails_disabled]:
                  type: boolean
                  description: 'Deprecated: Use emails_enabled instead.'
                override_params[emails_enabled]:
                  type: boolean
                  description: Enable email notifications
                override_params[show_default_award_emojis]:
                  type: boolean
                  description: Show default award emojis
                override_params[show_diff_preview_in_email]:
                  type: boolean
                  description: Include the code diff preview in merge request notification emails
                override_params[warn_about_potentially_unwanted_characters]:
                  type: boolean
                  description: Warn about potentially unwanted characters
                override_params[enforce_auth_checks_on_uploads]:
                  type: boolean
                  description: Enforce auth check on uploads
                override_params[shared_runners_enabled]:
                  type: boolean
                  description: Flag indication if shared runners are enabled for that project
                override_params[group_runners_enabled]:
                  type: boolean
                  description: Flag indication if group runners are enabled for that project
                override_params[resolve_outdated_diff_discussions]:
                  type: boolean
                  description: Automatically resolve merge request diff threads on lines changed with a push
                override_params[remove_source_branch_after_merge]:
                  type: boolean
                  description: Remove the source branch by default after merge
                override_params[container_registry_enabled]:
                  type: boolean
                  description: 'Deprecated: Use :container_registry_access_level instead. Flag indication if the container registry is enabled for that project'
                override_params[container_expiration_policy_attributes][cadence]:
                  type: string
                  description: Container expiration policy cadence for recurring job
                override_params[container_expiration_policy_attributes][keep_n]:
                  type: integer
                  description: Container expiration policy number of images to keep
                  format: int32
                override_params[container_expiration_policy_attributes][older_than]:
                  type: string
                  description: Container expiration policy remove images older than value
                override_params[container_expiration_policy_attributes][name_regex]:
                  type: string
                  description: Container expiration policy regex for image removal
                override_params[container_expiration_policy_attributes][name_regex_keep]:
                  type: string
                  description: Container expiration policy regex for image retention
                override_params[container_expiration_policy_attributes][enabled]:
                  type: boolean
                  description: Flag indication if container expiration policy is enabled
                override_params[lfs_enabled]:
                  type: boolean
                  description: Flag indication if Git LFS is enabled for that project
                override_params[visibility]:
                  type: string
                  description: The visibility of the project.
                  enum:
                    - private
                    - internal
                    - public
                override_params[public_builds]:
                  type: boolean
                  description: 'Deprecated: Use public_jobs instead.'
                override_params[public_jobs]:
                  type: boolean
                  description: Perform public builds
                override_params[request_access_enabled]:
                  type: boolean
                  description: Allow users to request member access
                override_params[only_allow_merge_if_pipeline_succeeds]:
                  type: boolean
                  description: Only allow to merge if builds succeed
                override_params[allow_merge_on_skipped_pipeline]:
                  type: boolean
                  description: Allow to merge if pipeline is skipped
                override_params[only_allow_merge_if_all_discussions_are_resolved]:
                  type: boolean
                  description: Only allow to merge if all threads are resolved
                override_params[tag_list]:
                  type: array
                  description: 'Deprecated: Use :topics instead'
                  items:
                    type: string
                override_params[topics]:
                  type: array
                  description: The list of topics for a project
                  items:
                    type: string
                override_params[avatar]:
                  type: string
                  description: Avatar image for project
                  format: binary
                override_params[printing_merge_request_link_enabled]:
                  type: boolean
                  description: Show link to create/view merge request when pushing from the command line
                override_params[merge_method]:
                  type: string
                  description: The merge method used when merging merge requests
                  enum:
                    - ff
                    - rebase_merge
                    - merge
                override_params[suggestion_commit_message]:
                  type: string
                  description: The commit message used to apply merge request suggestions
                override_params[merge_commit_template]:
                  type: string
                  description: Template used to create merge commit message
                override_params[squash_commit_template]:
                  type: string
                  description: Template used to create squash commit message
                override_params[issue_branch_template]:
                  type: string
                  description: Template used to create a branch from an issue
                override_params[initialize_with_readme]:
                  type: boolean
                  description: Initialize a project with a README.md
                override_params[auto_devops_enabled]:
                  type: boolean
                  description: Flag indication if Auto DevOps is enabled
                override_params[auto_devops_deploy_strategy]:
                  type: string
                  description: Auto Deploy strategy
                  enum:
                    - continuous
                    - manual
                    - timed_incremental
                override_params[autoclose_referenced_issues]:
                  type: boolean
                  description: Flag indication if referenced issues auto-closing is enabled
                override_params[repository_storage]:
                  type: string
                  description: Which storage shard the repository is on. Available only to admins
                override_params[packages_enabled]:
                  type: boolean
                  description: Enable project packages feature
                override_params[squash_option]:
                  type: string
                  description: Squash default for project. One of `never`, `always`, `default_on`, or `default_off`.
                  enum:
                    - never
                    - always
                    - default_on
                    - default_off
                override_params[mr_default_target_self]:
                  type: boolean
                  description: Merge requests of this forked project targets itself by default
                override_params[only_allow_merge_if_all_status_checks_passed]:
                  type: boolean
                  description: Blocks merge requests from merging unless all status checks have passed
                override_params[approvals_before_merge]:
                  type: integer
                  description: How many approvers should approve merge request by default
                  format: int32
                override_params[mirror]:
                  type: boolean
                  description: Enables pull mirroring in a project
                override_params[mirror_trigger_builds]:
                  type: boolean
                  description: Pull mirroring triggers builds
                override_params[external_authorization_classification_label]:
                  type: string
                  description: The classification label for the project
                override_params[requirements_access_level]:
                  type: string
                  description: Requirements feature access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[prevent_merge_without_jira_issue]:
                  type: boolean
                  description: Require an associated issue from Jira
                file.path:
                  type: string
                  description: Path to locally stored body (generated by Workhorse)
                file.name:
                  type: string
                  description: Real filename as send in Content-Disposition (generated by Workhorse)
                file.type:
                  type: string
                  description: Real content type as send in Content-Type (generated by Workhorse)
                file.size:
                  type: integer
                  description: Real size of file (generated by Workhorse)
                  format: int32
                file.md5:
                  type: string
                  description: MD5 checksum of the file (generated by Workhorse)
                file.sha1:
                  type: string
                  description: SHA1 checksum of the file (generated by Workhorse)
                file.sha256:
                  type: string
                  description: SHA256 checksum of the file (generated by Workhorse)
                file.etag:
                  type: string
                  description: Etag of the file (generated by Workhorse)
                file.remote_id:
                  type: string
                  description: Remote_id of the file (generated by Workhorse)
                file.remote_url:
                  type: string
                  description: Remote_url of the file (generated by Workhorse)
        required: true
      responses:
        "201":
          description: Create a new project import
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectImportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/{id}/import:
    get:
      tags:
        - project_import
      summary: Get a project import status
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4ProjectsIdImport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a project import status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectImportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/remote-import:
    post:
      tags:
        - project_import
      summary: Create a new project import using a remote object storage path
      description: This feature was introduced in GitLab 13.2.
      operationId: postApiV4ProjectsRemoteImport
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - path
                - url
              type: object
              properties:
                url:
                  type: string
                  description: The URL for the file.
                path:
                  type: string
                  description: The new project path and name
                name:
                  type: string
                  description: The name of the project to be imported. Defaults to the path of the project if not provided.
                namespace:
                  type: string
                  description: The ID or name of the namespace that the project will be imported into. Defaults to the current user's namespace.
                overwrite:
                  type: boolean
                  description: If there is a project in the same namespace and with the same name overwrite it
                  default: false
                override_params[description]:
                  type: string
                  description: The description of the project
                override_params[build_git_strategy]:
                  type: string
                  description: The Git strategy. Defaults to `fetch`
                  enum:
                    - fetch
                    - clone
                override_params[build_timeout]:
                  type: integer
                  description: Build timeout
                  format: int32
                override_params[auto_cancel_pending_pipelines]:
                  type: string
                  description: Auto-cancel pending pipelines
                  enum:
                    - disabled
                    - enabled
                override_params[ci_config_path]:
                  type: string
                  description: The path to CI config file. Defaults to `.gitlab-ci.yml`
                override_params[service_desk_enabled]:
                  type: boolean
                  description: Disable or enable the service desk
                override_params[issues_enabled]:
                  type: boolean
                  description: Flag indication if the issue tracker is enabled
                override_params[merge_requests_enabled]:
                  type: boolean
                  description: Flag indication if merge requests are enabled
                override_params[wiki_enabled]:
                  type: boolean
                  description: Flag indication if the wiki is enabled
                override_params[jobs_enabled]:
                  type: boolean
                  description: Flag indication if jobs are enabled
                override_params[snippets_enabled]:
                  type: boolean
                  description: Flag indication if snippets are enabled
                override_params[issues_access_level]:
                  type: string
                  description: Issues access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[repository_access_level]:
                  type: string
                  description: Repository access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[merge_requests_access_level]:
                  type: string
                  description: Merge requests access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[forking_access_level]:
                  type: string
                  description: Forks access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[wiki_access_level]:
                  type: string
                  description: Wiki access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[builds_access_level]:
                  type: string
                  description: Builds access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[snippets_access_level]:
                  type: string
                  description: Snippets access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[pages_access_level]:
                  type: string
                  description: Pages access level. One of `disabled`, `private`, `enabled` or `public`
                  enum:
                    - disabled
                    - private
                    - enabled
                    - public
                override_params[analytics_access_level]:
                  type: string
                  description: Analytics access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[container_registry_access_level]:
                  type: string
                  description: Controls visibility of the container registry. One of `disabled`, `private` or `enabled`. `private` will make the container registry accessible only to project members (reporter role and above). `enabled` will make the container registry accessible to everyone who has access to the project. `disabled` will disable the container registry
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[security_and_compliance_access_level]:
                  type: string
                  description: Security and compliance access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[releases_access_level]:
                  type: string
                  description: Releases access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[environments_access_level]:
                  type: string
                  description: Environments access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[feature_flags_access_level]:
                  type: string
                  description: Feature flags access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[infrastructure_access_level]:
                  type: string
                  description: Infrastructure access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[monitor_access_level]:
                  type: string
                  description: Monitor access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[model_experiments_access_level]:
                  type: string
                  description: Model experiments access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[model_registry_access_level]:
                  type: string
                  description: Model registry access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[emails_disabled]:
                  type: boolean
                  description: 'Deprecated: Use emails_enabled instead.'
                override_params[emails_enabled]:
                  type: boolean
                  description: Enable email notifications
                override_params[show_default_award_emojis]:
                  type: boolean
                  description: Show default award emojis
                override_params[show_diff_preview_in_email]:
                  type: boolean
                  description: Include the code diff preview in merge request notification emails
                override_params[warn_about_potentially_unwanted_characters]:
                  type: boolean
                  description: Warn about potentially unwanted characters
                override_params[enforce_auth_checks_on_uploads]:
                  type: boolean
                  description: Enforce auth check on uploads
                override_params[shared_runners_enabled]:
                  type: boolean
                  description: Flag indication if shared runners are enabled for that project
                override_params[group_runners_enabled]:
                  type: boolean
                  description: Flag indication if group runners are enabled for that project
                override_params[resolve_outdated_diff_discussions]:
                  type: boolean
                  description: Automatically resolve merge request diff threads on lines changed with a push
                override_params[remove_source_branch_after_merge]:
                  type: boolean
                  description: Remove the source branch by default after merge
                override_params[container_registry_enabled]:
                  type: boolean
                  description: 'Deprecated: Use :container_registry_access_level instead. Flag indication if the container registry is enabled for that project'
                override_params[container_expiration_policy_attributes][cadence]:
                  type: string
                  description: Container expiration policy cadence for recurring job
                override_params[container_expiration_policy_attributes][keep_n]:
                  type: integer
                  description: Container expiration policy number of images to keep
                  format: int32
                override_params[container_expiration_policy_attributes][older_than]:
                  type: string
                  description: Container expiration policy remove images older than value
                override_params[container_expiration_policy_attributes][name_regex]:
                  type: string
                  description: Container expiration policy regex for image removal
                override_params[container_expiration_policy_attributes][name_regex_keep]:
                  type: string
                  description: Container expiration policy regex for image retention
                override_params[container_expiration_policy_attributes][enabled]:
                  type: boolean
                  description: Flag indication if container expiration policy is enabled
                override_params[lfs_enabled]:
                  type: boolean
                  description: Flag indication if Git LFS is enabled for that project
                override_params[visibility]:
                  type: string
                  description: The visibility of the project.
                  enum:
                    - private
                    - internal
                    - public
                override_params[public_builds]:
                  type: boolean
                  description: 'Deprecated: Use public_jobs instead.'
                override_params[public_jobs]:
                  type: boolean
                  description: Perform public builds
                override_params[request_access_enabled]:
                  type: boolean
                  description: Allow users to request member access
                override_params[only_allow_merge_if_pipeline_succeeds]:
                  type: boolean
                  description: Only allow to merge if builds succeed
                override_params[allow_merge_on_skipped_pipeline]:
                  type: boolean
                  description: Allow to merge if pipeline is skipped
                override_params[only_allow_merge_if_all_discussions_are_resolved]:
                  type: boolean
                  description: Only allow to merge if all threads are resolved
                override_params[tag_list]:
                  type: array
                  description: 'Deprecated: Use :topics instead'
                  items:
                    type: string
                override_params[topics]:
                  type: array
                  description: The list of topics for a project
                  items:
                    type: string
                override_params[avatar]:
                  type: string
                  description: Avatar image for project
                  format: binary
                override_params[printing_merge_request_link_enabled]:
                  type: boolean
                  description: Show link to create/view merge request when pushing from the command line
                override_params[merge_method]:
                  type: string
                  description: The merge method used when merging merge requests
                  enum:
                    - ff
                    - rebase_merge
                    - merge
                override_params[suggestion_commit_message]:
                  type: string
                  description: The commit message used to apply merge request suggestions
                override_params[merge_commit_template]:
                  type: string
                  description: Template used to create merge commit message
                override_params[squash_commit_template]:
                  type: string
                  description: Template used to create squash commit message
                override_params[issue_branch_template]:
                  type: string
                  description: Template used to create a branch from an issue
                override_params[initialize_with_readme]:
                  type: boolean
                  description: Initialize a project with a README.md
                override_params[auto_devops_enabled]:
                  type: boolean
                  description: Flag indication if Auto DevOps is enabled
                override_params[auto_devops_deploy_strategy]:
                  type: string
                  description: Auto Deploy strategy
                  enum:
                    - continuous
                    - manual
                    - timed_incremental
                override_params[autoclose_referenced_issues]:
                  type: boolean
                  description: Flag indication if referenced issues auto-closing is enabled
                override_params[repository_storage]:
                  type: string
                  description: Which storage shard the repository is on. Available only to admins
                override_params[packages_enabled]:
                  type: boolean
                  description: Enable project packages feature
                override_params[squash_option]:
                  type: string
                  description: Squash default for project. One of `never`, `always`, `default_on`, or `default_off`.
                  enum:
                    - never
                    - always
                    - default_on
                    - default_off
                override_params[mr_default_target_self]:
                  type: boolean
                  description: Merge requests of this forked project targets itself by default
                override_params[only_allow_merge_if_all_status_checks_passed]:
                  type: boolean
                  description: Blocks merge requests from merging unless all status checks have passed
                override_params[approvals_before_merge]:
                  type: integer
                  description: How many approvers should approve merge request by default
                  format: int32
                override_params[mirror]:
                  type: boolean
                  description: Enables pull mirroring in a project
                override_params[mirror_trigger_builds]:
                  type: boolean
                  description: Pull mirroring triggers builds
                override_params[external_authorization_classification_label]:
                  type: string
                  description: The classification label for the project
                override_params[requirements_access_level]:
                  type: string
                  description: Requirements feature access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[prevent_merge_without_jira_issue]:
                  type: boolean
                  description: Require an associated issue from Jira
        required: true
      responses:
        "201":
          description: Create a new project import using a remote object storage path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectImportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/import-relation/authorize:
    post:
      tags:
        - project_import
      summary: Workhorse authorize the project relation import upload
      description: This feature was introduced in GitLab 16.11
      operationId: postApiV4ProjectsImportRelationAuthorize
      responses:
        "201":
          description: Workhorse authorize the project relation import upload
          content: {}
  /api/v4/projects/import-relation:
    post:
      tags:
        - project_import
      summary: Re-import a relation into a project
      description: This feature was introduced in GitLab 16.11.
      operationId: postApiV4ProjectsImportRelation
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - path
                - relation
              type: object
              properties:
                path:
                  type: string
                  description: The project path and name
                file:
                  type: string
                  description: The project export file from which to extract the relation.
                  format: binary
                relation:
                  type: string
                  description: The relation to import. Must be one of issues, merge_requests, ci_pipelines, or milestones.
                file.path:
                  type: string
                  description: Path to locally stored body (generated by Workhorse)
                file.name:
                  type: string
                  description: Real filename as sent in Content-Disposition (generated by Workhorse)
                file.type:
                  type: string
                  description: Real content type as send in Content-Type (generated by Workhorse)
                file.size:
                  type: integer
                  description: Real size of file (generated by Workhorse)
                  format: int32
                file.md5:
                  type: string
                  description: MD5 checksum of the file (generated by Workhorse)
                file.sha1:
                  type: string
                  description: SHA1 checksum of the file (generated by Workhorse)
                file.sha256:
                  type: string
                  description: SHA256 checksum of the file (generated by Workhorse)
                file.etag:
                  type: string
                  description: Etag of the file (generated by Workhorse)
                file.remote_id:
                  type: string
                  description: Remote_id of the file (generated by Workhorse)
                file.remote_url:
                  type: string
                  description: Remote_url of the file (generated by Workhorse)
        required: true
      responses:
        "201":
          description: Re-import a relation into a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_RelationImportTracker'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/{id}/relation-imports:
    get:
      tags:
        - project_import
      summary: Get the statuses of relation imports for specified project
      description: This feature was introduced in GitLab 16.11.
      operationId: getApiV4ProjectsIdRelationImports
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get the statuses of relation imports for specified project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectImportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/remote-import-s3:
    post:
      tags:
        - project_import
      summary: Create a new project import using a file from AWS S3
      description: This feature was introduced in GitLab 14.9.
      operationId: postApiV4ProjectsRemoteImportS3
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - access_key_id
                - bucket_name
                - file_key
                - path
                - region
                - secret_access_key
              type: object
              properties:
                region:
                  type: string
                  description: AWS region
                bucket_name:
                  type: string
                  description: Bucket name
                file_key:
                  type: string
                  description: File key
                access_key_id:
                  type: string
                  description: Access key id
                secret_access_key:
                  type: string
                  description: Secret access key
                path:
                  type: string
                  description: The new project path and name
                name:
                  type: string
                  description: The name of the project to be imported. Defaults to the path of the project if not provided.
                namespace:
                  type: string
                  description: The ID or name of the namespace that the project will be imported into. Defaults to the current user's namespace.
                overwrite:
                  type: boolean
                  description: If there is a project in the same namespace and with the same name overwrite it
                  default: false
                override_params[description]:
                  type: string
                  description: The description of the project
                override_params[build_git_strategy]:
                  type: string
                  description: The Git strategy. Defaults to `fetch`
                  enum:
                    - fetch
                    - clone
                override_params[build_timeout]:
                  type: integer
                  description: Build timeout
                  format: int32
                override_params[auto_cancel_pending_pipelines]:
                  type: string
                  description: Auto-cancel pending pipelines
                  enum:
                    - disabled
                    - enabled
                override_params[ci_config_path]:
                  type: string
                  description: The path to CI config file. Defaults to `.gitlab-ci.yml`
                override_params[service_desk_enabled]:
                  type: boolean
                  description: Disable or enable the service desk
                override_params[issues_enabled]:
                  type: boolean
                  description: Flag indication if the issue tracker is enabled
                override_params[merge_requests_enabled]:
                  type: boolean
                  description: Flag indication if merge requests are enabled
                override_params[wiki_enabled]:
                  type: boolean
                  description: Flag indication if the wiki is enabled
                override_params[jobs_enabled]:
                  type: boolean
                  description: Flag indication if jobs are enabled
                override_params[snippets_enabled]:
                  type: boolean
                  description: Flag indication if snippets are enabled
                override_params[issues_access_level]:
                  type: string
                  description: Issues access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[repository_access_level]:
                  type: string
                  description: Repository access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[merge_requests_access_level]:
                  type: string
                  description: Merge requests access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[forking_access_level]:
                  type: string
                  description: Forks access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[wiki_access_level]:
                  type: string
                  description: Wiki access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[builds_access_level]:
                  type: string
                  description: Builds access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[snippets_access_level]:
                  type: string
                  description: Snippets access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[pages_access_level]:
                  type: string
                  description: Pages access level. One of `disabled`, `private`, `enabled` or `public`
                  enum:
                    - disabled
                    - private
                    - enabled
                    - public
                override_params[analytics_access_level]:
                  type: string
                  description: Analytics access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[container_registry_access_level]:
                  type: string
                  description: Controls visibility of the container registry. One of `disabled`, `private` or `enabled`. `private` will make the container registry accessible only to project members (reporter role and above). `enabled` will make the container registry accessible to everyone who has access to the project. `disabled` will disable the container registry
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[security_and_compliance_access_level]:
                  type: string
                  description: Security and compliance access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[releases_access_level]:
                  type: string
                  description: Releases access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[environments_access_level]:
                  type: string
                  description: Environments access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[feature_flags_access_level]:
                  type: string
                  description: Feature flags access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[infrastructure_access_level]:
                  type: string
                  description: Infrastructure access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[monitor_access_level]:
                  type: string
                  description: Monitor access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[model_experiments_access_level]:
                  type: string
                  description: Model experiments access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[model_registry_access_level]:
                  type: string
                  description: Model registry access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[emails_disabled]:
                  type: boolean
                  description: 'Deprecated: Use emails_enabled instead.'
                override_params[emails_enabled]:
                  type: boolean
                  description: Enable email notifications
                override_params[show_default_award_emojis]:
                  type: boolean
                  description: Show default award emojis
                override_params[show_diff_preview_in_email]:
                  type: boolean
                  description: Include the code diff preview in merge request notification emails
                override_params[warn_about_potentially_unwanted_characters]:
                  type: boolean
                  description: Warn about potentially unwanted characters
                override_params[enforce_auth_checks_on_uploads]:
                  type: boolean
                  description: Enforce auth check on uploads
                override_params[shared_runners_enabled]:
                  type: boolean
                  description: Flag indication if shared runners are enabled for that project
                override_params[group_runners_enabled]:
                  type: boolean
                  description: Flag indication if group runners are enabled for that project
                override_params[resolve_outdated_diff_discussions]:
                  type: boolean
                  description: Automatically resolve merge request diff threads on lines changed with a push
                override_params[remove_source_branch_after_merge]:
                  type: boolean
                  description: Remove the source branch by default after merge
                override_params[container_registry_enabled]:
                  type: boolean
                  description: 'Deprecated: Use :container_registry_access_level instead. Flag indication if the container registry is enabled for that project'
                override_params[container_expiration_policy_attributes][cadence]:
                  type: string
                  description: Container expiration policy cadence for recurring job
                override_params[container_expiration_policy_attributes][keep_n]:
                  type: integer
                  description: Container expiration policy number of images to keep
                  format: int32
                override_params[container_expiration_policy_attributes][older_than]:
                  type: string
                  description: Container expiration policy remove images older than value
                override_params[container_expiration_policy_attributes][name_regex]:
                  type: string
                  description: Container expiration policy regex for image removal
                override_params[container_expiration_policy_attributes][name_regex_keep]:
                  type: string
                  description: Container expiration policy regex for image retention
                override_params[container_expiration_policy_attributes][enabled]:
                  type: boolean
                  description: Flag indication if container expiration policy is enabled
                override_params[lfs_enabled]:
                  type: boolean
                  description: Flag indication if Git LFS is enabled for that project
                override_params[visibility]:
                  type: string
                  description: The visibility of the project.
                  enum:
                    - private
                    - internal
                    - public
                override_params[public_builds]:
                  type: boolean
                  description: 'Deprecated: Use public_jobs instead.'
                override_params[public_jobs]:
                  type: boolean
                  description: Perform public builds
                override_params[request_access_enabled]:
                  type: boolean
                  description: Allow users to request member access
                override_params[only_allow_merge_if_pipeline_succeeds]:
                  type: boolean
                  description: Only allow to merge if builds succeed
                override_params[allow_merge_on_skipped_pipeline]:
                  type: boolean
                  description: Allow to merge if pipeline is skipped
                override_params[only_allow_merge_if_all_discussions_are_resolved]:
                  type: boolean
                  description: Only allow to merge if all threads are resolved
                override_params[tag_list]:
                  type: array
                  description: 'Deprecated: Use :topics instead'
                  items:
                    type: string
                override_params[topics]:
                  type: array
                  description: The list of topics for a project
                  items:
                    type: string
                override_params[avatar]:
                  type: string
                  description: Avatar image for project
                  format: binary
                override_params[printing_merge_request_link_enabled]:
                  type: boolean
                  description: Show link to create/view merge request when pushing from the command line
                override_params[merge_method]:
                  type: string
                  description: The merge method used when merging merge requests
                  enum:
                    - ff
                    - rebase_merge
                    - merge
                override_params[suggestion_commit_message]:
                  type: string
                  description: The commit message used to apply merge request suggestions
                override_params[merge_commit_template]:
                  type: string
                  description: Template used to create merge commit message
                override_params[squash_commit_template]:
                  type: string
                  description: Template used to create squash commit message
                override_params[issue_branch_template]:
                  type: string
                  description: Template used to create a branch from an issue
                override_params[initialize_with_readme]:
                  type: boolean
                  description: Initialize a project with a README.md
                override_params[auto_devops_enabled]:
                  type: boolean
                  description: Flag indication if Auto DevOps is enabled
                override_params[auto_devops_deploy_strategy]:
                  type: string
                  description: Auto Deploy strategy
                  enum:
                    - continuous
                    - manual
                    - timed_incremental
                override_params[autoclose_referenced_issues]:
                  type: boolean
                  description: Flag indication if referenced issues auto-closing is enabled
                override_params[repository_storage]:
                  type: string
                  description: Which storage shard the repository is on. Available only to admins
                override_params[packages_enabled]:
                  type: boolean
                  description: Enable project packages feature
                override_params[squash_option]:
                  type: string
                  description: Squash default for project. One of `never`, `always`, `default_on`, or `default_off`.
                  enum:
                    - never
                    - always
                    - default_on
                    - default_off
                override_params[mr_default_target_self]:
                  type: boolean
                  description: Merge requests of this forked project targets itself by default
                override_params[only_allow_merge_if_all_status_checks_passed]:
                  type: boolean
                  description: Blocks merge requests from merging unless all status checks have passed
                override_params[approvals_before_merge]:
                  type: integer
                  description: How many approvers should approve merge request by default
                  format: int32
                override_params[mirror]:
                  type: boolean
                  description: Enables pull mirroring in a project
                override_params[mirror_trigger_builds]:
                  type: boolean
                  description: Pull mirroring triggers builds
                override_params[external_authorization_classification_label]:
                  type: string
                  description: The classification label for the project
                override_params[requirements_access_level]:
                  type: string
                  description: Requirements feature access level. One of `disabled`, `private` or `enabled`
                  enum:
                    - disabled
                    - private
                    - enabled
                override_params[prevent_merge_without_jira_issue]:
                  type: boolean
                  description: Require an associated issue from Jira
        required: true
      responses:
        "201":
          description: Create a new project import using a file from AWS S3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectImportStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/projects/{id}/job_token_scope:
    get:
      tags:
        - projects_job_token_scope
      description: Fetch CI_JOB_TOKEN access settings.
      operationId: getApiV4ProjectsIdJobTokenScope
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Fetch CI_JOB_TOKEN access settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectJobTokenScope'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    patch:
      tags:
        - projects_job_token_scope
      description: Patch CI_JOB_TOKEN access settings.
      operationId: patchApiV4ProjectsIdJobTokenScope
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiV4ProjectsIdJobTokenScope'
        required: true
      responses:
        "204":
          description: Patch CI_JOB_TOKEN access settings.
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: patchApiV4ProjectsIdJobTokenScope
  /api/v4/projects/{id}/job_token_scope/allowlist:
    get:
      tags:
        - projects_job_token_scope
      description: Fetch project inbound allowlist for CI_JOB_TOKEN access settings.
      operationId: getApiV4ProjectsIdJobTokenScopeAllowlist
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Fetch project inbound allowlist for CI_JOB_TOKEN access settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - projects_job_token_scope
      description: Add target project to allowlist.
      operationId: postApiV4ProjectsIdJobTokenScopeAllowlist
      parameters:
        - name: id
          in: path
          description: ID of user project
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdJobTokenScopeAllowlist'
        required: true
      responses:
        "201":
          description: Add target project to allowlist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdJobTokenScopeAllowlist
  /api/v4/projects/{id}/job_token_scope/groups_allowlist:
    get:
      tags:
        - projects_job_token_scope
      description: Fetch project groups allowlist for CI_JOB_TOKEN access settings.
      operationId: getApiV4ProjectsIdJobTokenScopeGroupsAllowlist
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Fetch project groups allowlist for CI_JOB_TOKEN access settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - projects_job_token_scope
      description: Add target group to allowlist.
      operationId: postApiV4ProjectsIdJobTokenScopeGroupsAllowlist
      parameters:
        - name: id
          in: path
          description: ID of user project
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdJobTokenScopeGroupsAllowlist'
        required: true
      responses:
        "201":
          description: Add target group to allowlist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicGroupDetails'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdJobTokenScopeGroupsAllowlist
  /api/v4/projects/{id}/job_token_scope/groups_allowlist/{target_group_id}:
    delete:
      tags:
        - projects_job_token_scope
      description: Delete target group from allowlist.
      operationId: deleteApiV4ProjectsIdJobTokenScopeGroupsAllowlistTargetGroupId
      parameters:
        - name: id
          in: path
          description: ID of user project
          required: true
          schema:
            type: integer
            format: int32
        - name: target_group_id
          in: path
          description: ID of the group to be removed from the allowlist
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete target group from allowlist.
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/job_token_scope/allowlist/{target_project_id}:
    delete:
      tags:
        - projects_job_token_scope
      description: Delete project from allowlist.
      operationId: deleteApiV4ProjectsIdJobTokenScopeAllowlistTargetProjectId
      parameters:
        - name: id
          in: path
          description: ID of user project
          required: true
          schema:
            type: integer
            format: int32
        - name: target_project_id
          in: path
          description: ID of the project to be removed from the allowlist
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete project from allowlist.
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/packages:
    get:
      tags:
        - project_packages
      summary: Get a list of project packages
      description: This feature was introduced in GitLab 11.8
      operationId: getApiV4ProjectsIdPackages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: order_by
          in: query
          description: Return packages ordered by `created_at`, `name`, `version` or `type` fields.
          schema:
            type: string
            default: created_at
            enum:
              - created_at
              - name
              - version
              - type
        - name: sort
          in: query
          description: Return packages sorted in `asc` or `desc` order.
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: package_type
          in: query
          description: Return packages of a certain type
          schema:
            type: string
            enum:
              - maven
              - npm
              - conan
              - nuget
              - pypi
              - composer
              - generic
              - golang
              - debian
              - rubygems
              - helm
              - terraform_module
              - rpm
              - ml_model
        - name: package_name
          in: query
          description: Return packages with this name
          schema:
            type: string
        - name: package_version
          in: query
          description: Return packages with this version
          schema:
            type: string
        - name: include_versionless
          in: query
          description: Returns packages without a version
          schema:
            type: boolean
        - name: status
          in: query
          description: Return packages with specified status
          schema:
            type: string
            enum:
              - default
              - hidden
              - processing
              - error
              - pending_destruction
      responses:
        "200":
          description: Get a list of project packages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Package'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Project Not Found
          content: {}
  /api/v4/projects/{id}/packages/{package_id}:
    get:
      tags:
        - project_packages
      summary: Get a single project package
      description: This feature was introduced in GitLab 11.9
      operationId: getApiV4ProjectsIdPackagesPackageId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: The ID of a package
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single project package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Package'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    delete:
      tags:
        - project_packages
      summary: Delete a project package
      description: This feature was introduced in GitLab 11.9
      operationId: deleteApiV4ProjectsIdPackagesPackageId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: The ID of a package
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a project package
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/{package_id}/pipelines:
    get:
      tags:
        - project_packages
      summary: Get the pipelines for a single project package
      description: This feature was introduced in GitLab 16.1
      operationId: getApiV4ProjectsIdPackagesPackageIdPipelines
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            maximum: 20
            minimum: 1
            type: integer
            format: int32
            default: 20
        - name: package_id
          in: path
          description: The ID of a package
          required: true
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: Cursor for obtaining the next set of records
          schema:
            type: string
      responses:
        "200":
          description: Get the pipelines for a single project package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Package_Pipeline'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/repository_storage_moves:
    get:
      tags:
        - projects
      summary: Get a list of all project repository storage moves
      description: This feature was introduced in GitLab 13.1.
      operationId: getApiV4ProjectsIdRepositoryStorageMoves
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of all project repository storage moves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Projects_RepositoryStorageMove'
    post:
      tags:
        - projects
      summary: Schedule a project repository storage move
      description: This feature was introduced in GitLab 13.1.
      operationId: postApiV4ProjectsIdRepositoryStorageMoves
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryStorageMoves'
        required: true
      responses:
        "201":
          description: Schedule a project repository storage move
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_RepositoryStorageMove'
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryStorageMoves
  /api/v4/projects/{id}/repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
        - projects
      summary: Get a project repository storage move
      description: This feature was introduced in GitLab 13.1.
      operationId: getApiV4ProjectsIdRepositoryStorageMovesRepositoryStorageMoveId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: repository_storage_move_id
          in: path
          description: The ID of a project repository storage move
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a project repository storage move
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_RepositoryStorageMove'
  /api/v4/projects/{id}/snippets:
    get:
      tags:
        - project_snippets
      description: Get all project snippets
      operationId: getApiV4ProjectsIdSnippets
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all project snippets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ProjectSnippet'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - project_snippets
      description: Create a new project snippet
      operationId: postApiV4ProjectsIdSnippets
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdSnippets'
        required: true
      responses:
        "201":
          description: Create a new project snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectSnippet'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdSnippets
  /api/v4/projects/{id}/snippets/{snippet_id}:
    get:
      tags:
        - project_snippets
      description: Get a single project snippet
      operationId: getApiV4ProjectsIdSnippetsSnippetId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single project snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectSnippet'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - project_snippets
      description: Update an existing project snippet
      operationId: putApiV4ProjectsIdSnippetsSnippetId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdSnippetsSnippetId'
        required: true
      responses:
        "200":
          description: Update an existing project snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectSnippet'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdSnippetsSnippetId
    delete:
      tags:
        - project_snippets
      description: Delete a project snippet
      operationId: deleteApiV4ProjectsIdSnippetsSnippetId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a project snippet
          content: {}
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/snippets/{snippet_id}/raw:
    get:
      tags:
        - project_snippets
      description: Get a raw project snippet
      operationId: getApiV4ProjectsIdSnippetsSnippetIdRaw
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a raw project snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectSnippet'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw:
    get:
      tags:
        - project_snippets
      description: Get raw project snippet file contents from the repository
      operationId: getApiV4ProjectsIdSnippetsSnippetIdFilesRefFilePathRaw
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: The url encoded path to the file, e.g. lib%2Fclass%2Erb
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: The name of branch, tag or commit
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get raw project snippet file contents from the repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectSnippet'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/snippets/{snippet_id}/user_agent_detail:
    get:
      tags:
        - project_snippets
      description: Get the user agent details for a project snippet
      operationId: getApiV4ProjectsIdSnippetsSnippetIdUserAgentDetail
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get the user agent details for a project snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserAgentDetail'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/snapshot:
    get:
      tags:
        - projects
      summary: Download a (possibly inconsistent) snapshot of a repository
      description: This feature was introduced in GitLab 10.7
      operationId: getApiV4ProjectsIdSnapshot
      parameters:
        - name: wiki
          in: query
          description: Set to true to receive the wiki repository
          schema:
            type: boolean
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Download a (possibly inconsistent) snapshot of a repository
          content:
            application/x-tar:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content: {}
  /api/v4/projects/{id}/statistics:
    get:
      tags:
        - projects
      description: Get the list of project fetch statistics for the last 30 days
      operationId: getApiV4ProjectsIdStatistics
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get the list of project fetch statistics for the last 30 days
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectDailyStatistics'
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
  /api/v4/projects/{id}/templates/{type}:
    get:
      tags:
        - projects
      summary: Get a list of templates available to this project
      description: This endpoint was introduced in GitLab 11.4
      operationId: getApiV4ProjectsIdTemplatesType
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: The type (dockerfiles|gitignores|gitlab_ci_ymls|licenses|issues|merge_requests) of the template
          required: true
          schema:
            type: string
            enum:
              - dockerfiles
              - gitignores
              - gitlab_ci_ymls
              - licenses
              - issues
              - merge_requests
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of templates available to this project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_TemplatesList'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/templates/{type}/{name}:
    get:
      tags:
        - projects
      summary: Download a template available to this project
      description: This endpoint was introduced in GitLab 11.4
      operationId: getApiV4ProjectsIdTemplatesTypeName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: The type (dockerfiles|gitignores|gitlab_ci_ymls|licenses|issues|merge_requests) of the template
          required: true
          schema:
            type: string
            enum:
              - dockerfiles
              - gitignores
              - gitlab_ci_ymls
              - licenses
              - issues
              - merge_requests
        - name: name
          in: path
          description: The key of the template, as obtained from the collection endpoint.
          required: true
          schema:
            type: string
        - name: source_template_project_id
          in: query
          description: The project id where a given template is being stored. This is useful when multiple templates from different projects have the same name
          schema:
            type: integer
            format: int32
        - name: project
          in: query
          description: The project name to use when expanding placeholders in the template. Only affects licenses
          schema:
            type: string
        - name: fullname
          in: query
          description: The full name of the copyright holder to use when expanding placeholders in the template. Only affects licenses
          schema:
            type: string
      responses:
        "200":
          description: Download a template available to this project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_License'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/custom_attributes:
    get:
      tags:
        - projects
      description: Get all custom attributes on a project
      operationId: getApiV4ProjectsIdCustomAttributes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get all custom attributes on a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CustomAttribute'
  /api/v4/projects/{id}/custom_attributes/{key}:
    get:
      tags:
        - projects
      description: Get a custom attribute on a project
      operationId: getApiV4ProjectsIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a custom attribute on a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CustomAttribute'
    put:
      tags:
        - projects
      description: Set a custom attribute on a project
      operationId: putApiV4ProjectsIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdCustomAttributesKey'
        required: true
      responses:
        "200":
          description: Set a custom attribute on a project
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdCustomAttributesKey
    delete:
      tags:
        - projects
      description: Delete a custom attribute on a project
      operationId: deleteApiV4ProjectsIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a custom attribute on a project
          content: {}
  /api/v4/projects:
    get:
      tags:
        - projects
      description: Get a list of visible projects for authenticated user
      operationId: getApiV4Projects
      parameters:
        - name: order_by
          in: query
          description: Return projects ordered by field. storage_size, repository_size, wiki_size, packages_size are only available to admins. Similarity is available when searching and is limited to projects the user has access to.
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - similarity
              - storage_size
              - repository_size
              - wiki_size
              - packages_size
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: archived
          in: query
          description: Limit by archived status
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Return list of projects matching the search criteria
          schema:
            type: string
        - name: search_namespaces
          in: query
          description: Include ancestor namespaces when matching search criteria
          schema:
            type: boolean
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: starred
          in: query
          description: Limit by starred status
          schema:
            type: boolean
            default: false
        - name: imported
          in: query
          description: Limit by imported by authenticated user
          schema:
            type: boolean
            default: false
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of
          schema:
            type: boolean
            default: false
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature
          schema:
            type: boolean
            default: false
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature
          schema:
            type: boolean
            default: false
        - name: with_programming_language
          in: query
          description: Limit to repositories which use the given programming language
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: id_after
          in: query
          description: Limit results to projects with IDs greater than the specified ID
          schema:
            type: integer
            format: int32
        - name: id_before
          in: query
          description: Limit results to projects with IDs less than the specified ID
          schema:
            type: integer
            format: int32
        - name: last_activity_after
          in: query
          description: 'Limit results to projects with last_activity after specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: last_activity_before
          in: query
          description: 'Limit results to projects with last_activity before specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: repository_storage
          in: query
          description: Which storage shard the repository is on. Available only to admins
          schema:
            type: string
        - name: topic
          in: query
          description: Comma-separated list of topics. Limit results to projects having all topics
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: topic_id
          in: query
          description: Limit results to projects with the assigned topic given by the topic ID
          schema:
            type: integer
            format: int32
        - name: updated_before
          in: query
          description: 'Return projects updated before the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: 'Return projects updated after the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: include_pending_delete
          in: query
          description: Include projects in pending delete state. Can only be set by admins
          schema:
            type: boolean
        - name: wiki_checksum_failed
          in: query
          description: Limit by projects where wiki checksum is failed
          schema:
            type: boolean
            default: false
        - name: repository_checksum_failed
          in: query
          description: Limit by projects where repository checksum is failed
          schema:
            type: boolean
            default: false
        - name: include_hidden
          in: query
          description: Include hidden projects. Can only be set by admins
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a list of visible projects for authenticated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "400":
          description: Bad request
          content: {}
    post:
      tags:
        - projects
      description: Create new project
      operationId: postApiV4Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Projects'
        required: true
      responses:
        "201":
          description: Create new project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "400":
          description: Bad request
          content: {}
      x-codegen-request-body-name: postApiV4Projects
  /api/v4/projects/user/{user_id}:
    post:
      tags:
        - projects
      description: Create new project for a specified user. Only available to admin users.
      operationId: postApiV4ProjectsUserUserId
      parameters:
        - name: user_id
          in: path
          description: The ID of a user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsUserUserId'
        required: true
      responses:
        "201":
          description: Create new project for a specified user. Only available to admin users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "400":
          description: Bad request
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsUserUserId
  /api/v4/projects/{id}/share_locations:
    get:
      tags:
        - projects
      description: Returns group that can be shared with the given project
      operationId: getApiV4ProjectsIdShareLocations
      parameters:
        - name: id
          in: path
          description: The id of the project
          required: true
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Return list of groups matching the search criteria
          schema:
            type: string
      responses:
        "200":
          description: Returns group that can be shared with the given project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Group'
  /api/v4/projects/{id}:
    get:
      tags:
        - projects
      description: Get a single project
      operationId: getApiV4ProjectsId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
        - name: license
          in: query
          description: Include project license data
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a single project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectWithAccess'
    put:
      tags:
        - projects
      description: Update an existing project
      operationId: putApiV4ProjectsId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsId'
        required: true
      responses:
        "200":
          description: Update an existing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Unauthenticated
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsId
    delete:
      tags:
        - projects
      description: Delete a project
      operationId: deleteApiV4ProjectsId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Delete a project
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/fork:
    post:
      tags:
        - projects
      description: Fork new project for the current user or provided namespace.
      operationId: postApiV4ProjectsIdFork
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdFork'
        required: true
      responses:
        "201":
          description: Fork new project for the current user or provided namespace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdFork
    delete:
      tags:
        - projects
      description: Remove a forked_from relationship
      operationId: deleteApiV4ProjectsIdFork
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Remove a forked_from relationship
          content: {}
        "304":
          description: Not modified
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/forks:
    get:
      tags:
        - projects
      description: List forks of this project
      operationId: getApiV4ProjectsIdForks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: Return projects ordered by field. storage_size, repository_size, wiki_size, packages_size are only available to admins. Similarity is available when searching and is limited to projects the user has access to.
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - similarity
              - storage_size
              - repository_size
              - wiki_size
              - packages_size
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: archived
          in: query
          description: Limit by archived status
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Return list of projects matching the search criteria
          schema:
            type: string
        - name: search_namespaces
          in: query
          description: Include ancestor namespaces when matching search criteria
          schema:
            type: boolean
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: starred
          in: query
          description: Limit by starred status
          schema:
            type: boolean
            default: false
        - name: imported
          in: query
          description: Limit by imported by authenticated user
          schema:
            type: boolean
            default: false
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of
          schema:
            type: boolean
            default: false
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature
          schema:
            type: boolean
            default: false
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature
          schema:
            type: boolean
            default: false
        - name: with_programming_language
          in: query
          description: Limit to repositories which use the given programming language
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: id_after
          in: query
          description: Limit results to projects with IDs greater than the specified ID
          schema:
            type: integer
            format: int32
        - name: id_before
          in: query
          description: Limit results to projects with IDs less than the specified ID
          schema:
            type: integer
            format: int32
        - name: last_activity_after
          in: query
          description: 'Limit results to projects with last_activity after specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: last_activity_before
          in: query
          description: 'Limit results to projects with last_activity before specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: repository_storage
          in: query
          description: Which storage shard the repository is on. Available only to admins
          schema:
            type: string
        - name: topic
          in: query
          description: Comma-separated list of topics. Limit results to projects having all topics
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: topic_id
          in: query
          description: Limit results to projects with the assigned topic given by the topic ID
          schema:
            type: integer
            format: int32
        - name: updated_before
          in: query
          description: 'Return projects updated before the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: 'Return projects updated after the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: include_pending_delete
          in: query
          description: Include projects in pending delete state. Can only be set by admins
          schema:
            type: boolean
        - name: wiki_checksum_failed
          in: query
          description: Limit by projects where wiki checksum is failed
          schema:
            type: boolean
            default: false
        - name: repository_checksum_failed
          in: query
          description: Limit by projects where repository checksum is failed
          schema:
            type: boolean
            default: false
        - name: include_hidden
          in: query
          description: Include hidden projects. Can only be set by admins
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: List forks of this project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Project'
  /api/v4/projects/{id}/pages_access:
    get:
      tags:
        - projects
      description: Check pages access of this project
      operationId: getApiV4ProjectsIdPagesAccess
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Check pages access of this project
          content: {}
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/archive:
    post:
      tags:
        - projects
      description: Archive a project
      operationId: postApiV4ProjectsIdArchive
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Archive a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/unarchive:
    post:
      tags:
        - projects
      description: Unarchive a project
      operationId: postApiV4ProjectsIdUnarchive
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Unarchive a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/star:
    post:
      tags:
        - projects
      description: Star a project
      operationId: postApiV4ProjectsIdStar
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Star a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "304":
          description: Not modified
          content: {}
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/unstar:
    post:
      tags:
        - projects
      description: Unstar a project
      operationId: postApiV4ProjectsIdUnstar
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Unstar a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "304":
          description: Not modified
          content: {}
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/starrers:
    get:
      tags:
        - projects
      description: Get the users who starred a project
      operationId: getApiV4ProjectsIdStarrers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return list of users matching the search criteria
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the users who starred a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_UserBasic'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/languages:
    get:
      tags:
        - projects
      description: Get languages in project repository
      operationId: getApiV4ProjectsIdLanguages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get languages in project repository
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/fork/{forked_from_id}:
    post:
      tags:
        - projects
      description: Mark this project as forked from another
      operationId: postApiV4ProjectsIdForkForkedFromId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: forked_from_id
          in: path
          description: The ID of the project it was forked from
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Mark this project as forked from another
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/share:
    post:
      tags:
        - projects
      description: Share the project with a group
      operationId: postApiV4ProjectsIdShare
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdShare'
        required: true
      responses:
        "201":
          description: Share the project with a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectGroupLink'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdShare
  /api/v4/projects/{id}/share/{group_id}:
    delete:
      tags:
        - projects
      description: Remove a group share
      operationId: deleteApiV4ProjectsIdShareGroupId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: The ID of the group
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Remove a group share
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/import_project_members/{project_id}:
    post:
      tags:
        - projects
      summary: Import members from another project
      description: This feature was introduced in GitLab 14.2
      operationId: postApiV4ProjectsIdImportProjectMembersProjectId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: The ID of the source project to import the members from.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Import members from another project
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Project Not Found
          content: {}
        "422":
          description: Import failed
          content: {}
  /api/v4/projects/{id}/uploads/authorize:
    post:
      tags:
        - projects
      summary: Workhorse authorize the file upload
      description: This feature was introduced in GitLab 13.11
      operationId: postApiV4ProjectsIdUploadsAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workhorse authorize the file upload
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/uploads:
    post:
      tags:
        - projects
      description: Upload a file
      operationId: postApiV4ProjectsIdUploads
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdUploads'
        required: true
      responses:
        "201":
          description: Upload a file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectUpload'
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdUploads
  /api/v4/projects/{id}/users:
    get:
      tags:
        - projects
      description: Get the users list of a project
      operationId: getApiV4ProjectsIdUsers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return list of users matching the search criteria
          schema:
            type: string
        - name: skip_users
          in: query
          description: Filter out users with the specified IDs
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the users list of a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_UserBasic'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/groups:
    get:
      tags:
        - projects
      description: Get ancestor and shared groups for a project
      operationId: getApiV4ProjectsIdGroups
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return list of groups matching the search criteria
          schema:
            type: string
        - name: skip_groups
          in: query
          description: Array of group ids to exclude from list
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: with_shared
          in: query
          description: Include shared groups
          schema:
            type: boolean
            default: false
        - name: shared_visible_only
          in: query
          description: Limit to shared groups user has access to
          schema:
            type: boolean
            default: false
        - name: shared_min_access_level
          in: query
          description: Limit returned shared groups by minimum access level to the project
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get ancestor and shared groups for a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_PublicGroupDetails'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/housekeeping:
    post:
      tags:
        - projects
      summary: Start the housekeeping task for a project
      description: This feature was introduced in GitLab 9.0.
      operationId: postApiV4ProjectsIdHousekeeping
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdHousekeeping'
        required: true
      responses:
        "201":
          description: Start the housekeeping task for a project
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "409":
          description: Conflict
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdHousekeeping
  /api/v4/projects/{id}/repository_size:
    post:
      tags:
        - projects
      summary: Start a task to recalculate repository size for a project
      description: This feature was introduced in GitLab 15.0.
      operationId: postApiV4ProjectsIdRepositorySize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Start a task to recalculate repository size for a project
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/transfer:
    put:
      tags:
        - projects
      description: Transfer a project to a new namespace
      operationId: putApiV4ProjectsIdTransfer
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdTransfer'
        required: true
      responses:
        "200":
          description: Transfer a project to a new namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdTransfer
  /api/v4/projects/{id}/transfer_locations:
    get:
      tags:
        - projects
      description: Get the namespaces to where the project can be transferred
      operationId: getApiV4ProjectsIdTransferLocations
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return list of namespaces matching the search criteria
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the namespaces to where the project can be transferred
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_PublicGroupDetails'
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/storage:
    get:
      tags:
        - projects
      description: Show the storage information
      operationId: getApiV4ProjectsIdStorage
      parameters:
        - name: id
          in: path
          description: ID of a project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Show the storage information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProjectRepositoryStorage'
        "403":
          description: Unauthenticated
          content: {}
  /api/v4/projects/{id}/restore:
    post:
      tags:
        - projects
      description: Restore a project
      operationId: postApiV4ProjectsIdRestore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Restore a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Project'
  /api/v4/projects/{id}/protected_branches:
    get:
      tags:
        - projects
      description: Get a project's protected branches
      operationId: getApiV4ProjectsIdProtectedBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: search
          in: query
          description: Search for a protected branch by name
          schema:
            type: string
      responses:
        "200":
          description: Get a project's protected branches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ProtectedBranch'
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
    post:
      tags:
        - projects
      description: Protect a single branch
      operationId: postApiV4ProjectsIdProtectedBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdProtectedBranches'
        required: true
      responses:
        "201":
          description: Protect a single branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProtectedBranch'
        "422":
          description: name is missing
          content: {}
        "409":
          description: Protected branch 'main' already exists
          content: {}
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdProtectedBranches
  /api/v4/projects/{id}/protected_branches/{name}:
    get:
      tags:
        - projects
      description: Get a single protected branch
      operationId: getApiV4ProjectsIdProtectedBranchesName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the branch or wildcard
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a single protected branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProtectedBranch'
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
    delete:
      tags:
        - projects
      description: Unprotect a single branch
      operationId: deleteApiV4ProjectsIdProtectedBranchesName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the protected branch
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Unprotect a single branch
          content: {}
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
    patch:
      tags:
        - projects
      description: Update a protected branch
      operationId: patchApiV4ProjectsIdProtectedBranchesName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiV4ProjectsIdProtectedBranchesName'
        required: true
      responses:
        "200":
          description: Update a protected branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProtectedBranch'
        "422":
          description: Push access levels access level has already been taken
          content: {}
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
        "400":
          description: 400 Bad request
          content: {}
      x-codegen-request-body-name: patchApiV4ProjectsIdProtectedBranchesName
  /api/v4/projects/{id}/protected_tags:
    get:
      tags:
        - protected_tags
      summary: Get a project's protected tags
      description: This feature was introduced in GitLab 11.3.
      operationId: getApiV4ProjectsIdProtectedTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a project's protected tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ProtectedTag'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - protected_tags
      summary: Protect a single tag or wildcard
      description: This feature was introduced in GitLab 11.3.
      operationId: postApiV4ProjectsIdProtectedTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdProtectedTags'
        required: true
      responses:
        "201":
          description: Protect a single tag or wildcard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProtectedTag'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdProtectedTags
  /api/v4/projects/{id}/protected_tags/{name}:
    get:
      tags:
        - protected_tags
      summary: Get a single protected tag
      description: This feature was introduced in GitLab 11.3.
      operationId: getApiV4ProjectsIdProtectedTagsName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the tag or wildcard
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a single protected tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ProtectedTag'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - protected_tags
      summary: Unprotect a single tag
      description: This feature was introduced in GitLab 11.3.
      operationId: deleteApiV4ProjectsIdProtectedTagsName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the protected tag
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Unprotect a single tag
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "412":
          description: Precondition Failed
          content: {}
  /api/v4/projects/{id}/releases:
    get:
      tags:
        - releases
      summary: List Releases
      description: Returns a paginated list of releases. This feature was introduced in GitLab 11.7.
      operationId: getApiV4ProjectsIdReleases
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: order_by
          in: query
          description: The field to use as order. Either `released_at` (default) or `created_at`
          schema:
            type: string
            default: released_at
            enum:
              - released_at
              - created_at
        - name: sort
          in: query
          description: The direction of the order. Either `desc` (default) for descending order or `asc` for ascending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: include_html_description
          in: query
          description: If `true`, a response includes HTML rendered markdown of the release description
          schema:
            type: boolean
        - name: updated_before
          in: query
          description: 'Return releases updated before the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: 'Return releases updated after the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: List Releases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Release'
    post:
      tags:
        - releases
      summary: Create a release
      description: Creates a release. Developer level access to the project is required to create a release. This feature was introduced in GitLab 11.7.
      operationId: postApiV4ProjectsIdReleases
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdReleases'
        required: true
      responses:
        "201":
          description: Create a release
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Release'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdReleases
  /api/v4/projects/{id}/releases/{tag_name}:
    get:
      tags:
        - releases
      summary: Get a release by a tag name
      description: Gets a release for the given tag. This feature was introduced in GitLab 11.7.
      operationId: getApiV4ProjectsIdReleasesTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with
          required: true
          schema:
            type: string
        - name: include_html_description
          in: query
          description: If `true`, a response includes HTML rendered markdown of the release description
          schema:
            type: boolean
      responses:
        "200":
          description: Get a release by a tag name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Release'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - releases
      summary: Update a release
      description: Updates a release. Developer level access to the project is required to update a release. This feature was introduced in GitLab 11.7.
      operationId: putApiV4ProjectsIdReleasesTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdReleasesTagName'
        required: true
      responses:
        "200":
          description: Update a release
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Release'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdReleasesTagName
    delete:
      tags:
        - releases
      summary: Delete a release
      description: Delete a release. Deleting a release doesn't delete the associated tag. Maintainer level access to the project is required to delete a release. This feature was introduced in GitLab 11.7.
      operationId: deleteApiV4ProjectsIdReleasesTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad request
          content: {}
        "204":
          description: Delete a release
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Release'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/releases/{tag_name}/downloads/*direct_asset_path:
    get:
      tags:
        - releases
      summary: Download a project release asset file
      description: This feature was introduced in GitLab 15.4.
      operationId: getApiV4ProjectsIdReleasesTagNameDownloads*directAssetPath
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with
          required: true
          schema:
            type: string
        - name: direct_asset_path
          in: query
          description: The path to the file to download, as specified when creating the release asset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download a project release asset file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/releases/permalink/latest(/)(*suffix_path):
    get:
      tags:
        - releases
      summary: Get the latest project release
      description: This feature was introduced in GitLab 15.4.
      operationId: getApiV4ProjectsIdReleasesPermalinkLatest()(*suffixPath)
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: suffix_path
          in: query
          description: The path to be suffixed to the latest release
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get the latest project release
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/releases/{tag_name}/evidence:
    post:
      tags:
        - releases
      summary: Collect release evidence
      description: Creates an evidence for an existing Release. This feature was introduced in GitLab 12.10.
      operationId: postApiV4ProjectsIdReleasesTagNameEvidence
      parameters:
        - name: tag_name
          in: path
          description: The Git tag the release is associated with
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Collect release evidence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Release'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/remote_mirrors:
    get:
      tags:
        - remote_mirrors
      description: List the project's remote mirrors
      operationId: getApiV4ProjectsIdRemoteMirrors
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List the project's remote mirrors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_RemoteMirror'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - remote_mirrors
      description: Create remote mirror for a project
      operationId: postApiV4ProjectsIdRemoteMirrors
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRemoteMirrors'
        required: true
      responses:
        "201":
          description: Create remote mirror for a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_RemoteMirror'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRemoteMirrors
  /api/v4/projects/{id}/remote_mirrors/{mirror_id}:
    get:
      tags:
        - remote_mirrors
      description: Get a single remote mirror
      operationId: getApiV4ProjectsIdRemoteMirrorsMirrorId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: mirror_id
          in: path
          description: The ID of a remote mirror
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a single remote mirror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_RemoteMirror'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - remote_mirrors
      description: Update the attributes of a single remote mirror
      operationId: putApiV4ProjectsIdRemoteMirrorsMirrorId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: mirror_id
          in: path
          description: The ID of a remote mirror
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdRemoteMirrorsMirrorId'
        required: true
      responses:
        "200":
          description: Update the attributes of a single remote mirror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_RemoteMirror'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdRemoteMirrorsMirrorId
    delete:
      tags:
        - remote_mirrors
      summary: Delete a single remote mirror
      description: This feature was introduced in GitLab 14.10
      operationId: deleteApiV4ProjectsIdRemoteMirrorsMirrorId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: mirror_id
          in: path
          description: The ID of a remote mirror
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a single remote mirror
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/remote_mirrors/{mirror_id}/sync:
    post:
      tags:
        - remote_mirrors
      description: Triggers a push mirror operation
      operationId: postApiV4ProjectsIdRemoteMirrorsMirrorIdSync
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: mirror_id
          in: path
          description: The ID of a remote mirror
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Triggers a push mirror operation
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/tree:
    get:
      tags:
        - projects
      description: Get a project repository tree
      operationId: getApiV4ProjectsIdRepositoryTree
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The name of a repository branch or tag, if not given the default branch is used
          schema:
            type: string
        - name: path
          in: query
          description: The path of the tree
          schema:
            type: string
        - name: recursive
          in: query
          description: Used to get a recursive tree
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: pagination
          in: query
          description: Specify the pagination method ("none" is only valid if "recursive" is true)
          schema:
            type: string
            default: legacy
            enum:
              - legacy
              - keyset
              - none
        - name: page_token
          in: query
          description: Record from which to start the keyset pagination
          schema:
            type: string
      responses:
        "200":
          description: Get a project repository tree
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_TreeObject'
  /api/v4/projects/{id}/repository/blobs/{sha}/raw:
    get:
      tags:
        - projects
      description: Get raw blob contents from the repository
      operationId: getApiV4ProjectsIdRepositoryBlobsShaRaw
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get raw blob contents from the repository
          content: {}
  /api/v4/projects/{id}/repository/blobs/{sha}:
    get:
      tags:
        - projects
      description: Get a blob from the repository
      operationId: getApiV4ProjectsIdRepositoryBlobsSha
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a blob from the repository
          content: {}
  /api/v4/projects/{id}/repository/archive:
    get:
      tags:
        - projects
      description: Get an archive of the repository
      operationId: getApiV4ProjectsIdRepositoryArchive
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: query
          description: The commit sha of the archive to be downloaded
          schema:
            type: string
        - name: format
          in: query
          description: The archive format
          schema:
            type: string
        - name: path
          in: query
          description: Subfolder of the repository to be downloaded
          schema:
            type: string
      responses:
        "200":
          description: Get an archive of the repository
          content: {}
  /api/v4/projects/{id}/repository/compare:
    get:
      tags:
        - projects
      description: Compare two branches, tags, or commits
      operationId: getApiV4ProjectsIdRepositoryCompare
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: The commit, branch name, or tag name to start comparison
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: The commit, branch name, or tag name to stop comparison
          required: true
          schema:
            type: string
        - name: from_project_id
          in: query
          description: The project to compare from
          schema:
            type: integer
            format: int32
        - name: straight
          in: query
          description: Comparison method, `true` for direct comparison between `from` and `to` (`from`..`to`), `false` to compare using merge base (`from`...`to`)
          schema:
            type: boolean
            default: false
        - name: unidiff
          in: query
          description: A diff in a Unified diff format
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Compare two branches, tags, or commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Compare'
  /api/v4/projects/{id}/repository/contributors:
    get:
      tags:
        - projects
      description: Get repository contributors
      operationId: getApiV4ProjectsIdRepositoryContributors
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: order_by
          in: query
          description: Return contributors ordered by `name` or `email` or `commits`
          schema:
            type: string
            default: commits
            enum:
              - email
              - name
              - commits
        - name: sort
          in: query
          description: Sort by asc (ascending) or desc (descending)
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
      responses:
        "200":
          description: Get repository contributors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Contributor'
  /api/v4/projects/{id}/repository/merge_base:
    get:
      tags:
        - projects
      description: Get the common ancestor between commits
      operationId: getApiV4ProjectsIdRepositoryMergeBase
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: refs
          in: query
          description: The refs to find the common ancestor of, multiple refs can be passed
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Get the common ancestor between commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Commit'
  /api/v4/projects/{id}/repository/changelog:
    get:
      tags:
        - projects
      summary: Generates a changelog section for a release and returns it
      description: This feature was introduced in GitLab 14.6
      operationId: getApiV4ProjectsIdRepositoryChangelog
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: The version of the release, using the semantic versioning format
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: The first commit in the range of commits to use for the changelog
          schema:
            type: string
        - name: to
          in: query
          description: The last commit in the range of commits to use for the changelog
          schema:
            type: string
        - name: date
          in: query
          description: The date and time of the release
          schema:
            type: string
            format: date-time
        - name: trailer
          in: query
          description: The Git trailer to use for determining if commits are to be included in the changelog
          schema:
            type: string
            default: Changelog
        - name: config_file
          in: query
          description: The file path to the configuration file as stored in the project's Git repository. Defaults to '.gitlab/changelog_config.yml'
          schema:
            type: string
      responses:
        "200":
          description: Generates a changelog section for a release and returns it
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Changelog'
    post:
      tags:
        - projects
      summary: Generates a changelog section for a release and commits it in a changelog file
      description: This feature was introduced in GitLab 13.9
      operationId: postApiV4ProjectsIdRepositoryChangelog
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryChangelog'
        required: true
      responses:
        "200":
          description: Generates a changelog section for a release and commits it in a changelog file
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryChangelog
  /api/v4/projects/{id}/access_tokens:
    get:
      tags:
        - project_access_tokens
      summary: Get list of all access tokens for the specified resource
      description: This feature was introduced in GitLab 13.9.
      operationId: getApiV4ProjectsIdAccessTokens
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get list of all access tokens for the specified resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ResourceAccessToken'
    post:
      tags:
        - project_access_tokens
      summary: Create a resource access token
      description: This feature was introduced in GitLab 13.9.
      operationId: postApiV4ProjectsIdAccessTokens
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdAccessTokens'
        required: true
      responses:
        "201":
          description: Create a resource access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4ProjectsIdAccessTokens
  /api/v4/projects/{id}/access_tokens/{token_id}:
    get:
      tags:
        - project_access_tokens
      summary: Get an access token for the specified resource by ID
      description: This feature was introduced in GitLab 14.10.
      operationId: getApiV4ProjectsIdAccessTokensTokenId
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get an access token for the specified resource by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceAccessToken'
    delete:
      tags:
        - project_access_tokens
      summary: Revoke a resource access token
      description: This feature was introduced in GitLab 13.9.
      operationId: deleteApiV4ProjectsIdAccessTokensTokenId
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the token
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Revoke a resource access token
          content: {}
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/access_tokens/{token_id}/rotate:
    post:
      tags:
        - project_access_tokens
      summary: Rotate a resource access token
      description: This feature was introduced in GitLab 16.0.
      operationId: postApiV4ProjectsIdAccessTokensTokenIdRotate
      parameters:
        - name: id
          in: path
          description: The project ID
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: The ID of the token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdAccessTokensTokenIdRotate'
        required: true
      responses:
        "201":
          description: Rotate a resource access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4ProjectsIdAccessTokensTokenIdRotate
  /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events:
    get:
      tags:
        - resource_milestone_events
      summary: List project Issue milestone events
      description: Gets a list of all milestone events for a single Issue
      operationId: getApiV4ProjectsIdIssuesEventableIdResourceMilestoneEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: eventable_id
          in: path
          description: The ID of the eventable
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List project Issue milestone events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ResourceMilestoneEvent'
  /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events/{event_id}:
    get:
      tags:
        - resource_milestone_events
      summary: Get single Issue milestone event
      description: Returns a single milestone event for a specific project Issue
      operationId: getApiV4ProjectsIdIssuesEventableIdResourceMilestoneEventsEventId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: event_id
          in: path
          description: The ID of a resource milestone event
          required: true
          schema:
            type: string
        - name: eventable_id
          in: path
          description: The ID of the eventable
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single Issue milestone event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceMilestoneEvent'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events:
    get:
      tags:
        - resource_milestone_events
      summary: List project Merge request milestone events
      description: Gets a list of all milestone events for a single Merge request
      operationId: getApiV4ProjectsIdMergeRequestsEventableIdResourceMilestoneEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: eventable_id
          in: path
          description: The ID of the eventable
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List project Merge request milestone events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ResourceMilestoneEvent'
  /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events/{event_id}:
    get:
      tags:
        - resource_milestone_events
      summary: Get single Merge request milestone event
      description: Returns a single milestone event for a specific project Merge request
      operationId: getApiV4ProjectsIdMergeRequestsEventableIdResourceMilestoneEventsEventId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: event_id
          in: path
          description: The ID of a resource milestone event
          required: true
          schema:
            type: string
        - name: eventable_id
          in: path
          description: The ID of the eventable
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single Merge request milestone event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ResourceMilestoneEvent'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/repository/submodules/{submodule}:
    put:
      tags:
        - projects
      description: Update existing submodule reference in repository
      operationId: putApiV4ProjectsIdRepositorySubmodulesSubmodule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: submodule
          in: path
          description: Url encoded full path to submodule.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdRepositorySubmodulesSubmodule'
        required: true
      responses:
        "200":
          description: Update existing submodule reference in repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CommitDetail'
        "404":
          description: 404 Project Not Found
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
        "400":
          description: The repository is empty
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdRepositorySubmodulesSubmodule
  /api/v4/projects/{id}/repository/tags:
    get:
      tags:
        - tags
      description: Get a project repository tags
      operationId: getApiV4ProjectsIdRepositoryTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: Return tags sorted in updated by `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: order_by
          in: query
          description: Return tags ordered by `name`, `updated`, `version` fields.
          schema:
            type: string
            default: updated
            enum:
              - name
              - updated
              - version
        - name: search
          in: query
          description: Return list of tags matching the search criteria
          schema:
            type: string
        - name: page_token
          in: query
          description: Name of tag to start the paginaition from
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a project repository tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Tag'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
        "503":
          description: Service unavailable
          content: {}
    post:
      tags:
        - tags
      description: Create a new repository tag
      operationId: postApiV4ProjectsIdRepositoryTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdRepositoryTags'
        required: true
      responses:
        "201":
          description: Create a new repository tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Tag'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdRepositoryTags
  /api/v4/projects/{id}/repository/tags/{tag_name}:
    get:
      tags:
        - tags
      description: Get a single repository tag
      operationId: getApiV4ProjectsIdRepositoryTagsTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a single repository tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Tag'
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - tags
      description: Delete a repository tag
      operationId: deleteApiV4ProjectsIdRepositoryTagsTagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a repository tag
          content: {}
        "403":
          description: Unauthenticated
          content: {}
        "404":
          description: Not found
          content: {}
        "412":
          description: Precondition failed
          content: {}
  /api/v4/projects/{id}/repository/tags/{tag_name}/signature:
    get:
      tags:
        - tags
      description: Get a tag's signature
      operationId: getApiV4ProjectsIdRepositoryTagsTagNameSignature
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a tag's signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_TagSignature'
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/wikis:
    get:
      tags:
        - wikis
      description: Get a list of wiki pages
      operationId: getApiV4ProjectsIdWikis
      parameters:
        - name: with_content
          in: query
          description: Include pages' content
          schema:
            type: boolean
            default: false
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of wiki pages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_WikiPageBasic'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - wikis
      description: Create a wiki page
      operationId: postApiV4ProjectsIdWikis
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdWikis'
        required: true
      responses:
        "201":
          description: Create a wiki page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiPage'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdWikis
  /api/v4/projects/{id}/wikis/{slug}:
    get:
      tags:
        - wikis
      description: Get a wiki page
      operationId: getApiV4ProjectsIdWikisSlug
      parameters:
        - name: slug
          in: path
          description: The slug of a wiki page
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: The version hash of a wiki page
          schema:
            type: string
        - name: render_html
          in: query
          description: Render content to HTML
          schema:
            type: boolean
            default: false
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a wiki page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiPage'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - wikis
      description: Update a wiki page
      operationId: putApiV4ProjectsIdWikisSlug
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: slug
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdWikisSlug'
        required: true
      responses:
        "200":
          description: Update a wiki page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiPage'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdWikisSlug
    delete:
      tags:
        - wikis
      description: Delete a wiki page
      operationId: deleteApiV4ProjectsIdWikisSlug
      parameters:
        - name: slug
          in: path
          description: The slug of a wiki page
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a wiki page
          content: {}
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/wikis/attachments:
    post:
      tags:
        - wikis
      summary: Upload an attachment to the wiki repository
      description: This feature was introduced in GitLab 11.3.
      operationId: postApiV4ProjectsIdWikisAttachments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdWikisAttachments'
        required: true
      responses:
        "201":
          description: Upload an attachment to the wiki repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_WikiAttachment'
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdWikisAttachments
  /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/authorize:
    post:
      tags:
        - alert_management
      description: Workhorse authorize metric image file upload
      operationId: postApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: alert_iid
          in: path
          description: The IID of the Alert
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Workhorse authorize metric image file upload
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images:
    get:
      tags:
        - alert_management
      description: Metric Images for alert
      operationId: getApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: alert_iid
          in: path
          description: The IID of the Alert
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Metric Images for alert
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_MetricImage'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - alert_management
      description: Upload a metric image for an alert
      operationId: postApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: alert_iid
          in: path
          description: The IID of the Alert
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: The image file to be uploaded
                  format: binary
                url:
                  type: string
                  description: The url to view more metric info
                url_text:
                  type: string
                  description: A description of the image or URL
        required: true
      responses:
        "200":
          description: Upload a metric image for an alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MetricImage'
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}:
    put:
      tags:
        - alert_management
      description: Update a metric image for an alert
      operationId: putApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesMetricImageId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: alert_iid
          in: path
          description: The IID of the Alert
          required: true
          schema:
            type: integer
            format: int32
        - name: metric_image_id
          in: path
          description: The ID of metric image
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The url to view more metric info
                url_text:
                  type: string
                  description: A description of the image or URL
      responses:
        "200":
          description: Update a metric image for an alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MetricImage'
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
    delete:
      tags:
        - alert_management
      description: Remove a metric image for an alert
      operationId: deleteApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesMetricImageId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: alert_iid
          in: path
          description: The IID of the Alert
          required: true
          schema:
            type: integer
            format: int32
        - name: metric_image_id
          in: path
          description: The ID of metric image
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Remove a metric image for an alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MetricImage'
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
  /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens:
    get:
      tags:
        - cluster_agents
      summary: List tokens for an agent
      description: This feature was introduced in GitLab 15.0. Returns a list of tokens for an agent.
      operationId: getApiV4ProjectsIdClusterAgentsAgentIdTokens
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: The ID of an agent
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List tokens for an agent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Clusters_AgentTokenBasic'
    post:
      tags:
        - cluster_agents
      summary: Create an agent token
      description: This feature was introduced in GitLab 15.0. Creates a new token for an agent.
      operationId: postApiV4ProjectsIdClusterAgentsAgentIdTokens
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: The ID of an agent
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdClusterAgentsAgentIdTokens'
        required: true
      responses:
        "201":
          description: Create an agent token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Clusters_AgentTokenWithToken'
      x-codegen-request-body-name: postApiV4ProjectsIdClusterAgentsAgentIdTokens
  /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}:
    get:
      tags:
        - cluster_agents
      summary: Get a single agent token
      description: This feature was introduced in GitLab 15.0. Gets a single agent token.
      operationId: getApiV4ProjectsIdClusterAgentsAgentIdTokensTokenId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: The ID of an agent
          required: true
          schema:
            type: integer
            format: int32
        - name: token_id
          in: path
          description: The ID of the agent token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single agent token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Clusters_AgentToken'
    delete:
      tags:
        - cluster_agents
      summary: Revoke an agent token
      description: This feature was introduced in GitLab 15.0. Revokes an agent token.
      operationId: deleteApiV4ProjectsIdClusterAgentsAgentIdTokensTokenId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: The ID of an agent
          required: true
          schema:
            type: integer
            format: int32
        - name: token_id
          in: path
          description: The ID of the agent token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Revoke an agent token
          content: {}
  /api/v4/projects/{id}/packages/composer:
    post:
      tags:
        - composer_packages
      summary: Composer packages endpoint for registering packages
      description: This feature was introduced in GitLab 13.1
      operationId: postApiV4ProjectsIdPackagesComposer
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPackagesComposer'
        required: true
      responses:
        "201":
          description: Composer packages endpoint for registering packages
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPackagesComposer
  /api/v4/projects/{id}/packages/composer/archives/*package_name:
    get:
      tags:
        - composer_packages
      summary: Composer package endpoint to download a package archive
      description: This feature was introduced in GitLab 13.1
      operationId: getApiV4ProjectsIdPackagesComposerArchives*packageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: sha
          in: query
          description: Shasum of current json
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The Composer package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Composer package endpoint to download a package archive
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/ping:
    get:
      tags:
        - conan_packages
      summary: Ping the Conan API
      description: This feature was introduced in GitLab 12.2
      operationId: getApiV4ProjectsIdPackagesConanV1Ping
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ping the Conan API
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/search:
    get:
      tags:
        - conan_packages
      summary: Search for packages
      description: This feature was introduced in GitLab 12.4
      operationId: getApiV4ProjectsIdPackagesConanV1ConansSearch
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Search for packages
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/users/authenticate:
    get:
      tags:
        - conan_packages
      summary: Authenticate user against conan CLI
      description: This feature was introduced in GitLab 12.2
      operationId: getApiV4ProjectsIdPackagesConanV1UsersAuthenticate
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Authenticate user against conan CLI
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/users/check_credentials:
    get:
      tags:
        - conan_packages
      summary: Check for valid user credentials per conan CLI
      description: This feature was introduced in GitLab 12.4
      operationId: getApiV4ProjectsIdPackagesConanV1UsersCheckCredentials
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Check for valid user credentials per conan CLI
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}:
    get:
      tags:
        - conan_packages
      summary: Package Snapshot
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReference
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanPackageSnapshot'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}:
    get:
      tags:
        - conan_packages
      summary: Recipe Snapshot
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanRecipeSnapshot'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    delete:
      tags:
        - conan_packages
      summary: Delete Package
      description: This feature was introduced in GitLab 12.5
      operationId: deleteApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete Package
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest:
    get:
      tags:
        - conan_packages
      summary: Package Digest
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDigest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Digest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanPackageManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest:
    get:
      tags:
        - conan_packages
      summary: Recipe Digest
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDigest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Digest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanRecipeManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls:
    get:
      tags:
        - conan_packages
      summary: Package Download Urls
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDownloadUrls
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Download Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanPackageManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls:
    get:
      tags:
        - conan_packages
      summary: Recipe Download Urls
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDownloadUrls
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Download Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanRecipeManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls:
    post:
      tags:
        - conan_packages
      summary: Package Upload Urls
      description: This feature was introduced in GitLab 12.4
      operationId: postApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceUploadUrls
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Upload Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanUploadUrls'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls:
    post:
      tags:
        - conan_packages
      summary: Recipe Upload Urls
      description: This feature was introduced in GitLab 12.4
      operationId: postApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelUploadUrls
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Upload Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanUploadUrls'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}:
    get:
      tags:
        - conan_packages
      summary: Download recipe files
      description: This feature was introduced in GitLab 12.6
      operationId: getApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Download recipe files
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - conan_packages
      summary: Upload recipe package files
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName'
        required: true
      responses:
        "200":
          description: Upload recipe package files
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName
  /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize:
    put:
      tags:
        - conan_packages
      summary: Workhorse authorize the conan recipe file
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileNameAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Workhorse authorize the conan recipe file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}:
    get:
      tags:
        - conan_packages
      summary: Download package files
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan Package ID
          required: true
          schema:
            type: string
        - name: package_revision
          in: path
          description: Conan Package Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Download package files
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - conan_packages
      summary: Upload package files
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan Package ID
          required: true
          schema:
            type: string
        - name: package_revision
          in: path
          description: Conan Package Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName'
        required: true
      responses:
        "200":
          description: Upload package files
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
  /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize:
    put:
      tags:
        - conan_packages
      summary: Workhorse authorize the conan package file
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileNameAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan Package ID
          required: true
          schema:
            type: string
        - name: package_revision
          in: path
          description: Conan Package Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Workhorse authorize the conan package file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/Release.gpg:
    get:
      tags:
        - debian_packages
      summary: The Release file signature
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionReleaseGpg
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The Release file signature
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/Release:
    get:
      tags:
        - debian_packages
      summary: The unsigned Release file
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionRelease
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The unsigned Release file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/InRelease:
    get:
      tags:
        - debian_packages
      summary: The signed Release file
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionInrelease
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The signed Release file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages:
    get:
      tags:
        - debian_packages
      summary: The installer (udeb) binary files index
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitecturePackages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The installer (udeb) binary files index
          content: {}
        "202":
          description: The installer (udeb) binary files index
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}:
    get:
      tags:
        - debian_packages
      summary: The installer (udeb) binary files index by hash
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitectureByHashSha256FileSha256
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
        - name: file_sha256
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The installer (udeb) binary files index by hash
          content: {}
        "202":
          description: The installer (udeb) binary files index by hash
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/Sources:
    get:
      tags:
        - debian_packages
      summary: The source files index
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionComponentSourceSources
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The source files index
          content: {}
        "202":
          description: The source files index
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}:
    get:
      tags:
        - debian_packages
      summary: The source files index by hash
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionComponentSourceByHashSha256FileSha256
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: file_sha256
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The source files index by hash
          content: {}
        "202":
          description: The source files index by hash
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages:
    get:
      tags:
        - debian_packages
      summary: The binary files index
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionComponentBinary-ArchitecturePackages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The binary files index
          content: {}
        "202":
          description: The binary files index
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}:
    get:
      tags:
        - debian_packages
      summary: The binary files index by hash
      description: This feature was introduced in GitLab 15.4
      operationId: getApiV4ProjectsIdPackagesDebianDists*distributionComponentBinaryArchitectureByHashSha256FileSha256
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: query
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: component
          in: path
          description: The Debian Component
          required: true
          schema:
            type: string
        - name: architecture
          in: path
          description: The Debian Architecture
          required: true
          schema:
            type: string
        - name: file_sha256
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The binary files index by hash
          content: {}
        "202":
          description: The binary files index by hash
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/pool/{distribution}/{letter}/{package_name}/{package_version}/{file_name}:
    get:
      tags:
        - debian_packages
      summary: Download Debian package
      description: This feature was introduced in GitLab 14.2
      operationId: getApiV4ProjectsIdPackagesDebianPoolDistributionLetterPackageNamePackageVersionFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: distribution
          in: path
          description: The Debian Codename or Suite
          required: true
          schema:
            type: string
        - name: letter
          in: path
          description: The Debian Classification (first-letter or lib-first-letter)
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: The Debian Source Package Name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: The Debian Source Package Version
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: The Debian File Name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download Debian package
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/debian/{file_name}:
    put:
      tags:
        - debian_packages
      summary: Upload Debian package
      description: This feature was introduced in GitLab 14.0
      operationId: putApiV4ProjectsIdPackagesDebianFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: The filename
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesDebianFileName'
        required: true
      responses:
        "201":
          description: Upload Debian package
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesDebianFileName
  /api/v4/projects/{id}/packages/debian/{file_name}/authorize:
    put:
      tags:
        - debian_packages
      summary: Authorize Debian package upload
      description: This feature was introduced in GitLab 13.5
      operationId: putApiV4ProjectsIdPackagesDebianFileNameAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: The filename
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesDebianFileNameAuthorize'
        required: true
      responses:
        "200":
          description: Authorize Debian package upload
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesDebianFileNameAuthorize
  /api/v4/projects/{id}/error_tracking/client_keys:
    get:
      tags:
        - error_tracking_client_keys
      summary: List project client keys
      description: List all client keys. This feature was introduced in GitLab 14.3.
      operationId: getApiV4ProjectsIdErrorTrackingClientKeys
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List project client keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_ErrorTracking_ClientKey'
    post:
      tags:
        - error_tracking_client_keys
      summary: Create a client key
      description: Creates a new client key for a project. The public key attribute is generated automatically.This feature was introduced in GitLab 14.3.
      operationId: postApiV4ProjectsIdErrorTrackingClientKeys
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Create a client key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ErrorTracking_ClientKey'
  /api/v4/projects/{id}/error_tracking/client_keys/{key_id}:
    delete:
      tags:
        - error_tracking_client_keys
      summary: Delete a client key
      description: Removes a client key from the project. This feature was introduced in GitLab 14.3.
      operationId: deleteApiV4ProjectsIdErrorTrackingClientKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Bad request
          content: {}
        "204":
          description: Delete a client key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ErrorTracking_ClientKey'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/feature_flags:
    get:
      tags:
        - feature_flags
      summary: List feature flags for a project
      description: Gets all feature flags of the requested project. This feature was introduced in GitLab 12.5.
      operationId: getApiV4ProjectsIdFeatureFlags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: 'The scope of feature flags, one of: `enabled`, `disabled`'
          schema:
            type: string
            enum:
              - enabled
              - disabled
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List feature flags for a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_FeatureFlag'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - feature_flags
      summary: Create a new feature flag
      description: Creates a new feature flag. This feature was introduced in GitLab 12.5.
      operationId: postApiV4ProjectsIdFeatureFlags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdFeatureFlags'
        required: true
      responses:
        "201":
          description: Create a new feature flag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdFeatureFlags
  /api/v4/projects/{id}/feature_flags/{feature_flag_name}:
    get:
      tags:
        - feature_flags
      summary: Get a single feature flag
      description: Gets a single feature flag. This feature was introduced in GitLab 12.5.
      operationId: getApiV4ProjectsIdFeatureFlagsFeatureFlagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: feature_flag_name
          in: path
          description: The name of the feature flag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a single feature flag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - feature_flags
      summary: Update a feature flag
      description: Updates a feature flag. This feature was introduced in GitLab 13.2.
      operationId: putApiV4ProjectsIdFeatureFlagsFeatureFlagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: feature_flag_name
          in: path
          description: The name of the feature flag
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdFeatureFlagsFeatureFlagName'
        required: true
      responses:
        "200":
          description: Update a feature flag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdFeatureFlagsFeatureFlagName
    delete:
      tags:
        - feature_flags
      summary: Delete a feature flag
      description: Deletes a feature flag. This feature was introduced in GitLab 12.5.
      operationId: deleteApiV4ProjectsIdFeatureFlagsFeatureFlagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: feature_flag_name
          in: path
          description: The name of the feature flag
          required: true
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content: {}
        "204":
          description: Delete a feature flag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/feature_flags_user_lists:
    get:
      tags:
        - feature_flags_user_lists
      summary: List all feature flag user lists for a project
      description: Gets all feature flag user lists for the requested project. This feature was introduced in GitLab 12.10.
      operationId: getApiV4ProjectsIdFeatureFlagsUserLists
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return user lists matching the search criteria
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List all feature flag user lists for a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_FeatureFlag_UserList'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - feature_flags_user_lists
      summary: Create a feature flag user list
      description: Creates a feature flag user list. This feature was introduced in GitLab 12.10.
      operationId: postApiV4ProjectsIdFeatureFlagsUserLists
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdFeatureFlagsUserLists'
        required: true
      responses:
        "201":
          description: Create a feature flag user list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag_UserList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdFeatureFlagsUserLists
  /api/v4/projects/{id}/feature_flags_user_lists/{iid}:
    get:
      tags:
        - feature_flags_user_lists
      summary: Get a feature flag user list
      description: Gets a feature flag user list. This feature was introduced in GitLab 12.10.
      operationId: getApiV4ProjectsIdFeatureFlagsUserListsIid
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: iid
          in: path
          description: The internal ID of the project's feature flag user list
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a feature flag user list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag_UserList'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - feature_flags_user_lists
      summary: Update a feature flag user list
      description: Updates a feature flag user list. This feature was introduced in GitLab 12.10.
      operationId: putApiV4ProjectsIdFeatureFlagsUserListsIid
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: iid
          in: path
          description: The internal ID of the project's feature flag user list
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdFeatureFlagsUserListsIid'
        required: true
      responses:
        "200":
          description: Update a feature flag user list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_FeatureFlag_UserList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdFeatureFlagsUserListsIid
    delete:
      tags:
        - feature_flags_user_lists
      summary: Delete feature flag user list
      description: Deletes a feature flag user list. This feature was introduced in GitLab 12.10.
      operationId: deleteApiV4ProjectsIdFeatureFlagsUserListsIid
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: iid
          in: path
          description: The internal ID of the project's feature flag user list
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete feature flag user list
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
  /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/(*path/){file_name}/authorize:
    put:
      tags:
        - generic_packages
      summary: Workhorse authorize generic package file
      description: This feature was introduced in GitLab 13.5
      operationId: putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize'
        required: true
      responses:
        "200":
          description: Workhorse authorize generic package file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize
  /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/(*path/){file_name}:
    get:
      tags:
        - generic_packages
      summary: Download package file
      description: This feature was introduced in GitLab 13.5
      operationId: getApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: query
          description: Package version
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: File directory path
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download package file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - generic_packages
      summary: Upload package file
      description: This feature was introduced in GitLab 13.5
      operationId: putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName'
        required: true
      responses:
        "200":
          description: Upload package file
          content: {}
        "201":
          description: Upload package file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName
  /api/v4/projects/{id}/packages/go/*module_name/@v/list:
    get:
      tags:
        - go_proxy
      summary: List
      description: Get all tagged versions for a given Go module.See `go help goproxy`, GET $GOPROXY/<module>/@v/list. This feature was introduced in GitLab 13.1.
      operationId: getApiV4ProjectsIdPackagesGo*moduleName@vList
      parameters:
        - name: id
          in: path
          description: The project ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: query
          description: The name of the Go module
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List
          content: {}
  /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.info:
    get:
      tags:
        - go_proxy
      summary: Version metadata
      description: Get all tagged versions for a given Go module.See `go help goproxy`, GET $GOPROXY/<module>/@v/<version>.info. This feature was introduced in GitLab 13.1
      operationId: getApiV4ProjectsIdPackagesGo*moduleName@vModuleVersionInfo
      parameters:
        - name: id
          in: path
          description: The project ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: query
          description: The name of the Go module
          required: true
          schema:
            type: string
        - name: module_version
          in: path
          description: The version of the Go module
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Version metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GoModuleVersion'
  /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.mod:
    get:
      tags:
        - go_proxy
      summary: Download module file
      description: Get the module file of a given module version.See `go help goproxy`, GET $GOPROXY/<module>/@v/<version>.mod. This feature was introduced in GitLab 13.1.
      operationId: getApiV4ProjectsIdPackagesGo*moduleName@vModuleVersionMod
      parameters:
        - name: id
          in: path
          description: The project ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: query
          description: The name of the Go module
          required: true
          schema:
            type: string
        - name: module_version
          in: path
          description: The version of the Go module
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download module file
          content: {}
  /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.zip:
    get:
      tags:
        - go_proxy
      summary: Download module source
      description: Get a zip of the source of the given module version.See `go help goproxy`, GET $GOPROXY/<module>/@v/<version>.zip. This feature was introduced in GitLab 13.1.
      operationId: getApiV4ProjectsIdPackagesGo*moduleName@vModuleVersionZip
      parameters:
        - name: id
          in: path
          description: The project ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: query
          description: The name of the Go module
          required: true
          schema:
            type: string
        - name: module_version
          in: path
          description: The version of the Go module
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download module source
          content: {}
  /api/v4/projects/{id}/packages/helm/{channel}/index.yaml:
    get:
      tags:
        - helm_packages
      summary: Download a chart index
      description: This feature was introduced in GitLab 14.0
      operationId: getApiV4ProjectsIdPackagesHelmChannelIndexYaml
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: integer
            format: int32
        - name: channel
          in: path
          description: Helm channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download a chart index
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/packages/helm/{channel}/charts/{file_name}.tgz:
    get:
      tags:
        - helm_packages
      summary: Download a chart
      description: This feature was introduced in GitLab 14.0
      operationId: getApiV4ProjectsIdPackagesHelmChannelChartsFileNameTgz
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: integer
            format: int32
        - name: channel
          in: path
          description: Helm channel
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Helm package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download a chart
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/helm/api/{channel}/charts/authorize:
    post:
      tags:
        - helm_packages
      summary: Authorize a chart upload from workhorse
      description: This feature was introduced in GitLab 14.0
      operationId: postApiV4ProjectsIdPackagesHelmApiChannelChartsAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: integer
            format: int32
        - name: channel
          in: path
          description: Helm channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Authorize a chart upload from workhorse
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/helm/api/{channel}/charts:
    post:
      tags:
        - helm_packages
      summary: Upload a chart
      description: This feature was introduced in GitLab 14.0
      operationId: postApiV4ProjectsIdPackagesHelmApiChannelCharts
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: integer
            format: int32
        - name: channel
          in: path
          description: Helm channel
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPackagesHelmApiChannelCharts'
        required: true
      responses:
        "201":
          description: Upload a chart
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPackagesHelmApiChannelCharts
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approvals:
    get:
      tags:
        - projects
      description: List approvals for merge request
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List approvals for merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestApprovals'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - projects
      summary: 'Deprecated in 16.0: Use the merge request approvals API instead. Change approval-related configuration'
      description: This feature was introduced in 10.6 and deprecated in 16.0
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals'
        required: true
      responses:
        "201":
          description: 'Deprecated in 16.0: Use the merge request approvals API instead. Change approval-related configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_ApprovalState'
      deprecated: true
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approve:
    post:
      tags:
        - projects
      description: Approve a merge request
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove'
        required: true
      responses:
        "201":
          description: Approve a merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestApprovals'
        "404":
          description: Not found
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/unapprove:
    post:
      tags:
        - projects
      description: Remove an approval from a merge request
      operationId: postApiV4ProjectsIdMergeRequestsMergeRequestIidUnapprove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Remove an approval from a merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestApprovals'
        "404":
          description: Not found
          content: {}
        "401":
          description: Unauthorized
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_approvals:
    put:
      tags:
        - merge_requests
      summary: Remove all merge request approvals
      description: Clear all approvals of merge request. This feature was added in GitLab 15.4
      operationId: putApiV4ProjectsIdMergeRequestsMergeRequestIidResetApprovals
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: merge_request_iid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Remove all merge request approvals
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approval_state:
    get:
      tags:
        - projects
      description: Get approval state of merge request
      operationId: getApiV4ProjectsIdMergeRequestsMergeRequestIidApprovalState
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get approval state of merge request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_MergeRequestApprovalState'
  /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}/authorize:
    put:
      tags:
        - ml_model_registry
      summary: Workhorse authorize model package file
      description: Introduced in GitLab 16.8
      operationId: putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: model_version_id
          in: path
          description: Model version id
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: path
          description: File name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize'
        required: true
      responses:
        "200":
          description: Workhorse authorize model package file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize
  /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}:
    get:
      tags:
        - ml_model_registry
      summary: Download an ml_model package file
      description: This feature was introduced in GitLab 16.8
      operationId: getApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: model_version_id
          in: path
          description: Model version id
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: path
          description: File name
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: File directory path
          schema:
            type: string
        - name: status
          in: query
          description: Package status
          schema:
            type: string
            enum:
              - default
              - hidden
      responses:
        "200":
          description: Download an ml_model package file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - ml_model_registry
      summary: Workhorse upload model package file
      description: Introduced in GitLab 16.8
      operationId: putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: model_version_id
          in: path
          description: Model version id
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: path
          description: File name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName'
        required: true
      responses:
        "201":
          description: Workhorse upload model package file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName
  /api/v4/projects/{id}/packages/npm/*package_name/-/*file_name:
    get:
      tags:
        - npm_packages
      summary: Download the NPM tarball
      description: This feature was introduced in GitLab 11.8
      operationId: getApiV4ProjectsIdPackagesNpm*packageName-*fileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
        - name: file_name
          in: query
          description: Package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download the NPM tarball
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/npm/{package_name}:
    put:
      tags:
        - npm_packages
      summary: Create or deprecate NPM package
      description: Create was introduced in GitLab 11.8 & deprecate suppport was added in 16.0
      operationId: putApiV4ProjectsIdPackagesNpmPackageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesNpmPackageName'
        required: true
      responses:
        "200":
          description: Create or deprecate NPM package
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesNpmPackageName
  /api/v4/projects/{id}/packages/npm/*package_name:
    get:
      tags:
        - npm_packages
      summary: NPM registry metadata endpoint
      description: This feature was introduced in GitLab 11.8
      operationId: getApiV4ProjectsIdPackagesNpm*packageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NpmPackage'
        "302":
          description: Found (redirect)
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/npm/-/npm/v1/security/advisories/bulk:
    post:
      tags:
        - npm_packages
      summary: NPM registry bulk advisory endpoint
      description: This feature was introduced in GitLab 15.6
      operationId: postApiV4ProjectsIdPackagesNpmNpmV1SecurityAdvisoriesBulk
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content: {}
        "307":
          description: Temporary Redirect
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/npm/-/npm/v1/security/audits/quick:
    post:
      tags:
        - npm_packages
      summary: NPM registry quick audit endpoint
      description: This feature was introduced in GitLab 15.6
      operationId: postApiV4ProjectsIdPackagesNpmNpmV1SecurityAuditsQuick
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content: {}
        "307":
          description: Temporary Redirect
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags:
    get:
      tags:
        - npm_packages
      summary: Get all tags for a given an NPM package
      description: This feature was introduced in GitLab 12.7
      operationId: getApiV4ProjectsIdPackagesNpmPackage*packageNameDistTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get all tags for a given an NPM package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NpmPackageTag'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags/{tag}:
    put:
      tags:
        - npm_packages
      summary: Create or Update the given tag for the given NPM package and version
      description: This feature was introduced in GitLab 12.7
      operationId: putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag
          in: path
          description: Package dist-tag
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag'
        required: true
      responses:
        "204":
          description: Create or Update the given tag for the given NPM package and version
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag
    delete:
      tags:
        - npm_packages
      summary: Deletes the given tag
      description: This feature was introduced in GitLab 12.7
      operationId: deleteApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
        - name: tag
          in: path
          description: Package dist-tag
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deletes the given tag
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/index:
    get:
      tags:
        - nuget_packages
      summary: The NuGet V3 Feed Service Index
      description: This feature was introduced in GitLab 12.6
      operationId: getApiV4ProjectsIdPackagesNugetIndex
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V3 Feed Service Index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_ServiceIndex'
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget:
    put:
      tags:
        - nuget_packages
      summary: The NuGet V3 Feed Package Publish endpoint
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4ProjectsIdPackagesNuget
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesNuget'
        required: true
      responses:
        "201":
          description: The NuGet V3 Feed Package Publish endpoint
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesNuget
  /api/v4/projects/{id}/packages/nuget/authorize:
    put:
      tags:
        - nuget_packages
      summary: The NuGet Package Authorize endpoint
      description: This feature was introduced in GitLab 14.1
      operationId: putApiV4ProjectsIdPackagesNugetAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Package Authorize endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/symbolpackage:
    put:
      tags:
        - nuget_packages
      summary: The NuGet Symbol Package Publish endpoint
      description: This feature was introduced in GitLab 14.1
      operationId: putApiV4ProjectsIdPackagesNugetSymbolpackage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesNugetSymbolpackage'
        required: true
      responses:
        "201":
          description: The NuGet Symbol Package Publish endpoint
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesNugetSymbolpackage
  /api/v4/projects/{id}/packages/nuget/symbolpackage/authorize:
    put:
      tags:
        - nuget_packages
      summary: The NuGet Symbol Package Authorize endpoint
      description: This feature was introduced in GitLab 14.1
      operationId: putApiV4ProjectsIdPackagesNugetSymbolpackageAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Symbol Package Authorize endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/*package_name/*package_version:
    delete:
      tags:
        - nuget_packages
      summary: The NuGet Package Delete endpoint
      description: This feature was introduced in GitLab 16.5
      operationId: deleteApiV4ProjectsIdPackagesNuget*packageName*packageVersion
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
        - name: package_version
          in: query
          description: The NuGet package version
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The NuGet Package Delete endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Symbol File Download Endpoint
      description: This feature was introduced in GitLab 16.7
      operationId: getApiV4ProjectsIdPackagesNugetSymbolfiles*fileName*signature*sameFileName
      parameters:
        - name: Symbolchecksum
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_name
          in: query
          description: The symbol file name
          required: true
          schema:
            type: string
        - name: signature
          in: query
          description: The symbol file signature
          required: true
          schema:
            type: string
        - name: same_file_name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Symbol File Download Endpoint
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/v2:
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Service Index
      description: This feature was introduced in GitLab 16.2
      operationId: getApiV4ProjectsIdPackagesNugetV2
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V2 Feed Service Index
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Package Publish endpoint
      description: This feature was introduced in GitLab 16.2
      operationId: putApiV4ProjectsIdPackagesNugetV2
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesNugetV2'
        required: true
      responses:
        "201":
          description: The NuGet V2 Feed Package Publish endpoint
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesNugetV2
  /api/v4/projects/{id}/packages/nuget/v2/$metadata:
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Package $metadata endpoint
      description: This feature was introduced in GitLab 16.3
      operationId: getApiV4ProjectsIdPackagesNugetV2$metadata
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V2 Feed Package $metadata endpoint
          content: {}
  /api/v4/projects/{id}/packages/nuget/v2/authorize:
    put:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Package Authorize endpoint
      description: This feature was introduced in GitLab 16.2
      operationId: putApiV4ProjectsIdPackagesNugetV2Authorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V2 Feed Package Authorize endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/metadata/*package_name/index:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Metadata Service - Package name level
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4ProjectsIdPackagesNugetMetadata*packageNameIndex
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Metadata Service - Package name level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_PackagesMetadata'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/metadata/*package_name/*package_version:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Metadata Service - Package name and version level
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4ProjectsIdPackagesNugetMetadata*packageName*packageVersion
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
        - name: package_version
          in: query
          description: The NuGet package version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Metadata Service - Package name and version level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_PackageMetadata'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/query:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Search Service
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4ProjectsIdPackagesNugetQuery
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: The search term
          schema:
            type: string
        - name: skip
          in: query
          description: The number of results to skip
          schema:
            type: integer
            format: int32
            default: 0
        - name: take
          in: query
          description: The number of results to return
          schema:
            type: integer
            format: int32
            default: 20
        - name: prerelease
          in: query
          description: Include prerelease versions
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: The NuGet Search Service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_SearchResults'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/download/*package_name/index:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Content Service - index request
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4ProjectsIdPackagesNugetDownload*packageNameIndex
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Content Service - index request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Nuget_PackagesVersions'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/nuget/download/*package_name/*package_version/*package_filename:
    get:
      tags:
        - nuget_packages
      summary: The NuGet Content Service - content request
      description: This feature was introduced in GitLab 12.8
      operationId: getApiV4ProjectsIdPackagesNugetDownload*packageName*packageVersion*packageFilename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
        - name: package_version
          in: query
          description: The NuGet package version
          required: true
          schema:
            type: string
        - name: package_filename
          in: query
          description: The NuGet package filename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet Content Service - content request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{project_id}/packages/nuget/v2/FindPackagesById\(\):
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Find Packages by ID endpoint
      description: This feature was introduced in GitLab 16.4
      operationId: getApiV4ProjectsProjectIdPackagesNugetV2Findpackagesbyid\(\)
      parameters:
        - name: project_id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V2 Feed Find Packages by ID endpoint
          content: {}
        "404":
          description: Not Found
          content: {}
        "400":
          description: Bad Request
          content: {}
  /api/v4/projects/{project_id}/packages/nuget/v2/Packages\(\):
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Enumerate Packages endpoint
      description: This feature was introduced in GitLab 16.4
      operationId: getApiV4ProjectsProjectIdPackagesNugetV2Packages\(\)
      parameters:
        - name: project_id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V2 Feed Enumerate Packages endpoint
          content: {}
        "404":
          description: Not Found
          content: {}
        "400":
          description: Bad Request
          content: {}
  /api/v4/projects/{project_id}/packages/nuget/v2/Packages\(Id='*package_name',Version='*package_version'\):
    get:
      tags:
        - nuget_packages
      summary: The NuGet V2 Feed Single Package Metadata endpoint
      description: This feature was introduced in GitLab 16.4
      operationId: getApiV4ProjectsProjectIdPackagesNugetV2Packages\(id='*packageName',version='*packageVersion'\)
      parameters:
        - name: project_id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The NuGet package name
          required: true
          schema:
            type: string
        - name: package_version
          in: query
          description: The NuGet package version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The NuGet V2 Feed Single Package Metadata endpoint
          content: {}
        "404":
          description: Not Found
          content: {}
        "400":
          description: Bad Request
          content: {}
  /api/v4/projects/{id}/debian_distributions:
    get:
      tags:
        - debian_distribution
      summary: Get a list of Debian Distributions
      description: This feature was introduced in 14.0
      operationId: getApiV4ProjectsIdDebianDistributions
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: codename
          in: query
          description: The Debian Codename
          schema:
            type: string
        - name: suite
          in: query
          description: The Debian Suite
          schema:
            type: string
        - name: origin
          in: query
          description: The Debian Origin
          schema:
            type: string
        - name: label
          in: query
          description: The Debian Label
          schema:
            type: string
        - name: version
          in: query
          description: The Debian Version
          schema:
            type: string
        - name: description
          in: query
          description: The Debian Description
          schema:
            type: string
        - name: valid_time_duration_seconds
          in: query
          description: The duration before the Release file should be considered expired by the client
          schema:
            type: integer
            format: int32
        - name: components
          in: query
          description: The list of Components
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: architectures
          in: query
          description: The list of Architectures
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Get a list of Debian Distributions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    post:
      tags:
        - debian_distribution
      summary: Create a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: postApiV4ProjectsIdDebianDistributions
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdDebianDistributions'
        required: true
      responses:
        "201":
          description: Create a Debian Distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdDebianDistributions
  /api/v4/projects/{id}/debian_distributions/{codename}:
    get:
      tags:
        - debian_distribution
      summary: Get a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: getApiV4ProjectsIdDebianDistributionsCodename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Debian Distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - debian_distribution
      summary: Update a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: putApiV4ProjectsIdDebianDistributionsCodename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdDebianDistributionsCodename'
        required: true
      responses:
        "200":
          description: Update a Debian Distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdDebianDistributionsCodename
    delete:
      tags:
        - debian_distribution
      summary: Delete a Debian Distribution
      description: This feature was introduced in 14.0
      operationId: deleteApiV4ProjectsIdDebianDistributionsCodename
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
        - name: suite
          in: query
          description: The Debian Suite
          schema:
            type: string
        - name: origin
          in: query
          description: The Debian Origin
          schema:
            type: string
        - name: label
          in: query
          description: The Debian Label
          schema:
            type: string
        - name: version
          in: query
          description: The Debian Version
          schema:
            type: string
        - name: description
          in: query
          description: The Debian Description
          schema:
            type: string
        - name: valid_time_duration_seconds
          in: query
          description: The duration before the Release file should be considered expired by the client
          schema:
            type: integer
            format: int32
        - name: components
          in: query
          description: The list of Components
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: architectures
          in: query
          description: The list of Architectures
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "202":
          description: Delete a Debian Distribution
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/debian_distributions/{codename}/key.asc:
    get:
      tags:
        - debian_distribution
      summary: Get a Debian Distribution Key
      description: This feature was introduced in 14.4
      operationId: getApiV4ProjectsIdDebianDistributionsCodenameKeyAsc
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian Codename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Debian Distribution Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Packages_Debian_Distribution'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/hooks/{hook_id}/test/{trigger}:
    post:
      tags:
        - projects
      summary: Triggers a hook test
      description: Triggers a hook test
      operationId: postApiV4ProjectsIdHooksHookIdTestTrigger
      parameters:
        - name: hook_id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
            format: int32
        - name: trigger
          in: path
          description: The type of trigger hook
          required: true
          schema:
            type: string
            enum:
              - push_events
              - tag_push_events
              - issues_events
              - confidential_issues_events
              - note_events
              - confidential_note_events
              - merge_requests_events
              - job_events
              - pipeline_events
              - wiki_page_events
              - deployment_events
              - feature_flag_events
              - releases_events
              - emoji_events
              - resource_access_token_events
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Triggers a hook test
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
        "429":
          description: Too many requests
          content: {}
  /api/v4/projects/{id}/audit_events:
    get:
      tags:
        - projects
      description: Get a list of audit events in this project.
      operationId: getApiV4ProjectsIdAuditEvents
      parameters:
        - name: created_after
          in: query
          description: Return audit events created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return audit events created before the specified time
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a list of audit events in this project.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EE_API_Entities_AuditEvent'
  /api/v4/projects/{id}/audit_events/{audit_event_id}:
    get:
      tags:
        - projects
      description: Get a specific audit event in this project.
      operationId: getApiV4ProjectsIdAuditEventsAuditEventId
      parameters:
        - name: audit_event_id
          in: path
          description: The ID of the audit event
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific audit event in this project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_AuditEvent'
  /api/v4/projects/{id}/packages/pypi/files/{sha256}/*file_identifier:
    get:
      tags:
        - pypi_packages
      summary: The PyPi package download endpoint
      description: This feature was introduced in GitLab 12.10
      operationId: getApiV4ProjectsIdPackagesPypiFilesSha256*fileIdentifier
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_identifier
          in: query
          description: The PyPi package file identifier
          required: true
          schema:
            type: string
        - name: sha256
          in: path
          description: The PyPi package sha256 check sum
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The PyPi package download endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/pypi/simple:
    get:
      tags:
        - pypi_packages
      summary: The PyPi Simple Project Index Endpoint
      description: This feature was introduced in GitLab 15.1
      operationId: getApiV4ProjectsIdPackagesPypiSimple
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The PyPi Simple Project Index Endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/pypi/simple/*package_name:
    get:
      tags:
        - pypi_packages
      summary: The PyPi Simple Project Package Endpoint
      description: This feature was introduced in GitLab 12.10
      operationId: getApiV4ProjectsIdPackagesPypiSimple*packageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The PyPi package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The PyPi Simple Project Package Endpoint
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/pypi:
    post:
      tags:
        - pypi_packages
      summary: The PyPi Package upload endpoint
      description: This feature was introduced in GitLab 12.10
      operationId: postApiV4ProjectsIdPackagesPypi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPackagesPypi'
        required: true
      responses:
        "201":
          description: The PyPi Package upload endpoint
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "422":
          description: Unprocessable Entity
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPackagesPypi
  /api/v4/projects/{id}/packages/pypi/authorize:
    post:
      tags:
        - pypi_packages
      summary: Authorize the PyPi package upload from workhorse
      description: This feature was introduced in GitLab 12.10
      operationId: postApiV4ProjectsIdPackagesPypiAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Authorize the PyPi package upload from workhorse
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/releases/{tag_name}/assets/links:
    get:
      tags:
        - release_links
      summary: List links of a release
      description: Get assets as links from a release. This feature was introduced in GitLab 11.7.
      operationId: getApiV4ProjectsIdReleasesTagNameAssetsLinks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the release
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List links of a release
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Releases_Link'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - release_links
      summary: Create a release link
      description: Create an asset as a link from a release. This feature was introduced in GitLab 11.7.
      operationId: postApiV4ProjectsIdReleasesTagNameAssetsLinks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the release
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdReleasesTagNameAssetsLinks'
        required: true
      responses:
        "201":
          description: Create a release link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Releases_Link'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdReleasesTagNameAssetsLinks
  /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}:
    get:
      tags:
        - release_links
      summary: Get a release link
      description: Get an asset as a link from a release. This feature was introduced in GitLab 11.7.
      operationId: getApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the release
          required: true
          schema:
            type: string
        - name: link_id
          in: path
          description: The ID of the link
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a release link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Releases_Link'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - release_links
      summary: Update a release link
      description: Update an asset as a link from a release. This feature was introduced in GitLab 11.7.
      operationId: putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the release
          required: true
          schema:
            type: string
        - name: link_id
          in: path
          description: The ID of the link
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId'
        required: true
      responses:
        "200":
          description: Update a release link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Releases_Link'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId
    delete:
      tags:
        - release_links
      summary: Delete a release link
      description: Deletes an asset as a link from a release. This feature was introduced in GitLab 11.7.
      operationId: deleteApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the release
          required: true
          schema:
            type: string
        - name: link_id
          in: path
          description: The ID of the link
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Bad request
          content: {}
        "204":
          description: Delete a release link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Releases_Link'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/projects/{id}/packages/rpm/repodata/*file_name:
    get:
      tags:
        - rpm_packages
      summary: Download repository metadata files
      description: This feature was introduced in GitLab 15.7
      operationId: getApiV4ProjectsIdPackagesRpmRepodata*fileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: file_name
          in: query
          description: Repository metadata file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download repository metadata files
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rpm/*package_file_id/*file_name:
    get:
      tags:
        - rpm_packages
      summary: Download RPM package files
      description: This feature was introduced in GitLab 15.7
      operationId: getApiV4ProjectsIdPackagesRpm*packageFileId*fileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_file_id
          in: query
          description: RPM package file id
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: query
          description: RPM package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download RPM package files
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rpm:
    post:
      tags:
        - rpm_packages
      summary: Upload a RPM package
      description: This feature was introduced in GitLab 15.7
      operationId: postApiV4ProjectsIdPackagesRpm
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Upload a RPM package
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rpm/authorize:
    post:
      tags:
        - rpm_packages
      summary: Authorize package upload from workhorse
      description: This feature was introduced in GitLab 15.7
      operationId: postApiV4ProjectsIdPackagesRpmAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Authorize package upload from workhorse
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rubygems/{file_name}:
    get:
      tags:
        - rubygem_packages
      summary: Download the spec index file
      description: This feature was introduced in GitLab 13.9
      operationId: getApiV4ProjectsIdPackagesRubygemsFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: path
          description: Spec file name
          required: true
          schema:
            type: file
      responses:
        "200":
          description: Download the spec index file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rubygems/quick/Marshal.4.8/{file_name}:
    get:
      tags:
        - rubygem_packages
      summary: Download the gemspec file
      description: This feature was introduced in GitLab 13.9
      operationId: getApiV4ProjectsIdPackagesRubygemsQuickMarshal48FileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: path
          description: Gemspec file name
          required: true
          schema:
            type: file
      responses:
        "200":
          description: Download the gemspec file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rubygems/gems/{file_name}:
    get:
      tags:
        - rubygem_packages
      summary: Download the .gem package
      description: This feature was introduced in GitLab 13.9
      operationId: getApiV4ProjectsIdPackagesRubygemsGemsFileName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: integer
            format: int32
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: file
      responses:
        "200":
          description: Download the .gem package
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/rubygems/api/v1/gems/authorize:
    post:
      tags:
        - rubygem_packages
      summary: Authorize a gem upload from workhorse
      description: This feature was introduced in GitLab 13.9
      operationId: postApiV4ProjectsIdPackagesRubygemsApiV1GemsAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Authorize a gem upload from workhorse
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/projects/{id}/packages/rubygems/api/v1/gems:
    post:
      tags:
        - rubygem_packages
      summary: Upload a gem
      description: This feature was introduced in GitLab 13.9
      operationId: postApiV4ProjectsIdPackagesRubygemsApiV1Gems
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdPackagesRubygemsApiV1Gems'
        required: true
      responses:
        "201":
          description: Upload a gem
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdPackagesRubygemsApiV1Gems
  /api/v4/projects/{id}/packages/rubygems/api/v1/dependencies:
    get:
      tags:
        - rubygem_packages
      summary: Fetch a list of dependencies
      description: This feature was introduced in GitLab 13.9
      operationId: getApiV4ProjectsIdPackagesRubygemsApiV1Dependencies
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: integer
            format: int32
        - name: gems
          in: query
          description: Comma delimited gem names
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Fetch a list of dependencies
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}:
    get:
      tags:
        - terraform_registry
      summary: Download the latest version of a module
      description: This feature was introduced in GitLab 16.7
      operationId: getApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          description: Module system
          required: true
          schema:
            type: string
        - name: terraform-get
          in: query
          description: Terraform get redirection flag
          schema:
            type: string
            enum:
              - "1"
      responses:
        "204":
          description: Download the latest version of a module
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version:
    get:
      tags:
        - terraform_registry
      summary: Download a specific version of a module
      description: This feature was introduced in GitLab 16.7
      operationId: getApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersion
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          description: Module system
          required: true
          schema:
            type: string
        - name: module_version
          in: query
          description: Module version
          required: true
          schema:
            type: string
        - name: terraform-get
          in: query
          description: Terraform get redirection flag
          schema:
            type: string
            enum:
              - "1"
      responses:
        "204":
          description: Download a specific version of a module
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file/authorize:
    put:
      tags:
        - terraform_registry
      summary: Workhorse authorize Terraform Module package file
      description: This feature was introduced in GitLab 13.11
      operationId: putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          description: Module system
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize'
        required: true
      responses:
        "200":
          description: Workhorse authorize Terraform Module package file
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file:
    put:
      tags:
        - terraform_registry
      summary: Upload Terraform Module package file
      description: This feature was introduced in GitLab 13.11
      operationId: putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFile
      parameters:
        - name: id
          in: path
          description: The ID or full path of a project
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          description: Module name
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          description: Module system
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - module_version
              type: object
              properties:
                module_version:
                  type: string
                  description: Module version
                file:
                  type: string
                  description: The package file to be published (generated by Multipart middleware)
                  format: binary
        required: true
      responses:
        "201":
          description: Upload Terraform Module package file
          content: {}
        "400":
          description: Invalid file
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/terraform/state/{name}:
    get:
      tags:
        - terraform_state
      summary: Get a Terraform state by its name
      description: Get a Terraform state by its name
      operationId: getApiV4ProjectsIdTerraformStateName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of a Terraform state
          required: true
          schema:
            type: string
        - name: ID
          in: query
          description: Terraform state lock ID
          schema:
            type: string
      responses:
        "200":
          description: Get a Terraform state by its name
          content: {}
        "204":
          description: Empty state
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Validation failure
          content: {}
    post:
      tags:
        - terraform_state
      summary: Add a new Terraform state or update an existing one
      description: Add a new Terraform state or update an existing one
      operationId: postApiV4ProjectsIdTerraformStateName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Add a new Terraform state or update an existing one
          content: {}
        "204":
          description: No data provided
          content: {}
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Validation failure
          content: {}
        "413":
          description: Request Entity Too Large
          content: {}
    delete:
      tags:
        - terraform_state
      summary: Delete a Terraform state of a certain name
      description: Delete a Terraform state of a certain name
      operationId: deleteApiV4ProjectsIdTerraformStateName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Terraform state of a certain name
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Validation failure
          content: {}
  /api/v4/projects/{id}/terraform/state/{name}/lock:
    post:
      tags:
        - terraform_state
      summary: Lock a Terraform state of a certain name
      description: Lock a Terraform state of a certain name
      operationId: postApiV4ProjectsIdTerraformStateNameLock
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectsIdTerraformStateNameLock'
        required: true
      responses:
        "200":
          description: Lock a Terraform state of a certain name
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
        "422":
          description: Validation failure
          content: {}
      x-codegen-request-body-name: postApiV4ProjectsIdTerraformStateNameLock
    delete:
      tags:
        - terraform_state
      summary: Unlock a Terraform state of a certain name
      description: Unlock a Terraform state of a certain name
      operationId: deleteApiV4ProjectsIdTerraformStateNameLock
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: ID
          in: query
          description: Terraform state lock ID
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Unlock a Terraform state of a certain name
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Conflict
          content: {}
        "422":
          description: Validation failure
          content: {}
  /api/v4/projects/{id}/terraform/state/{name}/versions/{serial}:
    get:
      tags:
        - terraform_state
      summary: Get a Terraform state version
      description: Get a Terraform state version
      operationId: getApiV4ProjectsIdTerraformStateNameVersionsSerial
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of a Terraform state
          required: true
          schema:
            type: string
        - name: serial
          in: path
          description: The version number of the state
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a Terraform state version
          content:
            application/json:
              schema:
                type: string
                format: binary
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - terraform_state
      summary: Delete a Terraform state version
      description: Delete a Terraform state version
      operationId: deleteApiV4ProjectsIdTerraformStateNameVersionsSerial
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: serial
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Terraform state version
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/projects/{id}/hooks/{hook_id}/url_variables/{key}:
    put:
      tags:
        - projects
      description: Set a url variable
      operationId: putApiV4ProjectsIdHooksHookIdUrlVariablesKey
      parameters:
        - name: hook_id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ProjectsIdHooksHookIdUrlVariablesKey'
        required: true
      responses:
        "200":
          description: Set a url variable
          content: {}
      x-codegen-request-body-name: putApiV4ProjectsIdHooksHookIdUrlVariablesKey
    delete:
      tags:
        - projects
      description: Un-Set a url variable
      operationId: deleteApiV4ProjectsIdHooksHookIdUrlVariablesKey
      parameters:
        - name: hook_id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Un-Set a url variable
          content: {}
  /api/v4/admin/batched_background_migrations/{id}:
    get:
      tags:
        - batched_background_migrations
      description: Retrieve a batched background migration
      operationId: getApiV4AdminBatchedBackgroundMigrationsId
      parameters:
        - name: database
          in: query
          description: The name of the database
          schema:
            type: string
            default: main
            enum:
              - main
              - ci
              - main_clusterwide
              - embedding
              - geo
        - name: id
          in: path
          description: The batched background migration id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Retrieve a batched background migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BatchedBackgroundMigration'
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: 403 Forbidden
          content: {}
        "404":
          description: 404 Not found
          content: {}
  /api/v4/admin/batched_background_migrations:
    get:
      tags:
        - batched_background_migrations
      description: Get the list of batched background migrations
      operationId: getApiV4AdminBatchedBackgroundMigrations
      parameters:
        - name: database
          in: query
          description: The name of the database, the default `main`
          schema:
            type: string
            default: main
            enum:
              - main
              - ci
              - main_clusterwide
              - embedding
              - geo
      responses:
        "200":
          description: Get the list of batched background migrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BatchedBackgroundMigration'
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: 403 Forbidden
          content: {}
  /api/v4/admin/batched_background_migrations/{id}/resume:
    put:
      tags:
        - batched_background_migrations
      description: Resume a batched background migration
      operationId: putApiV4AdminBatchedBackgroundMigrationsIdResume
      parameters:
        - name: id
          in: path
          description: The batched background migration id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4AdminBatchedBackgroundMigrationsIdResume'
        required: true
      responses:
        "200":
          description: Resume a batched background migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BatchedBackgroundMigration'
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: 403 Forbidden
          content: {}
        "404":
          description: 404 Not found
          content: {}
        "422":
          description: You can resume only `paused` batched background migrations.
          content: {}
      x-codegen-request-body-name: putApiV4AdminBatchedBackgroundMigrationsIdResume
  /api/v4/admin/batched_background_migrations/{id}/pause:
    put:
      tags:
        - batched_background_migrations
      description: Pause a batched background migration
      operationId: putApiV4AdminBatchedBackgroundMigrationsIdPause
      parameters:
        - name: id
          in: path
          description: The batched background migration id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4AdminBatchedBackgroundMigrationsIdPause'
        required: true
      responses:
        "200":
          description: Pause a batched background migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BatchedBackgroundMigration'
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: 403 Forbidden
          content: {}
        "404":
          description: 404 Not found
          content: {}
        "422":
          description: You can pause only `active` batched background migrations.
          content: {}
      x-codegen-request-body-name: putApiV4AdminBatchedBackgroundMigrationsIdPause
  /api/v4/admin/ci/variables:
    get:
      tags:
        - ci_variables
      description: List all instance-level variables
      operationId: getApiV4AdminCiVariables
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List all instance-level variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
    post:
      tags:
        - ci_variables
      description: Create a new instance-level variable
      operationId: postApiV4AdminCiVariables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4AdminCiVariables'
        required: true
      responses:
        "201":
          description: Create a new instance-level variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "400":
          description: 400 Bad Request
          content: {}
      x-codegen-request-body-name: postApiV4AdminCiVariables
  /api/v4/admin/ci/variables/{key}:
    get:
      tags:
        - ci_variables
      description: Get the details of a specific instance-level variable
      operationId: getApiV4AdminCiVariablesKey
      parameters:
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get the details of a specific instance-level variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "404":
          description: Instance Variable Not Found
          content: {}
    put:
      tags:
        - ci_variables
      description: Update an instance-level variable
      operationId: putApiV4AdminCiVariablesKey
      parameters:
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4AdminCiVariablesKey'
        required: true
      responses:
        "200":
          description: Update an instance-level variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
        "404":
          description: Instance Variable Not Found
          content: {}
      x-codegen-request-body-name: putApiV4AdminCiVariablesKey
    delete:
      tags:
        - ci_variables
      description: Delete an existing instance-level variable
      operationId: deleteApiV4AdminCiVariablesKey
      parameters:
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        "404":
          description: Instance Variable Not Found
          content: {}
        "204":
          description: Delete an existing instance-level variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Variable'
  /api/v4/admin/databases/{database_name}/dictionary/tables/{table_name}:
    get:
      tags:
        - admin
      description: Retrieve dictionary details
      operationId: getApiV4AdminDatabasesDatabaseNameDictionaryTablesTableName
      parameters:
        - name: database_name
          in: path
          description: The database name
          required: true
          schema:
            type: string
            enum:
              - main
              - ci
        - name: table_name
          in: path
          description: The table name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve dictionary details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Dictionary_Table'
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: 403 Forbidden
          content: {}
        "404":
          description: 404 Not found
          content: {}
  /api/v4/admin/clusters:
    get:
      tags:
        - clusters
      summary: List instance clusters
      description: This feature was introduced in GitLab 13.2. Returns a list of instance clusters.
      operationId: getApiV4AdminClusters
      responses:
        "200":
          description: List instance clusters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Cluster'
        "403":
          description: Forbidden
          content: {}
  /api/v4/admin/clusters/{cluster_id}:
    get:
      tags:
        - clusters
      summary: Get a single instance cluster
      description: This feature was introduced in GitLab 13.2. Returns a single instance cluster.
      operationId: getApiV4AdminClustersClusterId
      parameters:
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single instance cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Cluster'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - clusters
      summary: Edit instance cluster
      description: This feature was introduced in GitLab 13.2. Updates an existing instance cluster.
      operationId: putApiV4AdminClustersClusterId
      parameters:
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4AdminClustersClusterId'
        required: true
      responses:
        "200":
          description: Edit instance cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Cluster'
        "400":
          description: Validation error
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: putApiV4AdminClustersClusterId
    delete:
      tags:
        - clusters
      summary: Delete instance cluster
      description: This feature was introduced in GitLab 13.2. Deletes an existing instance cluster. Does not remove existing resources within the connected Kubernetes cluster.
      operationId: deleteApiV4AdminClustersClusterId
      parameters:
        - name: cluster_id
          in: path
          description: The cluster ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "403":
          description: Forbidden
          content: {}
        "204":
          description: Delete instance cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Cluster'
        "404":
          description: Not found
          content: {}
  /api/v4/admin/clusters/add:
    post:
      tags:
        - clusters
      summary: Add existing instance cluster
      description: This feature was introduced in GitLab 13.2. Adds an existing Kubernetes instance cluster.
      operationId: postApiV4AdminClustersAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4AdminClustersAdd'
        required: true
      responses:
        "201":
          description: Add existing instance cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Cluster'
        "400":
          description: Validation error
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4AdminClustersAdd
  /api/v4/admin/migrations/{timestamp}/mark:
    post:
      tags:
        - migrations
      description: Mark the migration as successfully executed
      operationId: postApiV4AdminMigrationsTimestampMark
      parameters:
        - name: timestamp
          in: path
          description: The migration version timestamp
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4AdminMigrationsTimestampMark'
        required: true
      responses:
        "201":
          description: 201 Created
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: 403 Forbidden
          content: {}
        "404":
          description: 404 Not found
          content: {}
        "422":
          description: You can mark only pending migrations
          content: {}
      x-codegen-request-body-name: postApiV4AdminMigrationsTimestampMark
  /api/v4/broadcast_messages:
    get:
      tags:
        - broadcast_messages
      summary: Get all broadcast messages
      description: This feature was introduced in GitLab 8.12.
      operationId: getApiV4BroadcastMessages
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all broadcast messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_System_BroadcastMessage'
    post:
      tags:
        - broadcast_messages
      summary: Create a broadcast message
      description: This feature was introduced in GitLab 8.12.
      operationId: postApiV4BroadcastMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4BroadcastMessages'
        required: true
      responses:
        "201":
          description: Create a broadcast message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_System_BroadcastMessage'
      x-codegen-request-body-name: postApiV4BroadcastMessages
  /api/v4/broadcast_messages/{id}:
    get:
      tags:
        - broadcast_messages
      summary: Get a specific broadcast message
      description: This feature was introduced in GitLab 8.12.
      operationId: getApiV4BroadcastMessagesId
      parameters:
        - name: id
          in: path
          description: Broadcast message ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific broadcast message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_System_BroadcastMessage'
    put:
      tags:
        - broadcast_messages
      summary: Update a broadcast message
      description: This feature was introduced in GitLab 8.12.
      operationId: putApiV4BroadcastMessagesId
      parameters:
        - name: id
          in: path
          description: Broadcast message ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4BroadcastMessagesId'
        required: true
      responses:
        "200":
          description: Update a broadcast message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_System_BroadcastMessage'
      x-codegen-request-body-name: putApiV4BroadcastMessagesId
    delete:
      tags:
        - broadcast_messages
      summary: Delete a broadcast message
      description: This feature was introduced in GitLab 8.12.
      operationId: deleteApiV4BroadcastMessagesId
      parameters:
        - name: id
          in: path
          description: Broadcast message ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Delete a broadcast message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_System_BroadcastMessage'
  /api/v4/applications:
    get:
      tags:
        - applications
      summary: Get applications
      description: List all registered applications
      operationId: getApiV4Applications
      responses:
        "200":
          description: Get applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Application'
    post:
      tags:
        - applications
      summary: Create a new application
      description: This feature was introduced in GitLab 10.5
      operationId: postApiV4Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Applications'
        required: true
      responses:
        "200":
          description: Create a new application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ApplicationWithSecret'
      x-codegen-request-body-name: postApiV4Applications
  /api/v4/applications/{id}:
    delete:
      tags:
        - applications
      summary: Delete an application
      description: Delete a specific application
      operationId: deleteApiV4ApplicationsId
      parameters:
        - name: id
          in: path
          description: The ID of the application (not the application_id)
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete an application
          content: {}
  /api/v4/applications/{id}/renew-secret:
    post:
      tags:
        - applications
      summary: Renew an application secret
      description: Renew the secret of a specific application
      operationId: postApiV4ApplicationsIdRenewSecret
      parameters:
        - name: id
          in: path
          description: The ID of the application (not the application_id)
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Renew an application secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ApplicationWithSecret'
  /api/v4/avatar:
    get:
      tags:
        - avatar
      description: Return avatar url for a user
      operationId: getApiV4Avatar
      parameters:
        - name: email
          in: query
          description: Public email address of the user
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: Single pixel dimension for Gravatar images
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return avatar url for a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Avatar'
  /api/v4/bulk_imports:
    get:
      tags:
        - bulk_imports
      summary: List all GitLab Migrations
      description: This feature was introduced in GitLab 14.1.
      operationId: getApiV4BulkImports
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Return GitLab Migrations sorted in created by `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: status
          in: query
          description: Return GitLab Migrations with specified status
          schema:
            type: string
            enum:
              - created
              - started
              - finished
              - timeout
              - failed
              - canceled
      responses:
        "200":
          description: List all GitLab Migrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BulkImport'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
    post:
      tags:
        - bulk_imports
      summary: Start a new GitLab Migration
      description: This feature was introduced in GitLab 14.2.
      operationId: postApiV4BulkImports
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - configuration[access_token]
                - configuration[url]
                - entities[destination_namespace]
                - entities[source_full_path]
                - entities[source_type]
              type: object
              properties:
                configuration[url]:
                  type: string
                  description: Source GitLab instance URL
                configuration[access_token]:
                  type: string
                  description: Access token to the source GitLab instance
                entities[source_type]:
                  type: array
                  description: Source entity type
                  items:
                    type: string
                    enum:
                      - group_entity
                      - project_entity
                entities[source_full_path]:
                  type: array
                  description: Relative path of the source entity to import
                  items:
                    type: string
                entities[destination_namespace]:
                  type: array
                  description: Destination namespace for the entity
                  items:
                    type: string
                entities[destination_slug]:
                  type: array
                  description: Destination slug for the entity
                  items:
                    type: string
                entities[destination_name]:
                  type: array
                  description: 'Deprecated: Use :destination_slug instead. Destination slug for the entity'
                  items:
                    type: string
                entities[migrate_projects]:
                  type: array
                  description: Indicates group migration should include nested projects
                  items:
                    type: boolean
        required: true
      responses:
        "200":
          description: Start a new GitLab Migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BulkImport'
        "401":
          description: Unauthorized
          content: {}
        "400":
          description: Bad request
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/bulk_imports/entities:
    get:
      tags:
        - bulk_imports
      summary: List all GitLab Migrations' entities
      description: This feature was introduced in GitLab 14.1.
      operationId: getApiV4BulkImportsEntities
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Return GitLab Migrations sorted in created by `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: status
          in: query
          description: Return all GitLab Migrations' entities with specified status
          schema:
            type: string
            enum:
              - created
              - started
              - finished
              - timeout
              - failed
              - canceled
      responses:
        "200":
          description: List all GitLab Migrations' entities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BulkImports'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/bulk_imports/{import_id}:
    get:
      tags:
        - bulk_imports
      summary: Get GitLab Migration details
      description: This feature was introduced in GitLab 14.1.
      operationId: getApiV4BulkImportsImportId
      parameters:
        - name: import_id
          in: path
          description: The ID of user's GitLab Migration
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get GitLab Migration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BulkImport'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/bulk_imports/{import_id}/entities:
    get:
      tags:
        - bulk_imports
      summary: List GitLab Migration entities
      description: This feature was introduced in GitLab 14.1.
      operationId: getApiV4BulkImportsImportIdEntities
      parameters:
        - name: import_id
          in: path
          description: The ID of user's GitLab Migration
          required: true
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: Return import entities with specified status
          schema:
            type: string
            enum:
              - created
              - started
              - finished
              - timeout
              - failed
              - canceled
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List GitLab Migration entities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BulkImports'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/bulk_imports/{import_id}/entities/{entity_id}:
    get:
      tags:
        - bulk_imports
      summary: Get GitLab Migration entity details
      description: This feature was introduced in GitLab 14.1.
      operationId: getApiV4BulkImportsImportIdEntitiesEntityId
      parameters:
        - name: import_id
          in: path
          description: The ID of user's GitLab Migration
          required: true
          schema:
            type: integer
            format: int32
        - name: entity_id
          in: path
          description: The ID of GitLab Migration entity
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get GitLab Migration entity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BulkImports'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/bulk_imports/{import_id}/entities/{entity_id}/failures:
    get:
      tags:
        - bulk_imports
      summary: Get GitLab Migration entity failures
      description: This feature was introduced in GitLab 16.6
      operationId: getApiV4BulkImportsImportIdEntitiesEntityIdFailures
      parameters:
        - name: import_id
          in: path
          description: The ID of user's GitLab Migration
          required: true
          schema:
            type: integer
            format: int32
        - name: entity_id
          in: path
          description: The ID of GitLab Migration entity
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get GitLab Migration entity failures
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BulkImports_EntityFailure'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/bulk_imports/{import_id}/cancel:
    post:
      tags:
        - bulk_imports
      summary: Cancel GitLab Migration
      description: This feature was introduced in GitLab 17.1
      operationId: postApiV4BulkImportsImportIdCancel
      parameters:
        - name: import_id
          in: path
          description: The ID of user's GitLab Migration
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Cancel GitLab Migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BulkImport'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
  /api/v4/job:
    get:
      tags:
        - job
      description: Get current job using job token
      operationId: getApiV4Job
      responses:
        "200":
          description: Get current job using job token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/job/allowed_agents:
    get:
      tags:
        - job
      summary: Get current agents
      description: Retrieves a list of agents for the given job token
      operationId: getApiV4JobAllowedAgents
      responses:
        "200":
          description: Get current agents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Job'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/runners:
    get:
      tags:
        - runners
      summary: List owned runners
      description: Get runners available for user
      operationId: getApiV4Runners
      parameters:
        - name: scope
          in: query
          description: 'Deprecated: Use `type` or `status` instead. The scope of runners to return'
          schema:
            type: string
            enum:
              - specific
              - shared
              - instance_type
              - group_type
              - project_type
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: type
          in: query
          description: The type of runners to return
          schema:
            type: string
            enum:
              - instance_type
              - group_type
              - project_type
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          schema:
            type: boolean
        - name: status
          in: query
          description: The status of runners to return
          schema:
            type: string
            enum:
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: tag_list
          in: query
          description: A list of runner tags
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: version_prefix
          in: query
          description: The version prefix of runners to return
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get runners available for user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "400":
          description: Scope contains invalid value
          content: {}
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
        - runners
      summary: Register a new runner
      description: Register a new runner for the instance
      operationId: postApiV4Runners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Runners'
        required: true
      responses:
        "201":
          description: Register a new runner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_RunnerRegistrationDetails'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "410":
          description: Gone
          content: {}
      x-codegen-request-body-name: postApiV4Runners
    delete:
      tags:
        - runners
      summary: Delete a runner by authentication token
      description: Delete a registered runner
      operationId: deleteApiV4Runners
      parameters:
        - name: token
          in: query
          description: The runner's authentication token
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a registered runner
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/runners/managers:
    delete:
      tags:
        - runners
      summary: Internal endpoint that deletes a runner manager by authentication token and system ID.
      description: Delete a registered runner manager
      operationId: deleteApiV4RunnersManagers
      parameters:
        - name: token
          in: query
          description: The runner's authentication token
          required: true
          schema:
            type: string
        - name: system_id
          in: query
          description: The runner's system identifier.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Runner manager was deleted
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/runners/verify:
    post:
      tags:
        - runners
      summary: Verify authentication for a registered runner
      description: Validate authentication credentials
      operationId: postApiV4RunnersVerify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4RunnersVerify'
        required: true
      responses:
        "200":
          description: Credentials are valid
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: postApiV4RunnersVerify
  /api/v4/runners/reset_authentication_token:
    post:
      tags:
        - runners
      description: Reset runner authentication token with current token
      operationId: postApiV4RunnersResetAuthenticationToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4RunnersResetAuthenticationToken'
        required: true
      responses:
        "201":
          description: Reset runner authentication token with current token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResetTokenResult'
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: postApiV4RunnersResetAuthenticationToken
  /api/v4/runners/all:
    get:
      tags:
        - runners
      summary: List all runners
      description: Get a list of all runners in the GitLab instance (shared and project). Access is restricted to users with administrator access.
      operationId: getApiV4RunnersAll
      parameters:
        - name: scope
          in: query
          description: 'Deprecated: Use `type` or `status` instead. The scope of runners to return'
          schema:
            type: string
            enum:
              - specific
              - shared
              - instance_type
              - group_type
              - project_type
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: type
          in: query
          description: The type of runners to return
          schema:
            type: string
            enum:
              - instance_type
              - group_type
              - project_type
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          schema:
            type: boolean
        - name: status
          in: query
          description: The status of runners to return
          schema:
            type: string
            enum:
              - active
              - paused
              - online
              - offline
              - never_contacted
              - stale
        - name: tag_list
          in: query
          description: A list of runner tags
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: version_prefix
          in: query
          description: The version prefix of runners to return
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all runners - shared and project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "400":
          description: Scope contains invalid value
          content: {}
        "401":
          description: Unauthorized
          content: {}
  /api/v4/runners/{id}:
    get:
      tags:
        - runners
      summary: Get runner's details
      description: At least the Maintainer role is required to get runner details at the project and group level. Instance-level runner details via this endpoint are available to all signed in users.
      operationId: getApiV4RunnersId
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get runner's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_RunnerDetails'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: No access granted
          content: {}
        "404":
          description: Runner not found
          content: {}
    put:
      tags:
        - runners
      summary: Update details of a runner
      description: Update runner's details
      operationId: putApiV4RunnersId
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4RunnersId'
        required: true
      responses:
        "200":
          description: Update runner's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_RunnerDetails'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: No access granted
          content: {}
        "404":
          description: Runner not found
          content: {}
      x-codegen-request-body-name: putApiV4RunnersId
    delete:
      tags:
        - runners
      summary: Delete a runner
      description: Remove a runner
      operationId: deleteApiV4RunnersId
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "401":
          description: Unauthorized
          content: {}
        "204":
          description: Remove a runner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_Runner'
        "403":
          description: No access granted
          content: {}
        "404":
          description: Runner not found
          content: {}
        "412":
          description: Precondition Failed
          content: {}
  /api/v4/runners/{id}/jobs:
    get:
      tags:
        - runners
        - jobs
      summary: List runner's jobs
      description: List jobs that are being processed or were processed by the specified runner. The list of jobs is limited to projects where the user has at least the Reporter role.
      operationId: getApiV4RunnersIdJobs
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
            format: int32
        - name: system_id
          in: query
          description: System ID associated with the runner manager
          schema:
            type: string
        - name: status
          in: query
          description: Status of the job
          schema:
            type: string
            enum:
              - created
              - waiting_for_resource
              - preparing
              - waiting_for_callback
              - pending
              - running
              - success
              - failed
              - canceling
              - canceled
              - skipped
              - manual
              - scheduled
        - name: order_by
          in: query
          description: Order by `id`
          schema:
            type: string
            enum:
              - id
        - name: sort
          in: query
          description: Sort by `asc` or `desc` order. Specify `order_by` as well, including for `id`
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: cursor
          in: query
          description: Cursor for obtaining the next set of records
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List jobs running on a runner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_JobBasicWithProject'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: No access granted
          content: {}
        "404":
          description: Runner not found
          content: {}
  /api/v4/runners/{id}/reset_authentication_token:
    post:
      tags:
        - runners
      summary: Reset runner's authentication token
      description: Reset runner authentication token
      operationId: postApiV4RunnersIdResetAuthenticationToken
      parameters:
        - name: id
          in: path
          description: The ID of the runner
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Reset runner authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResetTokenResult'
        "403":
          description: No access granted
          content: {}
        "404":
          description: Runner not found
          content: {}
  /api/v4/runners/reset_registration_token:
    post:
      tags:
        - runners
        - groups
      summary: Reset instance's runner registration token
      description: Reset runner registration token
      operationId: postApiV4RunnersResetRegistrationToken
      responses:
        "201":
          description: Reset runner registration token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_ResetTokenResult'
        "403":
          description: Forbidden
          content: {}
  /api/v4/jobs/request:
    post:
      tags:
        - jobs
      description: Request a job
      operationId: postApiV4JobsRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4JobsRequest'
        required: true
      responses:
        "201":
          description: Job was scheduled
          content: {}
        "204":
          description: No job for Runner
          content: {}
        "403":
          description: Forbidden
          content: {}
        "409":
          description: Conflict
          content: {}
      x-codegen-request-body-name: postApiV4JobsRequest
  /api/v4/jobs/{id}:
    put:
      tags:
        - jobs
      description: Update a job
      operationId: putApiV4JobsId
      parameters:
        - name: id
          in: path
          description: Job's ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4JobsId'
        required: true
      responses:
        "200":
          description: Job was updated
          content: {}
        "202":
          description: Update accepted
          content: {}
        "400":
          description: Unknown parameters
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: putApiV4JobsId
  /api/v4/jobs/{id}/trace:
    patch:
      tags:
        - jobs
      description: Append a patch to the job trace
      operationId: patchApiV4JobsIdTrace
      parameters:
        - name: id
          in: path
          description: Job's ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiV4JobsIdTrace'
        required: true
      responses:
        "202":
          description: Trace was patched
          content: {}
        "400":
          description: Missing Content-Range header
          content: {}
        "403":
          description: Forbidden
          content: {}
        "416":
          description: Range not satisfiable
          content: {}
      x-codegen-request-body-name: patchApiV4JobsIdTrace
  /api/v4/jobs/{id}/artifacts/authorize:
    post:
      tags:
        - jobs
      description: Authorize uploading job artifact
      operationId: postApiV4JobsIdArtifactsAuthorize
      parameters:
        - name: id
          in: path
          description: Job's ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4JobsIdArtifactsAuthorize'
        required: true
      responses:
        "200":
          description: Upload allowed
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Artifacts support not enabled
          content: {}
        "413":
          description: File too large
          content: {}
      x-codegen-request-body-name: postApiV4JobsIdArtifactsAuthorize
  /api/v4/jobs/{id}/artifacts:
    get:
      tags:
        - jobs
      description: Download the artifacts file for job
      operationId: getApiV4JobsIdArtifacts
      parameters:
        - name: id
          in: path
          description: Job's ID
          required: true
          schema:
            type: integer
            format: int32
        - name: token
          in: query
          description: Job's authentication token
          schema:
            type: string
        - name: direct_download
          in: query
          description: Perform direct download from remote storage instead of proxying artifacts
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Download allowed
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Artifact not found
          content: {}
    post:
      tags:
        - jobs
      description: Upload a job artifact
      operationId: postApiV4JobsIdArtifacts
      parameters:
        - name: id
          in: path
          description: Job's ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4JobsIdArtifacts'
        required: true
      responses:
        "201":
          description: Artifact uploaded
          content: {}
        "400":
          description: Bad request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Artifacts support not enabled
          content: {}
        "413":
          description: File too large
          content: {}
      x-codegen-request-body-name: postApiV4JobsIdArtifacts
  /api/v4/group/{id}/-/packages/composer/packages:
    get:
      tags:
        - composer_packages
      summary: Composer packages endpoint at group level
      description: This feature was introduced in GitLab 13.1
      operationId: getApiV4GroupIdPackagesComposerPackages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Composer packages endpoint at group level
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/group/{id}/-/packages/composer/p/{sha}:
    get:
      tags:
        - composer_packages
      summary: Composer packages endpoint at group level for packages list
      description: This feature was introduced in GitLab 13.1
      operationId: getApiV4GroupIdPackagesComposerPSha
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a group
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: Shasum of current json
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Composer packages endpoint at group level for packages list
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/group/{id}/-/packages/composer/p2/*package_name:
    get:
      tags:
        - composer_packages
      summary: Composer v2 packages p2 endpoint at group level for package versions metadata
      description: This feature was introduced in GitLab 13.1
      operationId: getApiV4GroupIdPackagesComposerP2*packageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a group
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The Composer package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Composer v2 packages p2 endpoint at group level for package versions metadata
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/group/{id}/-/packages/composer/*package_name:
    get:
      tags:
        - composer_packages
      summary: Composer packages endpoint at group level for package versions metadata
      description: This feature was introduced in GitLab 12.1
      operationId: getApiV4GroupIdPackagesComposer*packageName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a group
          required: true
          schema:
            type: string
        - name: package_name
          in: query
          description: The Composer package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Composer packages endpoint at group level for package versions metadata
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/ping:
    get:
      tags:
        - conan_packages
      summary: Ping the Conan API
      description: This feature was introduced in GitLab 12.2
      operationId: getApiV4PackagesConanV1Ping
      responses:
        "200":
          description: Ping the Conan API
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/search:
    get:
      tags:
        - conan_packages
      summary: Search for packages
      description: This feature was introduced in GitLab 12.4
      operationId: getApiV4PackagesConanV1ConansSearch
      parameters:
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Search for packages
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/users/authenticate:
    get:
      tags:
        - conan_packages
      summary: Authenticate user against conan CLI
      description: This feature was introduced in GitLab 12.2
      operationId: getApiV4PackagesConanV1UsersAuthenticate
      responses:
        "200":
          description: Authenticate user against conan CLI
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/users/check_credentials:
    get:
      tags:
        - conan_packages
      summary: Check for valid user credentials per conan CLI
      description: This feature was introduced in GitLab 12.4
      operationId: getApiV4PackagesConanV1UsersCheckCredentials
      responses:
        "200":
          description: Check for valid user credentials per conan CLI
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}:
    get:
      tags:
        - conan_packages
      summary: Package Snapshot
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReference
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanPackageSnapshot'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}:
    get:
      tags:
        - conan_packages
      summary: Recipe Snapshot
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanRecipeSnapshot'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    delete:
      tags:
        - conan_packages
      summary: Delete Package
      description: This feature was introduced in GitLab 12.5
      operationId: deleteApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete Package
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest:
    get:
      tags:
        - conan_packages
      summary: Package Digest
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDigest
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Digest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanPackageManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest:
    get:
      tags:
        - conan_packages
      summary: Recipe Digest
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDigest
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Digest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanRecipeManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls:
    get:
      tags:
        - conan_packages
      summary: Package Download Urls
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDownloadUrls
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Download Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanPackageManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls:
    get:
      tags:
        - conan_packages
      summary: Recipe Download Urls
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDownloadUrls
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Download Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanRecipeManifest'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls:
    post:
      tags:
        - conan_packages
      summary: Package Upload Urls
      description: This feature was introduced in GitLab 12.4
      operationId: postApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceUploadUrls
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan package ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Package Upload Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanUploadUrls'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls:
    post:
      tags:
        - conan_packages
      summary: Recipe Upload Urls
      description: This feature was introduced in GitLab 12.4
      operationId: postApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelUploadUrls
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe Upload Urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ConanPackage_ConanUploadUrls'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}:
    get:
      tags:
        - conan_packages
      summary: Download recipe files
      description: This feature was introduced in GitLab 12.6
      operationId: getApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Download recipe files
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - conan_packages
      summary: Upload recipe package files
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName'
        required: true
      responses:
        "200":
          description: Upload recipe package files
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName
  /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize:
    put:
      tags:
        - conan_packages
      summary: Workhorse authorize the conan recipe file
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileNameAuthorize
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Workhorse authorize the conan recipe file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}:
    get:
      tags:
        - conan_packages
      summary: Download package files
      description: This feature was introduced in GitLab 12.5
      operationId: getApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan Package ID
          required: true
          schema:
            type: string
        - name: package_revision
          in: path
          description: Conan Package Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Download package files
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
    put:
      tags:
        - conan_packages
      summary: Upload package files
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan Package ID
          required: true
          schema:
            type: string
        - name: package_revision
          in: path
          description: Conan Package Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName'
        required: true
      responses:
        "200":
          description: Upload package files
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
  /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize:
    put:
      tags:
        - conan_packages
      summary: Workhorse authorize the conan package file
      description: This feature was introduced in GitLab 12.6
      operationId: putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileNameAuthorize
      parameters:
        - name: package_name
          in: path
          description: Package name
          required: true
          schema:
            type: string
        - name: package_version
          in: path
          description: Package version
          required: true
          schema:
            type: string
        - name: package_username
          in: path
          description: Package username
          required: true
          schema:
            type: string
        - name: package_channel
          in: path
          description: Package channel
          required: true
          schema:
            type: string
        - name: recipe_revision
          in: path
          description: Conan Recipe Revision
          required: true
          schema:
            type: string
        - name: conan_package_reference
          in: path
          description: Conan Package ID
          required: true
          schema:
            type: string
        - name: package_revision
          in: path
          description: Conan Package Revision
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
            enum:
              - conanfile.py
              - conanmanifest.txt
              - conan_sources.tgz
              - conan_export.tgz
              - conaninfo.txt
              - conan_package.tgz
      responses:
        "200":
          description: Workhorse authorize the conan package file
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/maven/*path/{file_name}:
    get:
      tags:
        - maven_packages
      summary: Download the maven package file at instance level
      description: This feature was introduced in GitLab 11.6
      operationId: getApiV4PackagesMaven*pathFileName
      parameters:
        - name: path
          in: query
          description: Package path
          required: true
          schema:
            type: string
        - name: file_name
          in: path
          description: Package file name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download the maven package file at instance level
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/npm/-/package/*package_name/dist-tags:
    get:
      tags:
        - npm_packages
      summary: Get all tags for a given an NPM package
      description: This feature was introduced in GitLab 12.7
      operationId: getApiV4PackagesNpmPackage*packageNameDistTags
      parameters:
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get all tags for a given an NPM package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NpmPackageTag'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/npm/-/package/*package_name/dist-tags/{tag}:
    put:
      tags:
        - npm_packages
      summary: Create or Update the given tag for the given NPM package and version
      description: This feature was introduced in GitLab 12.7
      operationId: putApiV4PackagesNpmPackage*packageNameDistTagsTag
      parameters:
        - name: tag
          in: path
          description: Package dist-tag
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4PackagesNpmPackage*packageNameDistTagsTag'
        required: true
      responses:
        "204":
          description: Create or Update the given tag for the given NPM package and version
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      x-codegen-request-body-name: putApiV4PackagesNpmPackage*packageNameDistTagsTag
    delete:
      tags:
        - npm_packages
      summary: Deletes the given tag
      description: This feature was introduced in GitLab 12.7
      operationId: deleteApiV4PackagesNpmPackage*packageNameDistTagsTag
      parameters:
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
        - name: tag
          in: path
          description: Package dist-tag
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deletes the given tag
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/npm/*package_name:
    get:
      tags:
        - npm_packages
      summary: NPM registry metadata endpoint
      description: This feature was introduced in GitLab 11.8
      operationId: getApiV4PackagesNpm*packageName
      parameters:
        - name: package_name
          in: query
          description: Package name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NpmPackage'
        "302":
          description: Found (redirect)
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/npm/-/npm/v1/security/advisories/bulk:
    post:
      tags:
        - npm_packages
      summary: NPM registry bulk advisory endpoint
      description: This feature was introduced in GitLab 15.6
      operationId: postApiV4PackagesNpmNpmV1SecurityAdvisoriesBulk
      responses:
        "200":
          description: Ok
          content: {}
        "307":
          description: Temporary Redirect
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/npm/-/npm/v1/security/audits/quick:
    post:
      tags:
        - npm_packages
      summary: NPM registry quick audit endpoint
      description: This feature was introduced in GitLab 15.6
      operationId: postApiV4PackagesNpmNpmV1SecurityAuditsQuick
      responses:
        "200":
          description: Ok
          content: {}
        "307":
          description: Temporary Redirect
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/versions:
    get:
      tags:
        - terraform_registry
      summary: List versions for a module
      description: List versions for a module
      operationId: getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystemVersions
      parameters:
        - name: module_namespace
          in: path
          description: Group's ID or slug
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List versions for a module
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Terraform_ModuleVersions'
        "403":
          description: Forbidden
          content: {}
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/download:
    get:
      tags:
        - terraform_registry
      summary: Get download location for the latest version of a module
      description: Download the latest version of a module
      operationId: getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystemDownload
      parameters:
        - name: module_namespace
          in: path
          description: Group's ID or slug
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          required: true
          schema:
            type: string
      responses:
        "302":
          description: Get download location for the latest version of a module
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}:
    get:
      tags:
        - terraform_registry
      summary: Get details about the latest version of a module
      description: Get details about the latest version of a module
      operationId: getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem
      parameters:
        - name: module_namespace
          in: path
          description: Group's ID or slug
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get details about the latest version of a module
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Terraform_ModuleVersion'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/download:
    get:
      tags:
        - terraform_registry
      summary: Get download location for specific version of a module
      description: Download specific version of a module
      operationId: getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem*moduleVersionDownload
      parameters:
        - name: module_namespace
          in: path
          description: Group's ID or slug
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          required: true
          schema:
            type: string
        - name: module_version
          in: query
          description: Module version
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Get download location for specific version of a module
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/file:
    get:
      tags:
        - terraform_registry
      summary: Download specific version of a module
      description: Download specific version of a module
      operationId: getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem*moduleVersionFile
      parameters:
        - name: module_namespace
          in: path
          description: Group's ID or slug
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          required: true
          schema:
            type: string
        - name: module_version
          in: query
          description: Module version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Download specific version of a module
          content:
            application/json:
              schema:
                type: string
                format: binary
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version:
    get:
      tags:
        - terraform_registry
      summary: Get details about specific version of a module
      description: Get details about specific version of a module
      operationId: getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem*moduleVersion
      parameters:
        - name: module_namespace
          in: path
          description: Group's ID or slug
          required: true
          schema:
            type: string
        - name: module_name
          in: path
          required: true
          schema:
            type: string
        - name: module_system
          in: path
          required: true
          schema:
            type: string
        - name: module_version
          in: query
          description: Module version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get details about specific version of a module
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Terraform_ModuleVersion'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/container_registry_event/events:
    post:
      tags:
        - container_registry_event
      summary: Receives notifications from the container registry when an operation occurs
      description: This feature was introduced in GitLab 12.10
      operationId: postApiV4ContainerRegistryEventEvents
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Invalid Token
          content: {}
  /api/v4/registry/repositories/{id}:
    get:
      tags:
        - container_registry
      summary: Get a container repository
      description: This feature was introduced in GitLab 13.6.
      operationId: getApiV4RegistryRepositoriesId
      parameters:
        - name: id
          in: path
          description: The ID of the repository
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: Determines if tags should be included
          schema:
            type: boolean
            default: false
        - name: tags_count
          in: query
          description: Determines if the tags count should be included
          schema:
            type: boolean
            default: false
        - name: size
          in: query
          description: Determines if the size should be included
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a container repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ContainerRegistry_Repository'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Repository Not Found
          content: {}
  /api/v4/events:
    get:
      tags:
        - events
      summary: List currently authenticated user's events
      description: This feature was introduced in GitLab 9.3.
      operationId: getApiV4Events
      parameters:
        - name: scope
          in: query
          description: Include all events across a user’s projects
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: action
          in: query
          description: Event action to filter on
          schema:
            type: string
        - name: target_type
          in: query
          description: Event target type to filter on
          schema:
            type: string
            enum:
              - issue
              - milestone
              - merge_request
              - note
              - project
              - snippet
              - user
              - wiki
              - design
        - name: before
          in: query
          description: Include only events created before this date
          schema:
            type: string
            format: date
        - name: after
          in: query
          description: Include only events created after this date
          schema:
            type: string
            format: date
        - name: sort
          in: query
          description: Return events sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
      responses:
        "200":
          description: List currently authenticated user's events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Event'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/users/{id}/events:
    get:
      tags:
        - events
      summary: Get the contribution events of a specified user
      description: This feature was introduced in GitLab 8.13.
      operationId: getApiV4UsersIdEvents
      parameters:
        - name: id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: action
          in: query
          description: Event action to filter on
          schema:
            type: string
        - name: target_type
          in: query
          description: Event target type to filter on
          schema:
            type: string
            enum:
              - issue
              - milestone
              - merge_request
              - note
              - project
              - snippet
              - user
              - wiki
              - design
        - name: before
          in: query
          description: Include only events created before this date
          schema:
            type: string
            format: date
        - name: after
          in: query
          description: Include only events created after this date
          schema:
            type: string
            format: date
        - name: sort
          in: query
          description: Return events sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
      responses:
        "200":
          description: Get the contribution events of a specified user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Event'
        "404":
          description: Not found
          content: {}
  /api/v4/users/{user_id}/projects:
    get:
      tags:
        - projects
      description: Get a user projects
      operationId: getApiV4UsersUserIdProjects
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: Return projects ordered by field. storage_size, repository_size, wiki_size, packages_size are only available to admins. Similarity is available when searching and is limited to projects the user has access to.
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - similarity
              - storage_size
              - repository_size
              - wiki_size
              - packages_size
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: archived
          in: query
          description: Limit by archived status
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Return list of projects matching the search criteria
          schema:
            type: string
        - name: search_namespaces
          in: query
          description: Include ancestor namespaces when matching search criteria
          schema:
            type: boolean
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: starred
          in: query
          description: Limit by starred status
          schema:
            type: boolean
            default: false
        - name: imported
          in: query
          description: Limit by imported by authenticated user
          schema:
            type: boolean
            default: false
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of
          schema:
            type: boolean
            default: false
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature
          schema:
            type: boolean
            default: false
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature
          schema:
            type: boolean
            default: false
        - name: with_programming_language
          in: query
          description: Limit to repositories which use the given programming language
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: id_after
          in: query
          description: Limit results to projects with IDs greater than the specified ID
          schema:
            type: integer
            format: int32
        - name: id_before
          in: query
          description: Limit results to projects with IDs less than the specified ID
          schema:
            type: integer
            format: int32
        - name: last_activity_after
          in: query
          description: 'Limit results to projects with last_activity after specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: last_activity_before
          in: query
          description: 'Limit results to projects with last_activity before specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: repository_storage
          in: query
          description: Which storage shard the repository is on. Available only to admins
          schema:
            type: string
        - name: topic
          in: query
          description: Comma-separated list of topics. Limit results to projects having all topics
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: topic_id
          in: query
          description: Limit results to projects with the assigned topic given by the topic ID
          schema:
            type: integer
            format: int32
        - name: updated_before
          in: query
          description: 'Return projects updated before the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: 'Return projects updated after the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: include_pending_delete
          in: query
          description: Include projects in pending delete state. Can only be set by admins
          schema:
            type: boolean
        - name: wiki_checksum_failed
          in: query
          description: Limit by projects where wiki checksum is failed
          schema:
            type: boolean
            default: false
        - name: repository_checksum_failed
          in: query
          description: Limit by projects where repository checksum is failed
          schema:
            type: boolean
            default: false
        - name: include_hidden
          in: query
          description: Include hidden projects. Can only be set by admins
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a user projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "404":
          description: 404 User Not Found
          content: {}
  /api/v4/users/{user_id}/contributed_projects:
    get:
      tags:
        - projects
      description: Get projects that a user has contributed to
      operationId: getApiV4UsersUserIdContributedProjects
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: Return projects ordered by field. storage_size, repository_size, wiki_size, packages_size are only available to admins. Similarity is available when searching and is limited to projects the user has access to.
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - similarity
              - storage_size
              - repository_size
              - wiki_size
              - packages_size
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get projects that a user has contributed to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "404":
          description: 404 User Not Found
          content: {}
  /api/v4/users/{user_id}/starred_projects:
    get:
      tags:
        - projects
      description: Get projects starred by a user
      operationId: getApiV4UsersUserIdStarredProjects
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: Return projects ordered by field. storage_size, repository_size, wiki_size, packages_size are only available to admins. Similarity is available when searching and is limited to projects the user has access to.
          schema:
            type: string
            default: created_at
            enum:
              - id
              - name
              - path
              - created_at
              - updated_at
              - last_activity_at
              - similarity
              - storage_size
              - repository_size
              - wiki_size
              - packages_size
        - name: sort
          in: query
          description: Return projects sorted in ascending and descending order
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: archived
          in: query
          description: Limit by archived status
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility
          schema:
            type: string
            enum:
              - private
              - internal
              - public
        - name: search
          in: query
          description: Return list of projects matching the search criteria
          schema:
            type: string
        - name: search_namespaces
          in: query
          description: Include ancestor namespaces when matching search criteria
          schema:
            type: boolean
        - name: owned
          in: query
          description: Limit by owned by authenticated user
          schema:
            type: boolean
            default: false
        - name: starred
          in: query
          description: Limit by starred status
          schema:
            type: boolean
            default: false
        - name: imported
          in: query
          description: Limit by imported by authenticated user
          schema:
            type: boolean
            default: false
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of
          schema:
            type: boolean
            default: false
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature
          schema:
            type: boolean
            default: false
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature
          schema:
            type: boolean
            default: false
        - name: with_programming_language
          in: query
          description: Limit to repositories which use the given programming language
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by minimum access level of authenticated user
          schema:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        - name: id_after
          in: query
          description: Limit results to projects with IDs greater than the specified ID
          schema:
            type: integer
            format: int32
        - name: id_before
          in: query
          description: Limit results to projects with IDs less than the specified ID
          schema:
            type: integer
            format: int32
        - name: last_activity_after
          in: query
          description: 'Limit results to projects with last_activity after specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: last_activity_before
          in: query
          description: 'Limit results to projects with last_activity before specified time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: repository_storage
          in: query
          description: Which storage shard the repository is on. Available only to admins
          schema:
            type: string
        - name: topic
          in: query
          description: Comma-separated list of topics. Limit results to projects having all topics
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: topic_id
          in: query
          description: Limit results to projects with the assigned topic given by the topic ID
          schema:
            type: integer
            format: int32
        - name: updated_before
          in: query
          description: 'Return projects updated before the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: 'Return projects updated after the specified datetime. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ'
          schema:
            type: string
            format: date-time
        - name: include_pending_delete
          in: query
          description: Include projects in pending delete state. Can only be set by admins
          schema:
            type: boolean
        - name: wiki_checksum_failed
          in: query
          description: Limit by projects where wiki checksum is failed
          schema:
            type: boolean
            default: false
        - name: repository_checksum_failed
          in: query
          description: Limit by projects where repository checksum is failed
          schema:
            type: boolean
            default: false
        - name: include_hidden
          in: query
          description: Include hidden projects. Can only be set by admins
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: simple
          in: query
          description: Return only the ID, URL, name, and path of each project
          schema:
            type: boolean
            default: false
        - name: statistics
          in: query
          description: Include project statistics
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get projects starred by a user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        "404":
          description: 404 User Not Found
          content: {}
  /api/v4/users/{id}/custom_attributes:
    get:
      tags:
        - users
      description: Get all custom attributes on a user
      operationId: getApiV4UsersIdCustomAttributes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get all custom attributes on a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CustomAttribute'
  /api/v4/users/{id}/custom_attributes/{key}:
    get:
      tags:
        - users
      description: Get a custom attribute on a user
      operationId: getApiV4UsersIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a custom attribute on a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_CustomAttribute'
    put:
      tags:
        - users
      description: Set a custom attribute on a user
      operationId: putApiV4UsersIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4UsersIdCustomAttributesKey'
        required: true
      responses:
        "200":
          description: Set a custom attribute on a user
          content: {}
      x-codegen-request-body-name: putApiV4UsersIdCustomAttributesKey
    delete:
      tags:
        - users
      description: Delete a custom attribute on a user
      operationId: deleteApiV4UsersIdCustomAttributesKey
      parameters:
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a custom attribute on a user
          content: {}
  /api/v4/users:
    get:
      tags:
        - users
      description: Get the list of users
      operationId: getApiV4Users
      parameters:
        - name: username
          in: query
          description: Get a single user with a specific username
          schema:
            type: string
        - name: extern_uid
          in: query
          description: Get a single user with a specific external authentication provider UID
          schema:
            type: string
        - name: provider
          in: query
          description: The external provider
          schema:
            type: string
        - name: search
          in: query
          description: Search for a username
          schema:
            type: string
        - name: active
          in: query
          description: Filters only active users
          schema:
            type: boolean
            default: false
        - name: external
          in: query
          description: Filters only external users
          schema:
            type: boolean
            default: false
        - name: exclude_external
          in: query
          description: Filters only non external users
          schema:
            type: boolean
            default: false
        - name: blocked
          in: query
          description: Filters only blocked users
          schema:
            type: boolean
            default: false
        - name: created_after
          in: query
          description: Return users created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return users created before the specified time
          schema:
            type: string
            format: date-time
        - name: without_projects
          in: query
          description: Filters only users without projects
          schema:
            type: boolean
            default: false
        - name: exclude_internal
          in: query
          description: Filters only non internal users
          schema:
            type: boolean
            default: false
        - name: without_project_bots
          in: query
          description: Filters users without project bots
          schema:
            type: boolean
            default: false
        - name: admins
          in: query
          description: Filters only admin users
          schema:
            type: boolean
            default: false
        - name: two_factor
          in: query
          description: Filter users by Two-factor authentication.
          schema:
            type: string
        - name: order_by
          in: query
          description: Return users ordered by a field
          schema:
            type: string
            enum:
              - id
              - name
              - username
              - created_at
              - updated_at
        - name: sort
          in: query
          description: Return users sorted in ascending and descending order
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
        - name: skip_ldap
          in: query
          description: Skip LDAP users
          schema:
            type: boolean
            default: false
        - name: saml_provider_id
          in: query
          description: Return only users from the specified SAML provider Id
          schema:
            type: integer
            format: int32
        - name: auditors
          in: query
          description: Filters only auditor users
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get the list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserBasic'
    post:
      tags:
        - users
      description: Create a user. Available only for admins.
      operationId: postApiV4Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Users'
        required: true
      responses:
        "201":
          description: Create a user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserWithAdmin'
      x-codegen-request-body-name: postApiV4Users
  /api/v4/users/{id}:
    get:
      tags:
        - users
      description: Get a single user
      operationId: getApiV4UsersId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in the response
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Get a single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_User'
    put:
      tags:
        - users
      description: Update a user. Available only for admins.
      operationId: putApiV4UsersId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4UsersId'
        required: true
      responses:
        "200":
          description: Update a user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserWithAdmin'
      x-codegen-request-body-name: putApiV4UsersId
    delete:
      tags:
        - users
      description: Delete a user. Available only for admins.
      operationId: deleteApiV4UsersId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: hard_delete
          in: query
          description: Whether to remove a user's contributions
          schema:
            type: boolean
      responses:
        "200":
          description: Delete a user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
  /api/v4/users/{user_id}/status:
    get:
      tags:
        - users
      description: Get the status of a user
      operationId: getApiV4UsersUserIdStatus
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get the status of a user
          content: {}
  /api/v4/users/{id}/follow:
    post:
      tags:
        - users
      description: Follow a user
      operationId: postApiV4UsersIdFollow
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Follow a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_User'
  /api/v4/users/{id}/unfollow:
    post:
      tags:
        - users
      description: Unfollow a user
      operationId: postApiV4UsersIdUnfollow
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Unfollow a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_User'
  /api/v4/users/{id}/following:
    get:
      tags:
        - users
      description: Get the users who follow a user
      operationId: getApiV4UsersIdFollowing
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the users who follow a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserBasic'
  /api/v4/users/{id}/followers:
    get:
      tags:
        - users
      description: Get the followers of a user
      operationId: getApiV4UsersIdFollowers
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the followers of a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserBasic'
  /api/v4/users/{id}/disable_two_factor:
    patch:
      tags:
        - users
      summary: Disable two factor authentication for a user. Available only for admins
      description: This feature was added in GitLab 15.2
      operationId: patchApiV4UsersIdDisableTwoFactor
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Disable two factor authentication for a user. Available only for admins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserWithAdmin'
  /api/v4/users/{id}/identities/{provider}:
    delete:
      tags:
        - users
      description: Delete a user's identity. Available only for admins
      operationId: deleteApiV4UsersIdIdentitiesProvider
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: provider
          in: path
          description: The external provider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a user's identity. Available only for admins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserWithAdmin'
  /api/v4/users/{user_id}/project_deploy_keys:
    get:
      tags:
        - users
      description: Get the project-level Deploy keys that a specified user can access to.
      operationId: getApiV4UsersUserIdProjectDeployKeys
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the project-level Deploy keys that a specified user can access to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_DeployKey'
  /api/v4/users/{user_id}/keys:
    get:
      tags:
        - users
      description: Get the SSH keys of a specified user.
      operationId: getApiV4UsersUserIdKeys
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the SSH keys of a specified user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
    post:
      tags:
        - users
      description: Add an SSH key to a specified user. Available only for admins.
      operationId: postApiV4UsersUserIdKeys
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsersUserIdKeys'
        required: true
      responses:
        "201":
          description: Add an SSH key to a specified user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
      x-codegen-request-body-name: postApiV4UsersUserIdKeys
  /api/v4/users/{id}/keys/{key_id}:
    get:
      tags:
        - users
      description: Get a SSH key of a specified user.
      operationId: getApiV4UsersIdKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: key_id
          in: path
          description: The ID of the SSH key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a SSH key of a specified user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
    delete:
      tags:
        - users
      description: Delete an existing SSH key from a specified user. Available only for admins.
      operationId: deleteApiV4UsersIdKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: key_id
          in: path
          description: The ID of the SSH key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Delete an existing SSH key from a specified user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
  /api/v4/users/{id}/gpg_keys:
    get:
      tags:
        - users
      summary: Get the GPG keys of a specified user.
      description: This feature was added in GitLab 10.0
      operationId: getApiV4UsersIdGpgKeys
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the GPG keys of a specified user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GpgKey'
    post:
      tags:
        - users
      summary: Add a GPG key to a specified user. Available only for admins.
      description: This feature was added in GitLab 10.0
      operationId: postApiV4UsersIdGpgKeys
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsersIdGpgKeys'
        required: true
      responses:
        "201":
          description: Add a GPG key to a specified user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GpgKey'
      x-codegen-request-body-name: postApiV4UsersIdGpgKeys
  /api/v4/users/{id}/gpg_keys/{key_id}:
    get:
      tags:
        - users
      summary: Get a specific GPG key for a given user.
      description: This feature was added in GitLab 13.5
      operationId: getApiV4UsersIdGpgKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a specific GPG key for a given user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GpgKey'
    delete:
      tags:
        - users
      summary: Delete an existing GPG key from a specified user. Available only for admins.
      description: This feature was added in GitLab 10.0
      operationId: deleteApiV4UsersIdGpgKeysKeyId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete an existing GPG key from a specified user. Available only for admins.
          content: {}
  /api/v4/users/{id}/gpg_keys/{key_id}/revoke:
    post:
      tags:
        - users
      summary: Revokes an existing GPG key from a specified user. Available only for admins.
      description: This feature was added in GitLab 10.0
      operationId: postApiV4UsersIdGpgKeysKeyIdRevoke
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Revokes an existing GPG key from a specified user. Available only for admins.
          content: {}
  /api/v4/users/{id}/emails:
    get:
      tags:
        - users
      description: Get the emails addresses of a specified user. Available only for admins.
      operationId: getApiV4UsersIdEmails
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the emails addresses of a specified user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
    post:
      tags:
        - users
      description: Add an email address to a specified user. Available only for admins.
      operationId: postApiV4UsersIdEmails
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsersIdEmails'
        required: true
      responses:
        "201":
          description: Add an email address to a specified user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
      x-codegen-request-body-name: postApiV4UsersIdEmails
  /api/v4/users/{id}/emails/{email_id}:
    delete:
      tags:
        - users
      description: Delete an email address of a specified user. Available only for admins.
      operationId: deleteApiV4UsersIdEmailsEmailId
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: email_id
          in: path
          description: The ID of the email
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Delete an email address of a specified user. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
  /api/v4/users/{id}/activate:
    post:
      tags:
        - users
      description: Activate a deactivated user. Available only for admins.
      operationId: postApiV4UsersIdActivate
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Activate a deactivated user. Available only for admins.
          content: {}
  /api/v4/users/{id}/approve:
    post:
      tags:
        - users
      description: Approve a pending user. Available only for admins.
      operationId: postApiV4UsersIdApprove
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Approve a pending user. Available only for admins.
          content: {}
  /api/v4/users/{id}/reject:
    post:
      tags:
        - users
      description: Reject a pending user. Available only for admins.
      operationId: postApiV4UsersIdReject
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Reject a pending user. Available only for admins.
          content: {}
  /api/v4/users/{id}/deactivate:
    post:
      tags:
        - users
      description: Deactivate an active user. Available only for admins.
      operationId: postApiV4UsersIdDeactivate
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Deactivate an active user. Available only for admins.
          content: {}
  /api/v4/users/{id}/block:
    post:
      tags:
        - users
      description: Block a user. Available only for admins.
      operationId: postApiV4UsersIdBlock
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Block a user. Available only for admins.
          content: {}
  /api/v4/users/{id}/unblock:
    post:
      tags:
        - users
      description: Unblock a user. Available only for admins.
      operationId: postApiV4UsersIdUnblock
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Unblock a user. Available only for admins.
          content: {}
  /api/v4/users/{id}/ban:
    post:
      tags:
        - users
      description: Ban a user. Available only for admins.
      operationId: postApiV4UsersIdBan
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Ban a user. Available only for admins.
          content: {}
  /api/v4/users/{id}/unban:
    post:
      tags:
        - users
      description: Unban a user. Available only for admins.
      operationId: postApiV4UsersIdUnban
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Unban a user. Available only for admins.
          content: {}
  /api/v4/users/{user_id}/memberships:
    get:
      tags:
        - users
      description: Get memberships
      operationId: getApiV4UsersUserIdMemberships
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          schema:
            type: string
            enum:
              - Project
              - Namespace
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Membership'
  /api/v4/users/{id}/associations_count:
    get:
      tags:
        - users
      description: Returns a list of a specified user's count of projects, groups, issues and merge requests.
      operationId: getApiV4UsersIdAssociationsCount
      parameters:
        - name: id
          in: path
          description: ID of the user to query.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns a list of a specified user's count of projects, groups, issues and merge requests.
          content: {}
  /api/v4/users/{user_id}/impersonation_tokens:
    get:
      tags:
        - users
      summary: Retrieve impersonation tokens. Available only for admins.
      description: This feature was introduced in GitLab 9.0
      operationId: getApiV4UsersUserIdImpersonationTokens
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: state
          in: query
          description: Filters (all|active|inactive) impersonation_tokens
          schema:
            type: string
            default: all
            enum:
              - all
              - active
              - inactive
      responses:
        "200":
          description: Retrieve impersonation tokens. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ImpersonationToken'
    post:
      tags:
        - users
      summary: Create a impersonation token. Available only for admins.
      description: This feature was introduced in GitLab 9.0
      operationId: postApiV4UsersUserIdImpersonationTokens
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsersUserIdImpersonationTokens'
        required: true
      responses:
        "201":
          description: Create a impersonation token. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ImpersonationTokenWithToken'
      x-codegen-request-body-name: postApiV4UsersUserIdImpersonationTokens
  /api/v4/users/{user_id}/impersonation_tokens/{impersonation_token_id}:
    get:
      tags:
        - users
      summary: Retrieve impersonation token. Available only for admins.
      description: This feature was introduced in GitLab 9.0
      operationId: getApiV4UsersUserIdImpersonationTokensImpersonationTokenId
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: impersonation_token_id
          in: path
          description: The ID of the impersonation token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Retrieve impersonation token. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ImpersonationToken'
    delete:
      tags:
        - users
      summary: Revoke a impersonation token. Available only for admins.
      description: This feature was introduced in GitLab 9.0
      operationId: deleteApiV4UsersUserIdImpersonationTokensImpersonationTokenId
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
        - name: impersonation_token_id
          in: path
          description: The ID of the impersonation token
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Revoke a impersonation token. Available only for admins.
          content: {}
  /api/v4/users/{user_id}/personal_access_tokens:
    post:
      tags:
        - users
      summary: Create a personal access token. Available only for admins.
      description: This feature was introduced in GitLab 13.6
      operationId: postApiV4UsersUserIdPersonalAccessTokens
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsersUserIdPersonalAccessTokens'
        required: true
      responses:
        "201":
          description: Create a personal access token. Available only for admins.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4UsersUserIdPersonalAccessTokens
  /api/v4/features:
    get:
      tags:
        - features
      summary: List all features
      description: Get a list of all persisted features, with its gate values.
      operationId: getApiV4Features
      responses:
        "200":
          description: List all features
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Feature'
  /api/v4/features/definitions:
    get:
      tags:
        - features
      summary: List all feature definitions
      description: Get a list of all feature definitions.
      operationId: getApiV4FeaturesDefinitions
      responses:
        "200":
          description: List all feature definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Feature_Definition'
  /api/v4/features/{name}:
    post:
      tags:
        - features
      summary: Set or create a feature
      description: Set a feature's gate value. If a feature with the given name doesn't exist yet, it's created. The value can be a boolean, or an integer to indicate percentage of time.
      operationId: postApiV4FeaturesName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4FeaturesName'
        required: true
      responses:
        "201":
          description: Set or create a feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Feature'
        "400":
          description: Bad request
          content: {}
      x-codegen-request-body-name: postApiV4FeaturesName
    delete:
      tags:
        - features
      summary: Delete a feature
      description: Removes a feature gate. Response is equal when the gate exists, or doesn't.
      operationId: deleteApiV4FeaturesName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a feature
          content: {}
  /api/v4/geo/proxy:
    get:
      tags:
        - geo
      summary: Determine if a Geo site should proxy requests
      description: Returns a Geo proxy response
      operationId: getApiV4GeoProxy
      responses:
        "200":
          description: Returns a Geo proxy response
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/geo/retrieve/{replicable_name}/{replicable_id}:
    get:
      tags:
        - geo
      summary: Internal endpoint that returns a replicable file
      description: Returns a replicable file from store (via CDN or sendfile)
      operationId: getApiV4GeoRetrieveReplicableNameReplicableId
      parameters:
        - name: replicable_name
          in: path
          description: The replicable name of a replicator instance
          required: true
          schema:
            type: string
        - name: replicable_id
          in: path
          description: The replicable ID of a replicable instance
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns a replicable file from store (via CDN or sendfile)
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
        "404":
          description: 404 Not found
          content: {}
  /api/v4/geo/repositories/{gl_repository}/pipeline_refs:
    get:
      tags:
        - geo
      summary: Used by secondary runners to verify the secondary instance has the very latest version
      description: Returns the list of pipeline refs for the project
      operationId: getApiV4GeoRepositoriesGlRepositoryPipelineRefs
      parameters:
        - name: gl_repository
          in: path
          description: The repository to check
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the list of pipeline refs for the project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EE_API_Entities_Geo_PipelineRefs'
        "401":
          description: 401 Unauthorized
          content: {}
        "404":
          description: 404 Not found
          content: {}
  /api/v4/geo/status:
    post:
      tags:
        - geo
      summary: Internal endpoint that posts the current node status
      description: Posts the current node status to the primary site
      operationId: postApiV4GeoStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GeoStatus'
        required: true
      responses:
        "200":
          description: Posts the current node status to the primary site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EE_API_Entities_GeoNodeStatus'
        "400":
          description: 400 Bad Request
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4GeoStatus
  /api/v4/geo/proxy_git_ssh/info_refs_upload_pack:
    post:
      tags:
        - geo
      summary: Internal endpoint that returns info refs upload pack for git clone/pull
      description: |-
        Responsible for making HTTP GET /repo.git/info/refs?service=git-upload-pack
                          request from secondary gitlab-shell to primary
      operationId: postApiV4GeoProxyGitSshInfoRefsUploadPack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GeoProxyGitSshInfoRefsUploadPack'
        required: true
      responses:
        "200":
          description: |-
            Responsible for making HTTP GET /repo.git/info/refs?service=git-upload-pack
                              request from secondary gitlab-shell to primary
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4GeoProxyGitSshInfoRefsUploadPack
  /api/v4/geo/proxy_git_ssh/upload_pack:
    post:
      tags:
        - geo
      summary: Internal endpoint that posts git-upload-pack for git clone/pull
      description: |-
        Responsible for making HTTP POST /repo.git/git-upload-pack
                          request from secondary gitlab-shell to primary
      operationId: postApiV4GeoProxyGitSshUploadPack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GeoProxyGitSshUploadPack'
        required: true
      responses:
        "200":
          description: |-
            Responsible for making HTTP POST /repo.git/git-upload-pack
                              request from secondary gitlab-shell to primary
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4GeoProxyGitSshUploadPack
  /api/v4/geo/proxy_git_ssh/info_refs_receive_pack:
    post:
      tags:
        - geo
      summary: Internal endpoint that returns git-received-pack output for git push
      description: |-
        Responsible for making HTTP GET /repo.git/info/refs?service=git-receive-pack
                          request from secondary gitlab-shell to primary
      operationId: postApiV4GeoProxyGitSshInfoRefsReceivePack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GeoProxyGitSshInfoRefsReceivePack'
        required: true
      responses:
        "200":
          description: |-
            Responsible for making HTTP GET /repo.git/info/refs?service=git-receive-pack
                              request from secondary gitlab-shell to primary
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4GeoProxyGitSshInfoRefsReceivePack
  /api/v4/geo/proxy_git_ssh/receive_pack:
    post:
      tags:
        - geo
      summary: Internal endpoint that posts git-receive-pack for git push
      description: |-
        Responsible for making HTTP POST /repo.git/info/refs?service=git-receive-pack
                          request from secondary gitlab-shell to primary
      operationId: postApiV4GeoProxyGitSshReceivePack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4GeoProxyGitSshReceivePack'
        required: true
      responses:
        "200":
          description: |-
            Responsible for making HTTP POST /repo.git/info/refs?service=git-receive-pack
                              request from secondary gitlab-shell to primary
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4GeoProxyGitSshReceivePack
  /api/v4/geo/node_proxy/{id}/graphql:
    post:
      tags:
        - geo
      summary: Query the GraphQL endpoint of an existing Geo node
      description: Query the GraphQL endpoint of an existing Geo node
      operationId: postApiV4GeoNodeProxyIdGraphql
      parameters:
        - name: id
          in: path
          description: The ID of the Geo node
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Query the GraphQL endpoint of an existing Geo node
          content: {}
        "404":
          description: 404 GeoNode Not Found
          content: {}
  /api/v4/integrations/slack/events:
    post:
      tags:
        - integrations
      description: Receive Slack events
      operationId: postApiV4IntegrationsSlackEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4IntegrationsSlackEvents'
        required: true
      responses:
        "200":
          description: Successfully processed event
          content: {}
        "204":
          description: Failed to process event
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4IntegrationsSlackEvents
  /api/v4/integrations/slack/interactions:
    post:
      tags:
        - integrations
      operationId: postApiV4IntegrationsSlackInteractions
      responses:
        "201":
          description: created Interaction
          content: {}
  /api/v4/integrations/slack/options:
    post:
      tags:
        - integrations
      operationId: postApiV4IntegrationsSlackOptions
      responses:
        "201":
          description: created Option
          content: {}
  /api/v4/integrations/jira_connect/subscriptions:
    post:
      tags:
        - jira_connect_subscriptions
      summary: Subscribe a namespace to a JiraConnectInstallation
      description: Subscribes the namespace to the JiraConnectInstallation
      operationId: postApiV4IntegrationsJiraConnectSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4IntegrationsJiraConnectSubscriptions'
        required: true
      responses:
        "201":
          description: Subscribe a namespace to a JiraConnectInstallation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_BasicSuccess'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4IntegrationsJiraConnectSubscriptions
  /api/v4/keys/{id}:
    get:
      tags:
        - keys
      summary: Get single ssh key by id. Only available to admin users
      description: |-
        Get SSH key with user by ID of an SSH key. Note only administrators can lookup SSH key with user by ID\
                of an SSH key
      operationId: getApiV4KeysId
      parameters:
        - name: id
          in: path
          description: The ID of an SSH key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get single ssh key by id. Only available to admin users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKeyWithUser'
  /api/v4/keys:
    get:
      tags:
        - keys
      summary: Get user by fingerprint of SSH key
      description: |-
        You can search for a user that owns a specific SSH key. Note only administrators can lookup SSH key\
                with the fingerprint of an SSH key
      operationId: getApiV4Keys
      parameters:
        - name: fingerprint
          in: query
          description: The fingerprint of an SSH key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get user by fingerprint of SSH key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserWithAdmin'
  /api/v4/markdown:
    post:
      tags:
        - markdown
      summary: Render an arbitrary Markdown document
      description: This feature was introduced in GitLab 11.0.
      operationId: postApiV4Markdown
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Markdown'
        required: true
      responses:
        "201":
          description: Render an arbitrary Markdown document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Markdown'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4Markdown
  /api/v4/merge_requests:
    get:
      tags:
        - merge_requests
      summary: List merge requests
      description: Get all merge requests the authenticated user has access to. By default it returns only merge requests created by the current user. To get all merge requests, use parameter `scope=all`.
      operationId: getApiV4MergeRequests
      parameters:
        - name: author_id
          in: query
          description: Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.
          schema:
            type: integer
            format: int32
        - name: author_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          schema:
            type: string
        - name: assignee_id
          in: query
          description: Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.
          schema:
            type: integer
            format: int32
        - name: assignee_username
          in: query
          description: Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: reviewer_username
          in: query
          description: Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.
          schema:
            type: string
        - name: labels
          in: query
          description: Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: milestone
          in: query
          description: Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.
          schema:
            type: integer
            format: int32
        - name: state
          in: query
          description: Returns `all` merge requests or just those that are `opened`, `closed`, `locked`, or `merged`.
          schema:
            type: string
            default: all
            enum:
              - opened
              - closed
              - locked
              - merged
              - all
        - name: order_by
          in: query
          description: Returns merge requests ordered by `created_at`, `label_priority`, `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields. Introduced in GitLab 14.8.
          schema:
            type: string
            default: created_at
            enum:
              - created_at
              - label_priority
              - milestone_due
              - popularity
              - priority
              - title
              - updated_at
        - name: sort
          in: query
          description: Returns merge requests sorted in `asc` or `desc` order.
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: with_labels_details
          in: query
          description: 'If `true`, response returns more details for each label in labels field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`'
          schema:
            type: boolean
            default: false
        - name: with_merge_status_recheck
          in: query
          description: If `true`, this projection requests (but does not guarantee) that the `merge_status` field be recalculated asynchronously. Introduced in GitLab 13.0.
          schema:
            type: boolean
            default: false
        - name: created_after
          in: query
          description: Returns merge requests created on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Returns merge requests created on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: Returns merge requests updated on or after the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: updated_before
          in: query
          description: Returns merge requests updated on or before the given time. Expected in ISO 8601 format.
          schema:
            type: string
            format: date-time
        - name: view
          in: query
          description: If simple, returns the `iid`, URL, title, description, and basic state of merge request
          schema:
            type: string
            enum:
              - simple
        - name: scope
          in: query
          description: 'Returns merge requests for the given scope: `created_by_me`, `assigned_to_me` or `all`'
          schema:
            type: string
            default: created_by_me
            enum:
              - created-by-me
              - assigned-to-me
              - created_by_me
              - assigned_to_me
              - all
        - name: source_branch
          in: query
          description: Returns merge requests with the given source branch
          schema:
            type: string
        - name: source_project_id
          in: query
          description: Returns merge requests with the given source project id
          schema:
            type: integer
            format: int32
        - name: target_branch
          in: query
          description: Returns merge requests with the given target branch
          schema:
            type: string
        - name: search
          in: query
          description: Search merge requests against their `title` and `description`.
          schema:
            type: string
        - name: in
          in: query
          description: Modify the scope of the search attribute. `title`, `description`, or a string joining them with comma.
          schema:
            type: string
        - name: wip
          in: query
          description: Filter merge requests against their `wip` status. `yes` to return only draft merge requests, `no` to return non-draft merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: not[author_id]
          in: query
          description: '`<Negated>` Returns merge requests created by the given user `id`. Mutually exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`.'
          schema:
            type: integer
            format: int32
        - name: not[author_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          schema:
            type: string
        - name: not[assignee_id]
          in: query
          description: '`<Negated>` Returns merge requests assigned to the given user `id`. `None` returns unassigned merge requests. `Any` returns merge requests with an assignee.'
          schema:
            type: integer
            format: int32
        - name: not[assignee_username]
          in: query
          description: '`<Negated>` Returns merge requests created by the given `username`. Mutually exclusive with `author_id`.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[reviewer_username]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given `username`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_id`. Introduced in GitLab 13.8.'
          schema:
            type: string
        - name: not[labels]
          in: query
          description: '`<Negated>` Returns merge requests matching a comma-separated list of labels. `None` lists all merge requests with no labels. `Any` lists all merge requests with at least one label. Predefined names are case-insensitive.'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: not[milestone]
          in: query
          description: '`<Negated>` Returns merge requests for a specific milestone. `None` returns merge requests with no milestone. `Any` returns merge requests that have an assigned milestone.'
          schema:
            type: string
        - name: not[my_reaction_emoji]
          in: query
          description: '`<Negated>` Returns merge requests reacted by the authenticated user by the given `emoji`. `None` returns issues not given a reaction. `Any` returns issues given at least one reaction.'
          schema:
            type: string
        - name: not[reviewer_id]
          in: query
          description: '`<Negated>` Returns merge requests which have the user as a reviewer with the given user `id`. `None` returns merge requests with no reviewers. `Any` returns merge requests with any reviewer. Mutually exclusive with `reviewer_username`.'
          schema:
            type: integer
            format: int32
        - name: deployed_before
          in: query
          description: Returns merge requests deployed before the given date/time. Expected in ISO 8601 format.
          schema:
            type: string
        - name: deployed_after
          in: query
          description: Returns merge requests deployed after the given date/time. Expected in ISO 8601 format
          schema:
            type: string
        - name: environment
          in: query
          description: Returns merge requests deployed to the given environment
          schema:
            type: string
        - name: approved
          in: query
          description: Filters merge requests by their `approved` status. `yes` returns only approved merge requests. `no` returns only non-approved merge requests.
          schema:
            type: string
            enum:
              - yes
              - no
        - name: merge_user_id
          in: query
          description: Returns merge requests which have been merged by the user with the given user `id`. Mutually exclusive with `merge_user_username`.
          schema:
            type: integer
            format: int32
        - name: merge_user_username
          in: query
          description: Returns merge requests which have been merged by the user with the given `username`. Mutually exclusive with `merge_user_id`.
          schema:
            type: string
        - name: approver_ids
          in: query
          description: Return merge requests which have specified the users with the given IDs as an individual approver
          schema:
            type: string
        - name: approved_by_ids
          in: query
          description: Return merge requests which have been approved by the specified users with the given IDs
          schema:
            type: string
        - name: approved_by_usernames
          in: query
          description: |-
            Return merge requests which have been approved by the specified users with the given
                        usernames
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List merge requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_MergeRequestBasic'
        "401":
          description: Unauthorized
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
  /api/v4/namespaces/{id}:
    get:
      tags:
        - namespaces
      summary: Get namespace by ID
      description: Get a namespace by ID
      operationId: getApiV4NamespacesId
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the namespace
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get namespace by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Namespace'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - namespaces
      description: Update a namespace
      operationId: putApiV4NamespacesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4NamespacesId'
        required: true
      responses:
        "200":
          description: Update a namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Namespace'
      x-codegen-request-body-name: putApiV4NamespacesId
  /api/v4/namespaces/{id}/gitlab_subscription:
    get:
      tags:
        - namespaces
      description: Returns the subscription for the namespace
      operationId: getApiV4NamespacesIdGitlabSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns the subscription for the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GitlabSubscription'
    put:
      tags:
        - namespaces
      description: Update the subscription for the namespace
      operationId: putApiV4NamespacesIdGitlabSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4NamespacesIdGitlabSubscription'
        required: true
      responses:
        "200":
          description: Update the subscription for the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GitlabSubscription'
      x-codegen-request-body-name: putApiV4NamespacesIdGitlabSubscription
    post:
      tags:
        - namespaces
      description: Create a subscription for the namespace
      operationId: postApiV4NamespacesIdGitlabSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4NamespacesIdGitlabSubscription'
        required: true
      responses:
        "201":
          description: Create a subscription for the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GitlabSubscription'
      x-codegen-request-body-name: postApiV4NamespacesIdGitlabSubscription
  /api/v4/namespaces/{id}/storage/limit_exclusion:
    post:
      tags:
        - namespaces
      summary: Creates a storage limit exclusion for a Namespace
      description: Creates a Namespaces::Storage::LimitExclusion
      operationId: postApiV4NamespacesIdStorageLimitExclusion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4NamespacesIdStorageLimitExclusion'
        required: true
      responses:
        "201":
          description: Creates a storage limit exclusion for a Namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Namespaces_Storage_LimitExclusion'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4NamespacesIdStorageLimitExclusion
    delete:
      tags:
        - namespaces
      summary: Removes a storage limit exclusion for a Namespace
      description: Removes a Namespaces::Storage::LimitExclusion
      operationId: deleteApiV4NamespacesIdStorageLimitExclusion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Removes a storage limit exclusion for a Namespace
          content: {}
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
  /api/v4/namespaces/storage/limit_exclusions:
    get:
      tags:
        - namespaces
      summary: Retrieve all limit exclusions
      description: Gets all records for namespaces that have been excluded
      operationId: getApiV4NamespacesStorageLimitExclusions
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Retrieve all limit exclusions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Namespaces_Storage_LimitExclusion'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/namespaces:
    get:
      tags:
        - namespaces
      summary: List namespaces
      description: Get a list of the namespaces of the authenticated user. If the user is an administrator, a list of all namespaces in the GitLab instance is shown.
      operationId: getApiV4Namespaces
      parameters:
        - name: search
          in: query
          description: Returns a list of namespaces the user is authorized to view based on the search criteria
          schema:
            type: string
        - name: owned_only
          in: query
          description: In GitLab 14.2 and later, returns a list of owned namespaces only
          schema:
            type: boolean
        - name: top_level_only
          in: query
          description: Only include top level namespaces
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: requested_hosted_plan
          in: query
          description: Name of the hosted plan requested by the customer
          schema:
            type: string
      responses:
        "200":
          description: List namespaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Namespace'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/namespaces/{id}/exists:
    get:
      tags:
        - namespaces
      summary: Get existence of a namespace
      description: Get existence of a namespace by path. Suggests a new namespace path that does not already exist.
      operationId: getApiV4NamespacesIdExists
      parameters:
        - name: id
          in: path
          description: Namespace’s path
          required: true
          schema:
            type: string
        - name: parent_id
          in: query
          description: The ID of the parent namespace. If no ID is specified, only top-level namespaces are considered.
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get existence of a namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_NamespaceExistence'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/pages/domains:
    get:
      tags:
        - pages
      description: Get all pages domains
      operationId: getApiV4PagesDomains
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get all pages domains
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PagesDomainBasic'
  /api/v4/personal_access_tokens/self:
    get:
      tags:
        - personal_access_tokens
      summary: Get single personal access token
      description: Get the details of a personal access token by passing it to the API in a header
      operationId: getApiV4PersonalAccessTokensSelf
      responses:
        "200":
          description: Get single personal access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalAccessToken'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - personal_access_tokens
      summary: Revoke a personal access token
      description: Revoke a personal access token by passing it to the API in a header
      operationId: deleteApiV4PersonalAccessTokensSelf
      responses:
        "204":
          description: Revoke a personal access token
          content: {}
        "400":
          description: Bad Request
          content: {}
  /api/v4/personal_access_tokens/self/rotate:
    post:
      tags:
        - personal_access_tokens
      summary: Rotate a personal access token
      description: Rotates a personal access token by passing it to the API in a header
      operationId: postApiV4PersonalAccessTokensSelfRotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4PersonalAccessTokensSelfRotate'
        required: true
      responses:
        "200":
          description: Rotate a personal access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalAccessTokenWithToken'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Method not allowed
          content: {}
      x-codegen-request-body-name: postApiV4PersonalAccessTokensSelfRotate
  /api/v4/personal_access_tokens:
    get:
      tags:
        - personal_access_tokens
      summary: List personal access tokens
      description: Get all personal access tokens the authenticated user has access to.
      operationId: getApiV4PersonalAccessTokens
      parameters:
        - name: user_id
          in: query
          description: Filter PATs by User ID
          schema:
            type: integer
            format: int32
        - name: revoked
          in: query
          description: Filter PATs where revoked state matches parameter
          schema:
            type: boolean
        - name: state
          in: query
          description: Filter PATs which are either active or not
          schema:
            type: string
            enum:
              - active
              - inactive
        - name: created_before
          in: query
          description: Filter PATs which were created before given datetime
          schema:
            type: string
            format: date-time
        - name: created_after
          in: query
          description: Filter PATs which were created after given datetime
          schema:
            type: string
            format: date-time
        - name: last_used_before
          in: query
          description: Filter PATs which were used before given datetime
          schema:
            type: string
            format: date-time
        - name: last_used_after
          in: query
          description: Filter PATs which were used after given datetime
          schema:
            type: string
            format: date-time
        - name: search
          in: query
          description: Filters PATs by its name
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List personal access tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_PersonalAccessToken'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/personal_access_tokens/{id}:
    get:
      tags:
        - personal_access_tokens
      summary: Get single personal access token
      description: Get a personal access token by using the ID of the personal access token.
      operationId: getApiV4PersonalAccessTokensId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get single personal access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalAccessToken'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
    delete:
      tags:
        - personal_access_tokens
      summary: Revoke a personal access token
      description: Revoke a personal access token by using the ID of the personal access token.
      operationId: deleteApiV4PersonalAccessTokensId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Revoke a personal access token
          content: {}
        "400":
          description: Bad Request
          content: {}
  /api/v4/personal_access_tokens/{id}/rotate:
    post:
      tags:
        - personal_access_tokens
      summary: Rotate personal access token
      description: Roates a personal access token.
      operationId: postApiV4PersonalAccessTokensIdRotate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4PersonalAccessTokensIdRotate'
        required: true
      responses:
        "201":
          description: Rotate personal access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4PersonalAccessTokensIdRotate
  /api/v4/project_repository_storage_moves:
    get:
      tags:
        - project_repository_storage_moves
      summary: Get a list of all project repository storage moves
      description: This feature was introduced in GitLab 13.0.
      operationId: getApiV4ProjectRepositoryStorageMoves
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of all project repository storage moves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Projects_RepositoryStorageMove'
    post:
      tags:
        - project_repository_storage_moves
      summary: Schedule bulk project repository storage moves
      description: This feature was introduced in GitLab 13.7.
      operationId: postApiV4ProjectRepositoryStorageMoves
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ProjectRepositoryStorageMoves'
        required: true
      responses:
        "202":
          description: Schedule bulk project repository storage moves
          content: {}
      x-codegen-request-body-name: postApiV4ProjectRepositoryStorageMoves
  /api/v4/project_repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
        - project_repository_storage_moves
      summary: Get a project repository storage move
      description: This feature was introduced in GitLab 13.0.
      operationId: getApiV4ProjectRepositoryStorageMovesRepositoryStorageMoveId
      parameters:
        - name: repository_storage_move_id
          in: path
          description: The ID of a project repository storage move
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a project repository storage move
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_RepositoryStorageMove'
  /api/v4/snippets:
    get:
      tags:
        - snippets
      summary: Get a snippets list for an authenticated user
      description: This feature was introduced in GitLab 8.15.
      operationId: getApiV4Snippets
      parameters:
        - name: created_after
          in: query
          description: Return snippets created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return snippets created before the specified time
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a snippets list for an authenticated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Snippet'
        "404":
          description: Not found
          content: {}
    post:
      tags:
        - snippets
      summary: Create new snippet
      description: This feature was introduced in GitLab 8.15.
      operationId: postApiV4Snippets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Snippets'
        required: true
      responses:
        "201":
          description: Create new snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalSnippet'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4Snippets
  /api/v4/snippets/public:
    get:
      tags:
        - snippets
      summary: List all public personal snippets current_user has access to
      description: This feature was introduced in GitLab 8.15.
      operationId: getApiV4SnippetsPublic
      parameters:
        - name: created_after
          in: query
          description: Return snippets created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return snippets created before the specified time
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List all public personal snippets current_user has access to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_PersonalSnippet'
        "404":
          description: Not found
          content: {}
  /api/v4/snippets/all:
    get:
      tags:
        - snippets
      summary: List all snippets current_user has access to
      description: This feature was introduced in GitLab 16.3.
      operationId: getApiV4SnippetsAll
      parameters:
        - name: created_after
          in: query
          description: Return snippets created after the specified time
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Return snippets created before the specified time
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: repository_storage
          in: query
          description: Filter by repository storage used by the snippet
          schema:
            type: string
      responses:
        "200":
          description: List all snippets current_user has access to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Snippet'
        "404":
          description: Not found
          content: {}
  /api/v4/snippets/{id}:
    get:
      tags:
        - snippets
      summary: Get a single snippet
      description: This feature was introduced in GitLab 8.15.
      operationId: getApiV4SnippetsId
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalSnippet'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - snippets
      summary: Update an existing snippet
      description: This feature was introduced in GitLab 8.15.
      operationId: putApiV4SnippetsId
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4SnippetsId'
        required: true
      responses:
        "200":
          description: Update an existing snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalSnippet'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4SnippetsId
    delete:
      tags:
        - snippets
      summary: Remove snippet
      description: This feature was introduced in GitLab 8.15.
      operationId: deleteApiV4SnippetsId
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Validation error
          content: {}
        "204":
          description: Remove snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalSnippet'
        "404":
          description: Not found
          content: {}
  /api/v4/snippets/{id}/raw:
    get:
      tags:
        - snippets
      summary: Get a raw snippet
      description: This feature was introduced in GitLab 8.15.
      operationId: getApiV4SnippetsIdRaw
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a raw snippet
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/snippets/{id}/files/{ref}/{file_path}/raw:
    get:
      tags:
        - snippets
      description: Get raw snippet file contents from the repository
      operationId: getApiV4SnippetsIdFilesRefFilePathRaw
      parameters:
        - name: file_path
          in: path
          description: The url encoded path to the file, e.g. lib%2Fclass%2Erb
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: The name of branch, tag or commit
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get raw snippet file contents from the repository
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/snippets/{id}/user_agent_detail:
    get:
      tags:
        - snippets
      description: Get the user agent details for a snippet
      operationId: getApiV4SnippetsIdUserAgentDetail
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get the user agent details for a snippet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserAgentDetail'
        "404":
          description: Not found
          content: {}
  /api/v4/snippets/{id}/repository_storage_moves:
    get:
      tags:
        - snippets
      summary: Get a list of all snippets repository storage moves
      description: This feature was introduced in GitLab 13.8.
      operationId: getApiV4SnippetsIdRepositoryStorageMoves
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of all snippets repository storage moves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Snippets_RepositoryStorageMove'
    post:
      tags:
        - snippets
      summary: Schedule a snippet repository storage move
      description: This feature was introduced in GitLab 13.8.
      operationId: postApiV4SnippetsIdRepositoryStorageMoves
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4SnippetsIdRepositoryStorageMoves'
        required: true
      responses:
        "201":
          description: Schedule a snippet repository storage move
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Snippets_RepositoryStorageMove'
      x-codegen-request-body-name: postApiV4SnippetsIdRepositoryStorageMoves
  /api/v4/snippets/{id}/repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
        - snippets
      summary: Get a snippet repository storage move
      description: This feature was introduced in GitLab 13.8.
      operationId: getApiV4SnippetsIdRepositoryStorageMovesRepositoryStorageMoveId
      parameters:
        - name: id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: string
        - name: repository_storage_move_id
          in: path
          description: The ID of a snippet repository storage move
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a snippet repository storage move
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Snippets_RepositoryStorageMove'
  /api/v4/snippet_repository_storage_moves:
    get:
      tags:
        - snippet_repository_storage_moves
      summary: Get a list of all snippet repository storage moves
      description: This feature was introduced in GitLab 13.8.
      operationId: getApiV4SnippetRepositoryStorageMoves
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of all snippet repository storage moves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Snippets_RepositoryStorageMove'
    post:
      tags:
        - snippet_repository_storage_moves
      summary: Schedule bulk snippet repository storage moves
      description: This feature was introduced in GitLab 13.8.
      operationId: postApiV4SnippetRepositoryStorageMoves
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4SnippetRepositoryStorageMoves'
        required: true
      responses:
        "202":
          description: Schedule bulk snippet repository storage moves
          content: {}
      x-codegen-request-body-name: postApiV4SnippetRepositoryStorageMoves
  /api/v4/snippet_repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
        - snippet_repository_storage_moves
      summary: Get a snippet repository storage move
      description: This feature was introduced in GitLab 13.8.
      operationId: getApiV4SnippetRepositoryStorageMovesRepositoryStorageMoveId
      parameters:
        - name: repository_storage_move_id
          in: path
          description: The ID of a snippet repository storage move
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a snippet repository storage move
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Snippets_RepositoryStorageMove'
  /api/v4/suggestions/{id}/apply:
    put:
      tags:
        - suggestions
      description: Apply suggestion patch in the Merge Request it was created
      operationId: putApiV4SuggestionsIdApply
      parameters:
        - name: id
          in: path
          description: The ID of the suggestion
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4SuggestionsIdApply'
        required: true
      responses:
        "200":
          description: Apply suggestion patch in the Merge Request it was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Suggestion'
      x-codegen-request-body-name: putApiV4SuggestionsIdApply
  /api/v4/suggestions/batch_apply:
    put:
      tags:
        - suggestions
      description: Apply multiple suggestion patches in the Merge Request where they were created
      operationId: putApiV4SuggestionsBatchApply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4SuggestionsBatchApply'
        required: true
      responses:
        "200":
          description: Apply multiple suggestion patches in the Merge Request where they were created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Suggestion'
      x-codegen-request-body-name: putApiV4SuggestionsBatchApply
  /api/v4/hooks:
    get:
      tags:
        - system_hooks
      summary: List system hooks
      description: Get a list of all system hooks
      operationId: getApiV4Hooks
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: List system hooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Hook'
    post:
      tags:
        - system_hooks
      summary: Add new system hook
      description: Add a new system hook
      operationId: postApiV4Hooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Hooks'
        required: true
      responses:
        "201":
          description: Add new system hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Hook'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: postApiV4Hooks
  /api/v4/hooks/{hook_id}:
    get:
      tags:
        - system_hooks
      summary: Get system hook
      description: Get a system hook by its ID. Introduced in GitLab 14.9.
      operationId: getApiV4HooksHookId
      parameters:
        - name: hook_id
          in: path
          description: The ID of the system hook
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get system hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Hook'
        "404":
          description: Not found
          content: {}
    put:
      tags:
        - system_hooks
      summary: Edit system hook
      description: Edits a system hook
      operationId: putApiV4HooksHookId
      parameters:
        - name: hook_id
          in: path
          description: The ID of the system hook
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4HooksHookId'
        required: true
      responses:
        "200":
          description: Edit system hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Hook'
        "400":
          description: Validation error
          content: {}
        "404":
          description: Not found
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
      x-codegen-request-body-name: putApiV4HooksHookId
    post:
      tags:
        - hooks
      operationId: postApiV4HooksHookId
      parameters:
        - name: hook_id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: created Hook
          content: {}
    delete:
      tags:
        - system_hooks
      summary: Delete system hook
      description: Deletes a system hook
      operationId: deleteApiV4HooksHookId
      parameters:
        - name: hook_id
          in: path
          description: The ID of the system hook
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "404":
          description: Not found
          content: {}
        "204":
          description: Delete system hook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Hook'
  /api/v4/hooks/{hook_id}/url_variables/{key}:
    put:
      tags:
        - hooks
      description: Set a url variable
      operationId: putApiV4HooksHookIdUrlVariablesKey
      parameters:
        - name: hook_id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4HooksHookIdUrlVariablesKey'
        required: true
      responses:
        "200":
          description: Set a url variable
          content: {}
      x-codegen-request-body-name: putApiV4HooksHookIdUrlVariablesKey
    delete:
      tags:
        - hooks
      description: Un-Set a url variable
      operationId: deleteApiV4HooksHookIdUrlVariablesKey
      parameters:
        - name: hook_id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: The key of the variable
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Un-Set a url variable
          content: {}
  /api/v4/feature_flags/unleash/{project_id}:
    get:
      tags:
        - feature_flags
      operationId: getApiV4FeatureFlagsUnleashProjectId
      parameters:
        - name: project_id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: instance_id
          in: query
          description: The instance ID of Unleash Client
          schema:
            type: string
        - name: app_name
          in: query
          description: The application name of Unleash Client
          schema:
            type: string
      responses:
        "200":
          description: get Unleash(s)
          content: {}
  /api/v4/feature_flags/unleash/{project_id}/features:
    get:
      tags:
        - unleash_api
      description: Get a list of features (deprecated, v2 client support)
      operationId: getApiV4FeatureFlagsUnleashProjectIdFeatures
      parameters:
        - name: project_id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: instance_id
          in: query
          description: The instance ID of Unleash Client
          schema:
            type: string
        - name: app_name
          in: query
          description: The application name of Unleash Client
          schema:
            type: string
      responses:
        "200":
          description: Get a list of features (deprecated, v2 client support)
          content: {}
  /api/v4/feature_flags/unleash/{project_id}/client/features:
    get:
      tags:
        - unleash_api
      description: Get a list of features
      operationId: getApiV4FeatureFlagsUnleashProjectIdClientFeatures
      parameters:
        - name: project_id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
        - name: instance_id
          in: query
          description: The instance ID of Unleash Client
          schema:
            type: string
        - name: app_name
          in: query
          description: The application name of Unleash Client
          schema:
            type: string
      responses:
        "200":
          description: Get a list of features
          content: {}
  /api/v4/feature_flags/unleash/{project_id}/client/register:
    post:
      tags:
        - feature_flags
      operationId: postApiV4FeatureFlagsUnleashProjectIdClientRegister
      parameters:
        - name: project_id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4FeatureFlagsUnleashProjectIdClientRegister'
        required: true
      responses:
        "201":
          description: created Register
          content: {}
      x-codegen-request-body-name: postApiV4FeatureFlagsUnleashProjectIdClientRegister
  /api/v4/feature_flags/unleash/{project_id}/client/metrics:
    post:
      tags:
        - feature_flags
      operationId: postApiV4FeatureFlagsUnleashProjectIdClientMetrics
      parameters:
        - name: project_id
          in: path
          description: The ID of a project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4FeatureFlagsUnleashProjectIdClientMetrics'
        required: true
      responses:
        "201":
          description: created Metric
          content: {}
      x-codegen-request-body-name: postApiV4FeatureFlagsUnleashProjectIdClientMetrics
  /api/v4/usage_data/service_ping:
    get:
      tags:
        - usage_data
      summary: Get the latest ServicePing payload
      description: Introduces in Gitlab 16.9. Requires Personal Access Token with read_service_ping scope.
      operationId: getApiV4UsageDataServicePing
      responses:
        "200":
          description: Get the latest ServicePing payload
          content: {}
        "401":
          description: 401 Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/usage_data/increment_counter:
    post:
      tags:
        - usage_data
      summary: Track usage data event
      description: This feature was introduced in GitLab 13.4.
      operationId: postApiV4UsageDataIncrementCounter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsageDataIncrementCounter'
        required: true
      responses:
        "200":
          description: Track usage data event
          content: {}
        "403":
          description: Invalid CSRF token is provided
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4UsageDataIncrementCounter
  /api/v4/usage_data/increment_unique_users:
    post:
      tags:
        - usage_data
      description: Track usage data event for the current user
      operationId: postApiV4UsageDataIncrementUniqueUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsageDataIncrementUniqueUsers'
        required: true
      responses:
        "200":
          description: Track usage data event for the current user
          content: {}
        "403":
          description: Invalid CSRF token is provided
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4UsageDataIncrementUniqueUsers
  /api/v4/usage_data/track_event:
    post:
      tags:
        - usage_data
      summary: Track gitlab internal events
      description: This feature was introduced in GitLab 16.2.
      operationId: postApiV4UsageDataTrackEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UsageDataTrackEvent'
        required: true
      responses:
        "200":
          description: Track gitlab internal events
          content: {}
        "403":
          description: Invalid CSRF token is provided
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: postApiV4UsageDataTrackEvent
  /api/v4/usage_data/metric_definitions:
    get:
      tags:
        - usage_data
        - metrics
      summary: Get a list of all metric definitions
      description: This feature was introduced in GitLab 13.11.
      operationId: getApiV4UsageDataMetricDefinitions
      responses:
        "200":
          description: Get a list of all metric definitions
          content: {}
        "403":
          description: Invalid CSRF token is provided
          content: {}
        "404":
          description: Not found
          content: {}
  /api/v4/usage_data/non_sql_metrics:
    get:
      tags:
        - usage_data
      summary: Get Non SQL usage ping metrics
      description: This feature was introduced in GitLab 13.11.
      operationId: getApiV4UsageDataNonSqlMetrics
      responses:
        "200":
          description: Get Non SQL usage ping metrics
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v4/usage_data/queries:
    get:
      tags:
        - usage_data
      summary: Get raw SQL queries for usage data SQL metrics
      description: This feature was introduced in GitLab 13.11.
      operationId: getApiV4UsageDataQueries
      responses:
        "200":
          description: Get raw SQL queries for usage data SQL metrics
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
  /api/v3/user:
    get:
      tags:
        - user
      description: Get the currently authenticated user
      operationId: getApiV3User
      responses:
        "200":
          description: Get the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserPublic'
  /api/v4/user/keys:
    get:
      tags:
        - user
      description: Get the currently authenticated user's SSH keys
      operationId: getApiV4UserKeys
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the currently authenticated user's SSH keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
    post:
      tags:
        - user
      description: Add a new SSH key to the currently authenticated user
      operationId: postApiV4UserKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UserKeys'
        required: true
      responses:
        "201":
          description: Add a new SSH key to the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
      x-codegen-request-body-name: postApiV4UserKeys
  /api/v4/user/keys/{key_id}:
    get:
      tags:
        - user
      description: Get a single key owned by currently authenticated user
      operationId: getApiV4UserKeysKeyId
      parameters:
        - name: key_id
          in: path
          description: The ID of the SSH key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single key owned by currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
    delete:
      tags:
        - user
      description: Delete an SSH key from the currently authenticated user
      operationId: deleteApiV4UserKeysKeyId
      parameters:
        - name: key_id
          in: path
          description: The ID of the SSH key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Delete an SSH key from the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_SSHKey'
  /api/v4/user/gpg_keys:
    get:
      tags:
        - user
      summary: Get the currently authenticated user's GPG keys
      description: This feature was added in GitLab 10.0
      operationId: getApiV4UserGpgKeys
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the currently authenticated user's GPG keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GpgKey'
    post:
      tags:
        - user
      summary: Add a new GPG key to the currently authenticated user
      description: This feature was added in GitLab 10.0
      operationId: postApiV4UserGpgKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UserGpgKeys'
        required: true
      responses:
        "201":
          description: Add a new GPG key to the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GpgKey'
      x-codegen-request-body-name: postApiV4UserGpgKeys
  /api/v4/user/gpg_keys/{key_id}:
    get:
      tags:
        - user
      summary: Get a single GPG key owned by currently authenticated user
      description: This feature was added in GitLab 10.0
      operationId: getApiV4UserGpgKeysKeyId
      parameters:
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single GPG key owned by currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_GpgKey'
    delete:
      tags:
        - user
      summary: Delete a GPG key from the currently authenticated user
      description: This feature was added in GitLab 10.0
      operationId: deleteApiV4UserGpgKeysKeyId
      parameters:
        - name: key_id
          in: path
          description: The ID of the SSH key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a GPG key from the currently authenticated user
          content: {}
  /api/v4/user/gpg_keys/{key_id}/revoke:
    post:
      tags:
        - user
      summary: Revoke a GPG key owned by currently authenticated user
      description: This feature was added in GitLab 10.0
      operationId: postApiV4UserGpgKeysKeyIdRevoke
      parameters:
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Revoke a GPG key owned by currently authenticated user
          content: {}
  /api/v4/user/emails:
    get:
      tags:
        - user
      description: Get the currently authenticated user's email addresses
      operationId: getApiV4UserEmails
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get the currently authenticated user's email addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
    post:
      tags:
        - user
      description: Add new email address to the currently authenticated user
      operationId: postApiV4UserEmails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UserEmails'
        required: true
      responses:
        "201":
          description: Add new email address to the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
      x-codegen-request-body-name: postApiV4UserEmails
  /api/v4/user/{user_id}/credit_card_validation:
    put:
      tags:
        - user
      description: Update a user's credit_card_validation
      operationId: putApiV4UserUserIdCreditCardValidation
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4UserUserIdCreditCardValidation'
        required: true
      responses:
        "200":
          description: Update a user's credit_card_validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserCreditCardValidations'
      x-codegen-request-body-name: putApiV4UserUserIdCreditCardValidation
  /api/v4/user/preferences:
    get:
      tags:
        - user
      summary: Get the current user's preferences
      description: This feature was introduced in GitLab 14.0.
      operationId: getApiV4UserPreferences
      responses:
        "200":
          description: Get the current user's preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserPreferences'
    put:
      tags:
        - user
      summary: Update the current user's preferences
      description: This feature was introduced in GitLab 13.10.
      operationId: putApiV4UserPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4UserPreferences'
        required: true
      responses:
        "200":
          description: Update the current user's preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserPreferences'
      x-codegen-request-body-name: putApiV4UserPreferences
  /api/v4/user/emails/{email_id}:
    get:
      tags:
        - user
      description: Get a single email address owned by the currently authenticated user
      operationId: getApiV4UserEmailsEmailId
      parameters:
        - name: email_id
          in: path
          description: The ID of the email
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get a single email address owned by the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Email'
    delete:
      tags:
        - user
      description: Delete an email address from the currently authenticated user
      operationId: deleteApiV4UserEmailsEmailId
      parameters:
        - name: email_id
          in: path
          description: The ID of the email
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete an email address from the currently authenticated user
          content: {}
  /api/v4/user/activities:
    get:
      tags:
        - user
      description: Get a list of user activities
      operationId: getApiV4UserActivities
      parameters:
        - name: from
          in: query
          description: Date string in the format YEAR-MONTH-DAY
          schema:
            type: string
            format: date-time
            default: "2023-11-23T21:13:09.055Z"
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get a list of user activities
          content: {}
  /api/v4/user/status:
    get:
      tags:
        - user
      description: get the status of the current user
      operationId: getApiV4UserStatus
      responses:
        "200":
          description: get the status of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserStatus'
    put:
      tags:
        - user
      summary: Set the status of the current user
      description: Any parameters that are not passed will be nullified.
      operationId: putApiV4UserStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4UserStatus'
        required: true
      responses:
        "200":
          description: Set the status of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserStatus'
      x-codegen-request-body-name: putApiV4UserStatus
    patch:
      tags:
        - user
      summary: Set the status of the current user
      description: Any parameters that are not passed will be ignored.
      operationId: patchApiV4UserStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchApiV4UserStatus'
        required: true
      responses:
        "200":
          description: Set the status of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserStatus'
      x-codegen-request-body-name: patchApiV4UserStatus
  /api/v4/user/avatar:
    put:
      tags:
        - user
      summary: Set the avatar of the current user
      description: This feature was introduced in GitLab 17.0.
      operationId: putApiV4UserAvatar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4UserAvatar'
        required: true
      responses:
        "200":
          description: Set the avatar of the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Avatar'
      x-codegen-request-body-name: putApiV4UserAvatar
  /api/v4/user/runners:
    post:
      tags:
        - user
        - runners
      summary: Create a runner owned by currently authenticated user
      description: Create a new runner
      operationId: postApiV4UserRunners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UserRunners'
        required: true
      responses:
        "201":
          description: Create a runner owned by currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Ci_RunnerRegistrationDetails'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: postApiV4UserRunners
  /api/v4/user/personal_access_tokens:
    post:
      tags:
        - user
      summary: Create a personal access token with limited scopes for the currently authenticated user
      description: This feature was introduced in GitLab 16.5
      operationId: postApiV4UserPersonalAccessTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4UserPersonalAccessTokens'
        required: true
      responses:
        "201":
          description: Create a personal access token with limited scopes for the currently authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PersonalAccessTokenWithToken'
      x-codegen-request-body-name: postApiV4UserPersonalAccessTokens
  /api/v4/user_counts:
    get:
      tags:
        - user_counts
      summary: Return the user specific counts
      description: Assigned open issues, assigned MRs and pending todos count
      operationId: getApiV4UserCounts
      responses:
        "200":
          description: Return the user specific counts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_UserCounts'
  /api/v4/application/plan_limits:
    get:
      tags:
        - plan_limits
      summary: Get current plan limits
      description: List the current limits of a plan on the GitLab instance.
      operationId: getApiV4ApplicationPlanLimits
      parameters:
        - name: plan_name
          in: query
          description: 'Name of the plan to get the limits from. Default: default.'
          schema:
            type: string
            default: default
            enum:
              - default
              - free
              - bronze
              - silver
              - premium
              - gold
              - ultimate
              - ultimate_trial
              - ultimate_trial_paid_customer
              - premium_trial
              - opensource
      responses:
        "200":
          description: Get current plan limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PlanLimit'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
    put:
      tags:
        - plan_limits
      summary: Change plan limits
      description: Modify the limits of a plan on the GitLab instance.
      operationId: putApiV4ApplicationPlanLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4ApplicationPlanLimits'
        required: true
      responses:
        "200":
          description: Change plan limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_PlanLimit'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-codegen-request-body-name: putApiV4ApplicationPlanLimits
  /api/v4/application/appearance:
    get:
      tags:
        - application
      description: Get the current appearance
      operationId: getApiV4ApplicationAppearance
      responses:
        "200":
          description: Get the current appearance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Appearance'
    put:
      tags:
        - application
      description: Modify appearance
      operationId: putApiV4ApplicationAppearance
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Instance title on the sign in / sign up page
                description:
                  type: string
                  description: Markdown text shown on the sign in / sign up page
                pwa_name:
                  type: string
                  description: Name of the Progressive Web App
                pwa_short_name:
                  type: string
                  description: Optional, short name for Progressive Web App
                pwa_description:
                  type: string
                  description: An explanation of what the Progressive Web App does
                logo:
                  type: string
                  description: Instance image used on the sign in / sign up page
                  format: binary
                pwa_icon:
                  type: string
                  description: Icon used for Progressive Web App
                  format: binary
                header_logo:
                  type: string
                  description: Instance image used for the main navigation bar
                  format: binary
                favicon:
                  type: string
                  description: Instance favicon in .ico/.png format
                  format: binary
                member_guidelines:
                  type: string
                  description: Markdown text shown on the members page of a group or project
                new_project_guidelines:
                  type: string
                  description: Markdown text shown on the new project page
                profile_image_guidelines:
                  type: string
                  description: Markdown text shown on the profile page below Public Avatar
                header_message:
                  type: string
                  description: Message within the system header bar
                footer_message:
                  type: string
                  description: Message within the system footer bar
                message_background_color:
                  type: string
                  description: Background color for the system header / footer bar
                message_font_color:
                  type: string
                  description: Font color for the system header / footer bar
                email_header_and_footer_enabled:
                  type: boolean
                  description: Add header and footer to all outgoing emails if enabled
      responses:
        "200":
          description: Modify appearance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Appearance'
  /api/v4/application/statistics:
    get:
      tags:
        - application
      description: Get the current application statistics
      operationId: getApiV4ApplicationStatistics
      responses:
        "200":
          description: Get the current application statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_ApplicationStatistics'
  /api/v4/deploy_keys:
    get:
      tags:
        - deploy_keys
      summary: List all deploy keys
      description: Get a list of all deploy keys across all projects of the GitLab instance. This endpoint requires administrator access and is not available on GitLab.com.
      operationId: getApiV4DeployKeys
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: public
          in: query
          description: Only return deploy keys that are public
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: List all deploy keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_DeployKey'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/deploy_tokens:
    get:
      tags:
        - deploy_tokens
      summary: List all deploy tokens
      description: Get a list of all deploy tokens across the GitLab instance. This endpoint requires administrator access. This feature was introduced in GitLab 12.9.
      operationId: getApiV4DeployTokens
      parameters:
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
        - name: active
          in: query
          description: Limit by active status
          schema:
            type: boolean
      responses:
        "200":
          description: List all deploy tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_DeployToken'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
  /api/v4/import/bitbucket:
    post:
      tags:
        - project_import_bitbucket
      summary: Import a BitBucket Cloud repository
      description: This feature was introduced in GitLab 17.0.
      operationId: postApiV4ImportBitbucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ImportBitbucket'
        required: true
      responses:
        "201":
          description: Import a BitBucket Cloud repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectImportEntity'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4ImportBitbucket
  /api/v4/import/bitbucket_server:
    post:
      tags:
        - project_import_bitbucket
      summary: Import a BitBucket Server repository
      description: This feature was introduced in GitLab 13.2.
      operationId: postApiV4ImportBitbucketServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ImportBitbucketServer'
        required: true
      responses:
        "201":
          description: Import a BitBucket Server repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEntity'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4ImportBitbucketServer
  /api/v4/import/github:
    post:
      tags:
        - project_import_github
      summary: Import a GitHub project
      description: This feature was introduced in GitLab 11.3.4.
      operationId: postApiV4ImportGithub
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ImportGithub'
        required: true
      responses:
        "201":
          description: Import a GitHub project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEntity'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "422":
          description: Unprocessable entity
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4ImportGithub
  /api/v4/import/github/cancel:
    post:
      tags:
        - project_import_github
      summary: Cancel GitHub project import
      description: This feature was introduced in GitLab 15.5
      operationId: postApiV4ImportGithubCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ImportGithubCancel'
        required: true
      responses:
        "200":
          description: Cancel GitHub project import
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectImportEntity'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
        "503":
          description: Service unavailable
          content: {}
      x-codegen-request-body-name: postApiV4ImportGithubCancel
  /api/v4/import/github/gists:
    post:
      tags:
        - import
      summary: Import User Gists
      description: This feature was introduced in GitLab 15.8
      operationId: postApiV4ImportGithubGists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4ImportGithubGists'
        required: true
      responses:
        "202":
          description: Import User Gists
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "422":
          description: Unprocessable Entity
          content: {}
        "429":
          description: Too Many Requests
          content: {}
      x-codegen-request-body-name: postApiV4ImportGithubGists
  /api/v4/slack/trigger:
    post:
      tags:
        - slack
      summary: Trigger a global slack command
      description: Added in GitLab 9.4
      operationId: postApiV4SlackTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4SlackTrigger'
        required: true
      responses:
        "201":
          description: Trigger a global slack command
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: postApiV4SlackTrigger
  /api/v4/metadata:
    get:
      tags:
        - metadata
      summary: Retrieve metadata information for this GitLab instance
      description: This feature was introduced in GitLab 15.2.
      operationId: getApiV4Metadata
      responses:
        "200":
          description: Retrieve metadata information for this GitLab instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Metadata'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/version:
    get:
      tags:
        - metadata
      summary: Retrieves version information for the GitLab instance
      description: This feature was introduced in GitLab 8.13 and deprecated in 15.5. We recommend you instead use the Metadata API.
      operationId: getApiV4Version
      responses:
        "200":
          description: Retrieves version information for the GitLab instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Metadata'
        "401":
          description: Unauthorized
          content: {}
  /api/v4/topics:
    get:
      tags:
        - topics
      summary: Get topics
      description: This feature was introduced in GitLab 14.5.
      operationId: getApiV4Topics
      parameters:
        - name: search
          in: query
          description: Return list of topics matching the search criteria
          schema:
            type: string
        - name: without_projects
          in: query
          description: Return list of topics without assigned projects
          schema:
            type: boolean
        - name: page
          in: query
          description: Current page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: Get topics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_Topic'
    post:
      tags:
        - topics
      summary: Create a topic
      description: This feature was introduced in GitLab 14.5.
      operationId: postApiV4Topics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4Topics'
        required: true
      responses:
        "201":
          description: Create a topic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_Topic'
      x-codegen-request-body-name: postApiV4Topics
  /api/v4/topics/{id}:
    get:
      tags:
        - topics
      summary: Get topic
      description: This feature was introduced in GitLab 14.5.
      operationId: getApiV4TopicsId
      parameters:
        - name: id
          in: path
          description: ID of project topic
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get topic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_Topic'
    put:
      tags:
        - topics
      summary: Update a topic
      description: This feature was introduced in GitLab 14.5.
      operationId: putApiV4TopicsId
      parameters:
        - name: id
          in: path
          description: ID of project topic
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putApiV4TopicsId'
        required: true
      responses:
        "200":
          description: Update a topic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_Topic'
      x-codegen-request-body-name: putApiV4TopicsId
    delete:
      tags:
        - topics
      summary: Delete a topic
      description: This feature was introduced in GitLab 14.9.
      operationId: deleteApiV4TopicsId
      parameters:
        - name: id
          in: path
          description: ID of project topic
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a topic
          content: {}
  /api/v4/topics/merge:
    post:
      tags:
        - topics
      summary: Merge topics
      description: This feature was introduced in GitLab 15.4.
      operationId: postApiV4TopicsMerge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApiV4TopicsMerge'
        required: true
      responses:
        "201":
          description: Merge topics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Projects_Topic'
      x-codegen-request-body-name: postApiV4TopicsMerge
components:
  schemas:
    API_Entities_AccessRequester:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: admin
        name:
          type: string
          example: Administrator
        state:
          type: string
          example: active
        locked:
          type: boolean
        avatar_url:
          type: string
          example: https://gravatar.com/avatar/1
        avatar_path:
          type: string
          example: /user/avatar/28/The-Big-Lebowski-400-400.png
        custom_attributes:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_CustomAttribute'
        web_url:
          type: string
          example: https://gitlab.example.com/root
        requested_at:
          type: string
      description: API_Entities_AccessRequester model
    API_Entities_CustomAttribute:
      type: object
      properties:
        key:
          type: string
          example: foo
        value:
          type: string
          example: bar
      description: API_Entities_CustomAttribute model
    putApiV4GroupsIdAccessRequestsUserIdApprove:
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, the Developer role)'
          format: int32
          default: 30
      description: Approves an access request for the given user.
    API_Entities_Badge:
      type: object
      properties:
        name:
          type: string
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
        id:
          type: string
        kind:
          type: string
      description: API_Entities_Badge model
    API_Entities_BasicBadgeDetails:
      type: object
      properties:
        name:
          type: string
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
      description: API_Entities_BasicBadgeDetails model
    postApiV4GroupsIdBadges:
      required:
        - image_url
        - link_url
      type: object
      properties:
        link_url:
          type: string
          description: URL of the badge link
        image_url:
          type: string
          description: URL of the badge image
        name:
          type: string
          description: Name for the badge
      description: Adds a badge to a group.
    putApiV4GroupsIdBadgesBadgeId:
      type: object
      properties:
        link_url:
          type: string
          description: URL of the badge link
        image_url:
          type: string
          description: URL of the badge image
        name:
          type: string
          description: Name for the badge
      description: Updates a badge of a group.
    putApiV4GroupsIdCustomAttributesKey:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the custom attribute
      description: Set a custom attribute on a group
    API_Entities_Group:
      type: object
      properties:
        id:
          type: string
        web_url:
          type: string
        name:
          type: string
        path:
          type: string
        description:
          type: string
        visibility:
          type: string
        share_with_group_lock:
          type: string
        require_two_factor_authentication:
          type: string
        two_factor_grace_period:
          type: string
        project_creation_level:
          type: string
        auto_devops_enabled:
          type: string
        subgroup_creation_level:
          type: string
        emails_disabled:
          type: boolean
        emails_enabled:
          type: boolean
        mentions_disabled:
          type: string
        lfs_enabled:
          type: string
        math_rendering_limits_enabled:
          type: boolean
        lock_math_rendering_limits_enabled:
          type: boolean
        default_branch:
          type: string
        default_branch_protection:
          type: string
        default_branch_protection_defaults:
          type: string
        avatar_url:
          type: string
        request_access_enabled:
          type: string
        full_name:
          type: string
        full_path:
          type: string
        created_at:
          type: string
        parent_id:
          type: string
        organization_id:
          type: string
        shared_runners_setting:
          type: string
        custom_attributes:
          $ref: '#/components/schemas/API_Entities_CustomAttribute'
        statistics:
          type: object
          properties:
            storage_size:
              type: string
            repository_size:
              type: string
            wiki_size:
              type: string
            lfs_objects_size:
              type: string
            job_artifacts_size:
              type: string
            pipeline_artifacts_size:
              type: string
            packages_size:
              type: string
            snippets_size:
              type: string
            uploads_size:
              type: string
        ldap_cn:
          type: string
        ldap_access:
          type: string
        ldap_group_links:
          $ref: '#/components/schemas/EE_API_Entities_LdapGroupLink'
        saml_group_links:
          $ref: '#/components/schemas/EE_API_Entities_SamlGroupLink'
        file_template_project_id:
          type: string
        marked_for_deletion_on:
          type: string
        wiki_access_level:
          type: string
        repository_storage:
          type: string
        duo_features_enabled:
          type: string
        lock_duo_features_enabled:
          type: string
      description: API_Entities_Group model
    EE_API_Entities_LdapGroupLink:
      type: object
      properties:
        cn:
          type: string
          example: ldap-group-1
        group_access:
          type: integer
          format: int32
          example: 10
        provider:
          type: string
          example: ldapmain
        filter:
          type: string
          example: id >= 500
    EE_API_Entities_SamlGroupLink:
      type: object
      properties:
        name:
          type: string
          example: saml-group-1
        access_level:
          type: integer
          format: int32
          example: 40
        member_role_id:
          type: integer
          format: int32
          example: 12
    postApiV4Groups:
      required:
        - name
        - path
      type: object
      properties:
        name:
          type: string
          description: The name of the group
        path:
          type: string
          description: The path of the group
        parent_id:
          type: integer
          description: The parent group id for creating nested group
          format: int32
        organization_id:
          type: integer
          description: The organization id for the group
          format: int32
        description:
          type: string
          description: The description of the group
        visibility:
          type: string
          description: The visibility of the group
          enum:
            - private
            - internal
            - public
        avatar:
          type: file
          description: Avatar image for the group
          format: binary
        share_with_group_lock:
          type: boolean
          description: Prevent sharing a project with another group within this group
        require_two_factor_authentication:
          type: boolean
          description: Require all users in this group to setup Two-factor authentication
        two_factor_grace_period:
          type: integer
          description: Time before Two-factor authentication is enforced
          format: int32
        project_creation_level:
          type: string
          description: Determine if developers can create projects in the group
          enum:
            - noone
            - maintainer
            - developer
        auto_devops_enabled:
          type: boolean
          description: Default to Auto DevOps pipeline for all projects within this group
        subgroup_creation_level:
          type: string
          description: Allowed to create subgroups
          enum:
            - owner
            - maintainer
        emails_disabled:
          type: boolean
          description: '_(Deprecated)_ Disable email notifications. Use: emails_enabled'
        emails_enabled:
          type: boolean
          description: Enable email notifications
        show_diff_preview_in_email:
          type: boolean
          description: Include the code diff preview in merge request notification emails
        mentions_disabled:
          type: boolean
          description: Disable a group from getting mentioned
        lfs_enabled:
          type: boolean
          description: Enable/disable LFS for the projects in this group
        request_access_enabled:
          type: boolean
          description: Allow users to request member access
        default_branch:
          type: string
          description: The default branch of group's projects
          example: main
        default_branch_protection:
          type: integer
          description: Determine if developers can push to default branch
          format: int32
          enum:
            - 0
            - 3
            - 1
            - 2
            - 4
        default_branch_protection_defaults:
          type: object
          properties:
            allowed_to_push:
              type: array
              description: An array of access levels allowed to push
              items:
                required:
                  - access_level
                type: object
                properties:
                  access_level:
                    type: integer
                    description: A valid access level
                    format: int32
                    enum:
                      - 30
                      - 40
            allow_force_push:
              type: boolean
              description: Allow force push for all users with push access.
            allowed_to_merge:
              type: array
              description: An array of access levels allowed to merge
              items:
                required:
                  - access_level
                type: object
                properties:
                  access_level:
                    type: integer
                    description: A valid access level
                    format: int32
                    enum:
                      - 30
                      - 40
            code_owner_approval_required:
              type: boolean
              description: Require approval from code owners
            developer_can_initial_push:
              type: boolean
              description: Allow developers to initial push
          description: Determine if developers can push to default branch
        shared_runners_setting:
          type: string
          description: Enable/disable shared runners for the group and its subgroups and projects
          enum:
            - disabled_and_unoverridable
            - disabled_and_overridable
            - enabled
        enabled_git_access_protocol:
          type: string
          description: Allow only the selected protocols to be used for Git access.
          enum:
            - ssh
            - http
            - all
        membership_lock:
          type: boolean
          description: Prevent adding new members to projects within this group
        ldap_cn:
          type: string
          description: LDAP Common Name
        ldap_access:
          type: integer
          description: A valid access level
          format: int32
        shared_runners_minutes_limit:
          type: integer
          description: (admin-only) Compute minutes quota for this group
          format: int32
        extra_shared_runners_minutes_limit:
          type: integer
          description: (admin-only) Extra compute minutes quota for this group
          format: int32
        wiki_access_level:
          type: string
          description: Wiki access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
      description: Create a group. Available only for users who can create groups.
    putApiV4GroupsId:
      type: object
      properties:
        name:
          type: string
          description: The name of the group
        path:
          type: string
          description: The path of the group
        description:
          type: string
          description: The description of the group
        visibility:
          type: string
          description: The visibility of the group
          enum:
            - private
            - internal
            - public
        avatar:
          type: file
          description: Avatar image for the group
          format: binary
        share_with_group_lock:
          type: boolean
          description: Prevent sharing a project with another group within this group
        require_two_factor_authentication:
          type: boolean
          description: Require all users in this group to setup Two-factor authentication
        two_factor_grace_period:
          type: integer
          description: Time before Two-factor authentication is enforced
          format: int32
        project_creation_level:
          type: string
          description: Determine if developers can create projects in the group
          enum:
            - noone
            - maintainer
            - developer
        auto_devops_enabled:
          type: boolean
          description: Default to Auto DevOps pipeline for all projects within this group
        subgroup_creation_level:
          type: string
          description: Allowed to create subgroups
          enum:
            - owner
            - maintainer
        emails_disabled:
          type: boolean
          description: '_(Deprecated)_ Disable email notifications. Use: emails_enabled'
        emails_enabled:
          type: boolean
          description: Enable email notifications
        show_diff_preview_in_email:
          type: boolean
          description: Include the code diff preview in merge request notification emails
        mentions_disabled:
          type: boolean
          description: Disable a group from getting mentioned
        lfs_enabled:
          type: boolean
          description: Enable/disable LFS for the projects in this group
        request_access_enabled:
          type: boolean
          description: Allow users to request member access
        default_branch:
          type: string
          description: The default branch of group's projects
          example: main
        default_branch_protection:
          type: integer
          description: Determine if developers can push to default branch
          format: int32
          enum:
            - 0
            - 3
            - 1
            - 2
            - 4
        default_branch_protection_defaults:
          type: object
          properties:
            allowed_to_push:
              type: array
              description: An array of access levels allowed to push
              items:
                required:
                  - access_level
                type: object
                properties:
                  access_level:
                    type: integer
                    description: A valid access level
                    format: int32
                    enum:
                      - 30
                      - 40
            allow_force_push:
              type: boolean
              description: Allow force push for all users with push access.
            allowed_to_merge:
              type: array
              description: An array of access levels allowed to merge
              items:
                required:
                  - access_level
                type: object
                properties:
                  access_level:
                    type: integer
                    description: A valid access level
                    format: int32
                    enum:
                      - 30
                      - 40
            code_owner_approval_required:
              type: boolean
              description: Require approval from code owners
            developer_can_initial_push:
              type: boolean
              description: Allow developers to initial push
          description: Determine if developers can push to default branch
        shared_runners_setting:
          type: string
          description: Enable/disable shared runners for the group and its subgroups and projects
          enum:
            - disabled_and_unoverridable
            - disabled_and_overridable
            - enabled
        enabled_git_access_protocol:
          type: string
          description: Allow only the selected protocols to be used for Git access.
          enum:
            - ssh
            - http
            - all
        membership_lock:
          type: boolean
          description: Prevent adding new members to projects within this group
        ldap_cn:
          type: string
          description: LDAP Common Name
        ldap_access:
          type: integer
          description: A valid access level
          format: int32
        shared_runners_minutes_limit:
          type: integer
          description: (admin-only) Compute minutes quota for this group
          format: int32
        extra_shared_runners_minutes_limit:
          type: integer
          description: (admin-only) Extra compute minutes quota for this group
          format: int32
        wiki_access_level:
          type: string
          description: Wiki access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        prevent_sharing_groups_outside_hierarchy:
          type: boolean
          description: Prevent sharing groups within this namespace with any groups outside the namespace. Only available on top-level groups.
        lock_math_rendering_limits_enabled:
          type: boolean
          description: Indicates if math rendering limits are locked for all descendent groups.
        math_rendering_limits_enabled:
          type: boolean
          description: Indicates if math rendering limits are used for this group.
        file_template_project_id:
          type: integer
          description: The ID of a project to use for custom templates in this group
          format: int32
        prevent_forking_outside_group:
          type: boolean
          description: Prevent forking projects inside this group to external namespaces
        unique_project_download_limit:
          type: integer
          description: Maximum number of unique projects a user can download in the specified time period before they are banned.
          format: int32
        unique_project_download_limit_interval_in_seconds:
          type: integer
          description: Time period during which a user can download a maximum amount of projects before they are banned.
          format: int32
        unique_project_download_limit_allowlist:
          type: array
          description: List of usernames excluded from the unique project download limit
          items:
            type: string
        unique_project_download_limit_alertlist:
          type: array
          description: List of user ids who will be emailed when Git abuse rate limit is exceeded
          items:
            type: integer
            format: int32
        auto_ban_user_on_excessive_projects_download:
          type: boolean
          description: Ban users from the group when they exceed maximum number of unique projects download in the specified time period
        ip_restriction_ranges:
          type: string
          description: List of IP addresses which need to be restricted for group
        service_access_tokens_expiration_enforced:
          type: boolean
          description: To enforce token expiration for Service accounts users for group
        duo_features_enabled:
          type: boolean
          description: Indicates whether GitLab Duo features are enabled for the group
        lock_duo_features_enabled:
          type: boolean
          description: Indicates if the GitLab Duo features enabled setting is enforced for all subgroups
      description: Update a group. Available only for users who can administrate groups.
    API_Entities_GroupDetail:
      type: object
      properties:
        id:
          type: string
        web_url:
          type: string
        name:
          type: string
        path:
          type: string
        description:
          type: string
        visibility:
          type: string
        share_with_group_lock:
          type: string
        require_two_factor_authentication:
          type: string
        two_factor_grace_period:
          type: string
        project_creation_level:
          type: string
        auto_devops_enabled:
          type: string
        subgroup_creation_level:
          type: string
        emails_disabled:
          type: boolean
        emails_enabled:
          type: boolean
        mentions_disabled:
          type: string
        lfs_enabled:
          type: string
        math_rendering_limits_enabled:
          type: boolean
        lock_math_rendering_limits_enabled:
          type: boolean
        default_branch:
          type: string
        default_branch_protection:
          type: string
        default_branch_protection_defaults:
          type: string
        avatar_url:
          type: string
        request_access_enabled:
          type: string
        full_name:
          type: string
        full_path:
          type: string
        created_at:
          type: string
        parent_id:
          type: string
        organization_id:
          type: string
        shared_runners_setting:
          type: string
        custom_attributes:
          $ref: '#/components/schemas/API_Entities_CustomAttribute'
        statistics:
          type: object
          properties:
            storage_size:
              type: string
            repository_size:
              type: string
            wiki_size:
              type: string
            lfs_objects_size:
              type: string
            job_artifacts_size:
              type: string
            pipeline_artifacts_size:
              type: string
            packages_size:
              type: string
            snippets_size:
              type: string
            uploads_size:
              type: string
        ldap_cn:
          type: string
        ldap_access:
          type: string
        ldap_group_links:
          $ref: '#/components/schemas/EE_API_Entities_LdapGroupLink'
        saml_group_links:
          $ref: '#/components/schemas/EE_API_Entities_SamlGroupLink'
        file_template_project_id:
          type: string
        marked_for_deletion_on:
          type: string
        wiki_access_level:
          type: string
        repository_storage:
          type: string
        duo_features_enabled:
          type: string
        lock_duo_features_enabled:
          type: string
        shared_with_groups:
          type: string
        runners_token:
          type: string
        enabled_git_access_protocol:
          type: string
        prevent_sharing_groups_outside_hierarchy:
          type: string
        projects:
          $ref: '#/components/schemas/API_Entities_Project'
        shared_projects:
          $ref: '#/components/schemas/API_Entities_Project'
        shared_runners_minutes_limit:
          type: string
        extra_shared_runners_minutes_limit:
          type: string
        prevent_forking_outside_group:
          type: string
        service_access_tokens_expiration_enforced:
          type: string
        membership_lock:
          type: string
        ip_restriction_ranges:
          type: string
        unique_project_download_limit:
          type: string
        unique_project_download_limit_interval_in_seconds:
          type: string
        unique_project_download_limit_allowlist:
          type: string
        unique_project_download_limit_alertlist:
          type: string
        auto_ban_user_on_excessive_projects_download:
          type: string
      description: API_Entities_GroupDetail model
    API_Entities_Project:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: desc
        name:
          type: string
          example: project1
        name_with_namespace:
          type: string
          example: John Doe / project1
        path:
          type: string
          example: project1
        path_with_namespace:
          type: string
          example: namespace1/project1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        default_branch:
          type: string
          example: main
        tag_list:
          type: array
          items:
            type: string
            example: tag
        topics:
          type: array
          items:
            type: string
            example: topic
        ssh_url_to_repo:
          type: string
          example: git@gitlab.example.com:gitlab/gitlab.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab.git
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab
        readme_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab/blob/master/README.md
        forks_count:
          type: integer
          format: int32
          example: 1
        license_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE
        license:
          $ref: '#/components/schemas/API_Entities_LicenseBasic'
        avatar_url:
          type: string
          example: http://example.com/uploads/project/avatar/3/uploads/avatar.png
        star_count:
          type: integer
          format: int32
          example: 1
        last_activity_at:
          type: string
          format: date-time
          example: "2013-09-30T13:46:02Z"
        namespace:
          $ref: '#/components/schemas/API_Entities_NamespaceBasic'
        custom_attributes:
          $ref: '#/components/schemas/API_Entities_CustomAttribute'
        repository_storage:
          type: string
          example: default
        container_registry_image_prefix:
          type: string
          example: registry.gitlab.example.com/gitlab/gitlab-client
        _links:
          type: object
          properties:
            self:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4
            issues:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/issues
            merge_requests:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/merge_requests
            repo_branches:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/repository/branches
            labels:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/labels
            events:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/events
            members:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/members
            cluster_agents:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/cluster_agents
        packages_enabled:
          type: boolean
        empty_repo:
          type: boolean
        archived:
          type: boolean
        visibility:
          type: string
          example: public
        owner:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        resolve_outdated_diff_discussions:
          type: boolean
        container_expiration_policy:
          $ref: '#/components/schemas/API_Entities_ContainerExpirationPolicy'
        repository_object_format:
          type: string
          example: sha1
        issues_enabled:
          type: boolean
        merge_requests_enabled:
          type: boolean
        wiki_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        snippets_enabled:
          type: boolean
        container_registry_enabled:
          type: boolean
        service_desk_enabled:
          type: boolean
        service_desk_address:
          type: string
          example: address@example.com
        can_create_merge_request_in:
          type: boolean
        issues_access_level:
          type: string
          example: enabled
        repository_access_level:
          type: string
          example: enabled
        merge_requests_access_level:
          type: string
          example: enabled
        forking_access_level:
          type: string
          example: enabled
        wiki_access_level:
          type: string
          example: enabled
        builds_access_level:
          type: string
          example: enabled
        snippets_access_level:
          type: string
          example: enabled
        pages_access_level:
          type: string
          example: enabled
        analytics_access_level:
          type: string
          example: enabled
        container_registry_access_level:
          type: string
          example: enabled
        security_and_compliance_access_level:
          type: string
          example: enabled
        releases_access_level:
          type: string
          example: enabled
        environments_access_level:
          type: string
          example: enabled
        feature_flags_access_level:
          type: string
          example: enabled
        infrastructure_access_level:
          type: string
          example: enabled
        monitor_access_level:
          type: string
          example: enabled
        model_experiments_access_level:
          type: string
          example: enabled
        model_registry_access_level:
          type: string
          example: enabled
        emails_disabled:
          type: boolean
        emails_enabled:
          type: boolean
        shared_runners_enabled:
          type: boolean
        lfs_enabled:
          type: boolean
        creator_id:
          type: integer
          format: int32
          example: 1
        forked_from_project:
          $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        mr_default_target_self:
          type: boolean
        import_url:
          type: string
          example: https://gitlab.com/gitlab/gitlab.git
        import_type:
          type: string
          example: git
        import_status:
          type: string
          example: none
        import_error:
          type: string
          example: Import error
        open_issues_count:
          type: integer
          format: int32
          example: 1
        description_html:
          type: string
        updated_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        ci_default_git_depth:
          type: integer
          format: int32
          example: 20
        ci_forward_deployment_enabled:
          type: boolean
        ci_forward_deployment_rollback_allowed:
          type: boolean
        ci_job_token_scope_enabled:
          type: boolean
        ci_separated_caches:
          type: boolean
        ci_allow_fork_pipelines_to_run_in_parent_project:
          type: boolean
        build_git_strategy:
          type: string
          example: fetch
        keep_latest_artifact:
          type: boolean
        restrict_user_defined_variables:
          type: boolean
        ci_pipeline_variables_minimum_override_role:
          type: string
        runners_token:
          type: string
          example: b8547b1dc37721d05889db52fa2f02
        runner_token_expiration_interval:
          type: integer
          format: int32
          example: 3600
        group_runners_enabled:
          type: boolean
        auto_cancel_pending_pipelines:
          type: string
          example: enabled
        build_timeout:
          type: integer
          format: int32
          example: 3600
        auto_devops_enabled:
          type: boolean
        auto_devops_deploy_strategy:
          type: string
          example: continuous
        ci_config_path:
          type: string
          example: ""
        public_jobs:
          type: boolean
        shared_with_groups:
          type: array
          items:
            type: string
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        allow_merge_on_skipped_pipeline:
          type: boolean
        request_access_enabled:
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        printing_merge_request_link_enabled:
          type: boolean
        merge_method:
          type: string
          example: merge
        squash_option:
          type: string
          example: default_off
        enforce_auth_checks_on_uploads:
          type: boolean
        suggestion_commit_message:
          type: string
          example: Suggestion message
        merge_commit_template:
          type: string
          example: '%(title)'
        squash_commit_template:
          type: string
          example: '%(source_branch)'
        issue_branch_template:
          type: string
          example: '%(title)'
        statistics:
          $ref: '#/components/schemas/API_Entities_ProjectStatistics'
        warn_about_potentially_unwanted_characters:
          type: boolean
        autoclose_referenced_issues:
          type: boolean
        approvals_before_merge:
          type: string
        mirror:
          type: string
        mirror_user_id:
          type: string
        mirror_trigger_builds:
          type: string
        only_mirror_protected_branches:
          type: string
        mirror_overwrites_diverged_branches:
          type: string
        external_authorization_classification_label:
          type: string
        marked_for_deletion_at:
          type: string
        marked_for_deletion_on:
          type: string
        requirements_enabled:
          type: string
        requirements_access_level:
          type: string
        security_and_compliance_enabled:
          type: string
        compliance_frameworks:
          type: string
        issues_template:
          type: string
        merge_requests_template:
          type: string
        ci_restrict_pipeline_cancellation_role:
          type: string
        merge_pipelines_enabled:
          type: string
        merge_trains_enabled:
          type: string
        merge_trains_skip_train_allowed:
          type: string
        only_allow_merge_if_all_status_checks_passed:
          type: string
        allow_pipeline_trigger_approve_deployment:
          type: boolean
        prevent_merge_without_jira_issue:
          type: string
      description: API_Entities_Project model
    API_Entities_LicenseBasic:
      type: object
      properties:
        key:
          type: string
          example: gpl-3.0
        name:
          type: string
          example: GNU General Public License v3.0
        nickname:
          type: string
          example: GNU GPLv3
        html_url:
          type: string
          example: http://choosealicense.com/licenses/gpl-3.0
        source_url:
          type: string
    API_Entities_NamespaceBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: project
        path:
          type: string
          example: my_project
        kind:
          type: string
          example: project
        full_path:
          type: string
          example: group/my_project
        parent_id:
          type: integer
          format: int32
          example: 1
        avatar_url:
          type: string
          example: https://example.com/avatar/12345
        web_url:
          type: string
          example: https://example.com/group/my_project
    API_Entities_UserBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: admin
        name:
          type: string
          example: Administrator
        state:
          type: string
          example: active
        locked:
          type: boolean
        avatar_url:
          type: string
          example: https://gravatar.com/avatar/1
        avatar_path:
          type: string
          example: /user/avatar/28/The-Big-Lebowski-400-400.png
        custom_attributes:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_CustomAttribute'
        web_url:
          type: string
          example: https://gitlab.example.com/root
      description: API_Entities_UserBasic model
    API_Entities_ContainerExpirationPolicy:
      type: object
      properties:
        cadence:
          type: string
        enabled:
          type: string
        keep_n:
          type: string
        older_than:
          type: string
        name_regex:
          type: string
        name_regex_keep:
          type: string
        next_run_at:
          type: string
    API_Entities_BasicProjectDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: desc
        name:
          type: string
          example: project1
        name_with_namespace:
          type: string
          example: John Doe / project1
        path:
          type: string
          example: project1
        path_with_namespace:
          type: string
          example: namespace1/project1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        default_branch:
          type: string
          example: main
        tag_list:
          type: array
          items:
            type: string
            example: tag
        topics:
          type: array
          items:
            type: string
            example: topic
        ssh_url_to_repo:
          type: string
          example: git@gitlab.example.com:gitlab/gitlab.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab.git
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab
        readme_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab/blob/master/README.md
        forks_count:
          type: integer
          format: int32
          example: 1
        license_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE
        license:
          $ref: '#/components/schemas/API_Entities_LicenseBasic'
        avatar_url:
          type: string
          example: http://example.com/uploads/project/avatar/3/uploads/avatar.png
        star_count:
          type: integer
          format: int32
          example: 1
        last_activity_at:
          type: string
          format: date-time
          example: "2013-09-30T13:46:02Z"
        namespace:
          $ref: '#/components/schemas/API_Entities_NamespaceBasic'
        custom_attributes:
          $ref: '#/components/schemas/API_Entities_CustomAttribute'
        repository_storage:
          type: string
          example: default
      description: API_Entities_BasicProjectDetails model
    API_Entities_ProjectStatistics:
      type: object
      properties:
        commit_count:
          type: string
        storage_size:
          type: string
        repository_size:
          type: string
        wiki_size:
          type: string
        lfs_objects_size:
          type: string
        job_artifacts_size:
          type: string
        pipeline_artifacts_size:
          type: string
        packages_size:
          type: string
        snippets_size:
          type: string
        uploads_size:
          type: string
        container_registry_size:
          type: string
    postApiV4GroupsIdTransfer:
      type: object
      properties:
        group_id:
          type: integer
          description: The ID of the target group to which the group needs to be transferred to.If not provided, the source group will be promoted to a root group.
          format: int32
      description: Transfer a group to a new parent group or promote a subgroup to a root group
    postApiV4GroupsIdShare:
      required:
        - group_access
        - group_id
      type: object
      properties:
        group_id:
          type: integer
          description: The ID of the group to share
          format: int32
        group_access:
          type: integer
          description: The group access level
          format: int32
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
        expires_at:
          type: string
          description: Share expiration date
          format: date
      description: Share a group with a group
    API_Entities_UserPublic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: admin
        name:
          type: string
          example: Administrator
        state:
          type: string
          example: active
        locked:
          type: boolean
        avatar_url:
          type: string
          example: https://gravatar.com/avatar/1
        avatar_path:
          type: string
          example: /user/avatar/28/The-Big-Lebowski-400-400.png
        custom_attributes:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_CustomAttribute'
        web_url:
          type: string
          example: https://gitlab.example.com/root
        created_at:
          type: string
        bio:
          type: string
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        discord:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        pronouns:
          type: string
        bot:
          type: string
        work_information:
          type: string
        followers:
          type: string
        following:
          type: string
        is_followed:
          type: string
        local_time:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        confirmed_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        last_activity_on:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        email:
          type: string
          example: john@example.com
        theme_id:
          type: integer
          format: int32
          example: 2
        color_scheme_id:
          type: integer
          format: int32
          example: 1
        projects_limit:
          type: integer
          format: int32
          example: 10
        current_sign_in_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        identities:
          $ref: '#/components/schemas/API_Entities_Identity'
        can_create_group:
          type: boolean
          example: true
        can_create_project:
          type: boolean
          example: true
        two_factor_enabled:
          type: boolean
          example: true
        external:
          type: string
        private_profile:
          type: boolean
          example: false
        commit_email:
          type: string
        shared_runners_minutes_limit:
          type: string
        extra_shared_runners_minutes_limit:
          type: string
        scim_identities:
          $ref: '#/components/schemas/API_Entities_ScimIdentity'
      description: API_Entities_UserPublic model
    API_Entities_Identity:
      type: object
      properties:
        provider:
          type: string
        extern_uid:
          type: string
        saml_provider_id:
          type: string
    API_Entities_ScimIdentity:
      type: object
      properties:
        extern_uid:
          type: string
        group_id:
          type: string
        active:
          type: string
    EE_API_Entities_SshCertificate:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 142
        title:
          type: string
          example: new ssh cert
        key:
          type: string
        created_at:
          type: string
          format: date-time
          example: "2022-01-31T15:10:45.08Z"
      description: EE_API_Entities_SshCertificate model
    postApiV4GroupsIdSshCertificates:
      required:
        - key
        - title
      type: object
      properties:
        title:
          type: string
          description: The title of the ssh certificate
        key:
          type: string
          description: The key of the ssh certificate
      description: Create a ssh certificate for a group.
    API_Entities_Ci_Runner:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        description:
          type: string
          example: test-1-20150125
        ip_address:
          type: string
          example: 127.0.0.1
        active:
          type: boolean
          example: true
        paused:
          type: boolean
          example: false
        is_shared:
          type: boolean
          example: true
        runner_type:
          type: string
          example: instance_type
          enum:
            - instance_type
            - group_type
            - project_type
        name:
          type: string
          example: test
        online:
          type: boolean
          example: true
        status:
          type: string
          example: online
      description: API_Entities_Ci_Runner model
    API_Entities_Ci_ResetTokenResult:
      type: object
      properties:
        token:
          type: string
        token_expires_at:
          type: string
      description: API_Entities_Ci_ResetTokenResult model
    API_Entities_DeployToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: MyToken
        username:
          type: string
          example: gitlab+deploy-token-1
        expires_at:
          type: string
          format: date-time
          example: "2020-02-14T00:00:00Z"
        scopes:
          type: array
          example: ""
        revoked:
          type: boolean
        expired:
          type: boolean
      description: API_Entities_DeployToken model
    postApiV4GroupsIdDeployTokens:
      required:
        - name
        - scopes
      type: object
      properties:
        name:
          type: string
          description: New deploy token's name
        scopes:
          type: array
          description: Indicates the deploy token scopes. Must be at least one of `read_repository`, `read_registry`, `write_registry`, `read_package_registry`, or `write_package_registry`
          items:
            type: string
            enum:
              - read_repository
              - read_registry
              - write_registry
              - read_package_registry
              - write_package_registry
        expires_at:
          type: string
          description: Expiration date for the deploy token. Does not expire if no value is provided. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)
          format: date-time
        username:
          type: string
          description: Username for deploy token. Default is `gitlab+deploy-token-{n}`
      description: Create a group deploy token
    API_Entities_DeployTokenWithToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: MyToken
        username:
          type: string
          example: gitlab+deploy-token-1
        expires_at:
          type: string
          format: date-time
          example: "2020-02-14T00:00:00Z"
        scopes:
          type: array
          example: ""
        revoked:
          type: boolean
        expired:
          type: boolean
        token:
          type: string
          example: jMRvtPNxrn3crTAGukpZ
      description: API_Entities_DeployTokenWithToken model
    API_Entities_Cluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
        domain:
          type: string
        enabled:
          type: string
        managed:
          type: string
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        namespace_per_environment:
          type: string
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        platform_kubernetes:
          $ref: '#/components/schemas/API_Entities_Platform_Kubernetes'
        provider_gcp:
          $ref: '#/components/schemas/API_Entities_Provider_Gcp'
        management_project:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
      description: API_Entities_Cluster model
    API_Entities_Platform_Kubernetes:
      type: object
      properties:
        api_url:
          type: string
        namespace:
          type: string
        authorization_type:
          type: string
        ca_cert:
          type: string
    API_Entities_Provider_Gcp:
      type: object
      properties:
        cluster_id:
          type: string
        status_name:
          type: string
        gcp_project_id:
          type: string
        zone:
          type: string
        machine_type:
          type: string
        num_nodes:
          type: string
        endpoint:
          type: string
    API_Entities_ProjectIdentity:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: desc
        name:
          type: string
          example: project1
        name_with_namespace:
          type: string
          example: John Doe / project1
        path:
          type: string
          example: project1
        path_with_namespace:
          type: string
          example: namespace1/project1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
    API_Entities_ClusterGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
        domain:
          type: string
        enabled:
          type: string
        managed:
          type: string
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        namespace_per_environment:
          type: string
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        platform_kubernetes:
          $ref: '#/components/schemas/API_Entities_Platform_Kubernetes'
        provider_gcp:
          $ref: '#/components/schemas/API_Entities_Provider_Gcp'
        management_project:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
        group:
          $ref: '#/components/schemas/API_Entities_BasicGroupDetails'
      description: API_Entities_ClusterGroup model
    API_Entities_BasicGroupDetails:
      type: object
      properties:
        id:
          type: string
        web_url:
          type: string
        name:
          type: string
      description: API_Entities_BasicGroupDetails model
    postApiV4GroupsIdClustersUser:
      required:
        - name
        - platform_kubernetes_attributes
      type: object
      properties:
        name:
          type: string
          description: Cluster name
        enabled:
          type: boolean
          description: Determines if cluster is active or not, defaults to true
          default: true
        environment_scope:
          type: string
          description: The associated environment to the cluster
          default: '*'
        namespace_per_environment:
          type: boolean
          description: Deploy each environment to a separate Kubernetes namespace
          default: true
        domain:
          type: string
          description: Cluster base domain
        management_project_id:
          type: integer
          description: The ID of the management project
          format: int32
        managed:
          type: boolean
          description: Determines if GitLab will manage namespaces and service accounts for this cluster, defaults to true
          default: true
        platform_kubernetes_attributes:
          required:
            - api_url
            - token
          type: object
          properties:
            api_url:
              type: string
              description: URL to access the Kubernetes API
            token:
              type: string
              description: Token to authenticate against Kubernetes
            ca_cert:
              type: string
              description: TLS certificate (needed if API is using a self-signed TLS certificate)
            namespace:
              type: string
              description: Unique namespace related to Group
            authorization_type:
              type: string
              description: Cluster authorization type, defaults to RBAC
              default: rbac
              enum:
                - unknown_authorization
                - rbac
                - abac
          description: Platform Kubernetes data
      description: Add existing cluster to group
    putApiV4GroupsIdClustersClusterId:
      type: object
      properties:
        name:
          type: string
          description: Cluster name
        enabled:
          type: boolean
          description: Determines if cluster is active or not
        domain:
          type: string
          description: Cluster base domain
        environment_scope:
          type: string
          description: The associated environment to the cluster
        namespace_per_environment:
          type: boolean
          description: Deploy each environment to a separate Kubernetes namespace
          default: true
        management_project_id:
          type: integer
          description: The ID of the management project
          format: int32
        managed:
          type: boolean
          description: Determines if GitLab will manage namespaces and service accounts for this cluster
        platform_kubernetes_attributes:
          type: object
          properties:
            api_url:
              type: string
              description: URL to access the Kubernetes API
            token:
              type: string
              description: Token to authenticate against Kubernetes
            ca_cert:
              type: string
              description: TLS certificate (needed if API is using a self-signed TLS certificate)
            namespace:
              type: string
              description: Unique namespace related to Group
          description: Platform Kubernetes data
      description: Edit group cluster
    API_Entities_ContainerRegistry_Repository:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: releases
        path:
          type: string
          example: group/project/releases
        project_id:
          type: integer
          format: int32
          example: 9
        location:
          type: string
          example: gitlab.example.com/group/project/releases
        created_at:
          type: string
          format: date-time
          example: "2019-01-10T13:39:08.229Z"
        cleanup_policy_started_at:
          type: string
          format: date-time
          example: "2020-08-17T03:12:35.489Z"
        tags_count:
          type: integer
          format: int32
          example: 3
        tags:
          $ref: '#/components/schemas/API_Entities_ContainerRegistry_Tag'
        delete_api_path:
          type: string
          example: delete/api/path
        size:
          type: integer
          format: int32
          example: 12345
        status:
          type: string
          example: delete_scheduled
      description: API_Entities_ContainerRegistry_Repository model
    API_Entities_ContainerRegistry_Tag:
      type: object
      properties:
        name:
          type: string
          example: latest
        path:
          type: string
          example: namespace1/project1/test_image_1:latest
        location:
          type: string
          example: registry.dev/namespace1/project1/test_image_1:latest
      description: API_Entities_ContainerRegistry_Tag model
    postApiV4GroupsIdExportRelations:
      type: object
      properties:
        batched:
          type: boolean
          description: Whether to export in batches
      description: Start relations export
    API_Entities_BulkImports_ExportStatus:
      type: object
      properties:
        relation:
          type: string
          example: issues
        status:
          type: string
          example: started
          enum:
            - started
            - finished
            - failed
        error:
          type: string
          example: Error message
        updated_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        batched:
          type: boolean
          example: true
        batches_count:
          type: integer
          format: int32
          example: 2
        total_objects_count:
          type: integer
          format: int32
          example: 100
        batches:
          $ref: '#/components/schemas/API_Entities_BulkImports_ExportBatchStatus'
      description: API_Entities_BulkImports_ExportStatus model
    API_Entities_BulkImports_ExportBatchStatus:
      type: object
      properties:
        status:
          type: string
          example: started
          enum:
            - started
            - finished
            - failed
        batch_number:
          type: integer
          format: int32
          example: 1
        objects_count:
          type: integer
          format: int32
          example: 100
        error:
          type: string
          example: Error message
        updated_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
    API_Entities_Package:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: '@foo/bar'
        conan_package_name:
          type: string
        version:
          type: string
          example: 1.0.3
        package_type:
          type: string
          example: npm
        status:
          type: string
          example: default
        _links:
          type: object
          properties:
            web_path:
              type: string
            delete_api_path:
              type: string
        created_at:
          type: string
          format: date-time
          example: "2022-09-16T12:47:31.949Z"
        last_downloaded_at:
          type: string
          format: date-time
          example: "2022-09-19T11:32:35.169Z"
        project_id:
          type: integer
          format: int32
          example: 2
        project_path:
          type: string
          example: gitlab/foo/bar
        tags:
          type: string
        pipeline:
          $ref: '#/components/schemas/API_Entities_Package_Pipeline'
        pipelines:
          $ref: '#/components/schemas/API_Entities_Package_Pipeline'
        versions:
          $ref: '#/components/schemas/API_Entities_PackageVersion'
      description: API_Entities_Package model
    API_Entities_Package_Pipeline:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        iid:
          type: integer
          format: int32
          example: 2
        project_id:
          type: integer
          format: int32
          example: 3
        sha:
          type: string
          example: 0ec9e58fdfca6cdd6652c083c9edb53abc0bad52
        ref:
          type: string
          example: feature-branch
        status:
          type: string
          example: success
        source:
          type: string
          example: push
        created_at:
          type: string
          format: date-time
          example: "2022-10-21T16:49:48+02:00"
        updated_at:
          type: string
          format: date-time
          example: "2022-10-21T16:49:48+02:00"
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
      description: API_Entities_Package_Pipeline model
    API_Entities_PackageVersion:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        created_at:
          type: string
        tags:
          type: string
        pipeline:
          $ref: '#/components/schemas/API_Entities_Package_Pipeline'
    API_Entities_Ci_Variable:
      type: object
      properties:
        variable_type:
          type: string
          example: env_var
        key:
          type: string
          example: TEST_VARIABLE_1
        value:
          type: string
          example: TEST_1
        hidden:
          type: boolean
        protected:
          type: boolean
        masked:
          type: boolean
        raw:
          type: boolean
        environment_scope:
          type: string
          example: '*'
        description:
          type: string
          example: This variable is being used for ...
      description: API_Entities_Ci_Variable model
    postApiV4GroupsIdVariables:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: |-
            The ID of a group or URL-encoded path of the group owned by the
                    authenticated user
        value:
          type: string
          description: The value of a variable
        protected:
          type: string
          description: Whether the variable is protected
        masked_and_hidden:
          type: string
          description: Whether the variable is masked and hidden
        masked:
          type: string
          description: Whether the variable is masked
        raw:
          type: string
          description: Whether the variable will be expanded
        variable_type:
          type: string
          description: 'The type of the variable. Default: env_var'
          enum:
            - env_var
            - file
        environment_scope:
          type: string
          description: The environment scope of the variable
        description:
          type: string
          description: The description of the variable
      description: Create a new variable in a group
    putApiV4GroupsIdVariablesKey:
      type: object
      properties:
        value:
          type: string
          description: The value of a variable
        protected:
          type: string
          description: Whether the variable is protected
        masked:
          type: string
          description: Whether the variable is masked
        raw:
          type: string
          description: Whether the variable will be expanded
        variable_type:
          type: string
          description: 'The type of the variable. Default: env_var'
          enum:
            - env_var
            - file
        environment_scope:
          type: string
          description: The environment scope of the variable
        description:
          type: string
          description: The description of the variable
      description: Update an existing variable from a group
    postApiV4GroupsIdInvitations:
      required:
        - access_level
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, developer access level)'
          format: int32
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
            - 5
        email:
          type: array
          description: The email address to invite, or multiple emails separated by comma
          items:
            type: string
        user_id:
          type: array
          description: The user ID of the new member or multiple IDs separated by commas.
          items:
            type: string
        expires_at:
          type: string
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
        invite_source:
          type: string
          description: Source that triggered the member creation process
          default: invitations-api
      description: Invite non-members by email address to a group or project.
    API_Entities_Invitation:
      type: object
      properties:
        access_level:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        invite_email:
          type: string
        invite_token:
          type: string
        user_name:
          type: string
        created_by_name:
          type: string
      description: API_Entities_Invitation model
    putApiV4GroupsIdInvitationsEmail:
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, developer access level)'
          format: int32
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
        expires_at:
          type: string
          description: Date string in ISO 8601 format (`YYYY-MM-DDTHH:MM:SSZ`)
          format: date-time
      description: Updates a group or project invitation.
    API_Entities_Member:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: admin
        name:
          type: string
          example: Administrator
        state:
          type: string
          example: active
        locked:
          type: boolean
        avatar_url:
          type: string
          example: https://gravatar.com/avatar/1
        avatar_path:
          type: string
          example: /user/avatar/28/The-Big-Lebowski-400-400.png
        custom_attributes:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_CustomAttribute'
        web_url:
          type: string
          example: https://gitlab.example.com/root
        access_level:
          type: string
        created_at:
          type: string
        created_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        expires_at:
          type: string
        group_saml_identity:
          $ref: '#/components/schemas/API_Entities_Identity'
        email:
          type: string
        is_using_seat:
          type: string
        override:
          type: string
        membership_state:
          type: string
        member_role:
          $ref: '#/components/schemas/EE_API_Entities_MemberRole'
      description: API_Entities_Member model
    EE_API_Entities_MemberRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        group_id:
          type: integer
          format: int32
          example: 2
        base_access_level:
          type: integer
          format: int32
          example: 40
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
            - 5
        admin_cicd_variables:
          type: boolean
        admin_compliance_framework:
          type: boolean
        admin_group_member:
          type: boolean
        admin_merge_request:
          type: boolean
        admin_push_rules:
          type: boolean
        admin_terraform_state:
          type: boolean
        admin_vulnerability:
          type: boolean
        admin_web_hook:
          type: boolean
        archive_project:
          type: boolean
        manage_deploy_tokens:
          type: boolean
        manage_group_access_tokens:
          type: boolean
        manage_merge_request_settings:
          type: boolean
        manage_project_access_tokens:
          type: boolean
        manage_security_policy_link:
          type: boolean
        read_code:
          type: boolean
        read_dependency:
          type: boolean
        read_vulnerability:
          type: boolean
        remove_group:
          type: boolean
        remove_project:
          type: boolean
    postApiV4GroupsIdMembers:
      required:
        - access_level
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, developer access level)'
          format: int32
        user_id:
          type: integer
          description: The user ID of the new member or multiple IDs separated by commas.
          format: int32
        username:
          type: string
          description: The username of the new member or multiple usernames separated by commas.
        expires_at:
          type: string
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
        invite_source:
          type: string
          description: Source that triggered the member creation process
          default: members-api
      description: Adds a member to a group or project.
    putApiV4GroupsIdMembersUserId:
      required:
        - access_level
      type: object
      properties:
        access_level:
          type: integer
          description: A valid access level
          format: int32
        expires_at:
          type: string
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
        member_role_id:
          type: integer
          description: The ID of the Member Role to be updated
          format: int32
      description: Updates a member of a group or project.
    putApiV4GroupsIdMembersUserIdState:
      required:
        - state
      type: object
      properties:
        state:
          type: string
          description: The new state for the memberships of the user
          enum:
            - awaiting
            - active
      description: Changes the state of the memberships of a user in the group
    EE_API_Entities_BillableMembership:
      type: object
      properties:
        id:
          type: string
        source_id:
          type: string
        source_full_name:
          type: string
        source_members_url:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        access_level:
          type: object
          properties:
            string_value:
              type: string
            integer_value:
              type: string
            custom_role:
              type: string
      description: EE_API_Entities_BillableMembership model
    API_Entities_MergeRequestBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 84
        iid:
          type: integer
          format: int32
          example: 14
        project_id:
          type: integer
          format: int32
          example: 4
        title:
          type: string
          example: Impedit et ut et dolores vero provident ullam est
        description:
          type: string
          example: Repellendus impedit et vel velit dignissimos.
        state:
          type: string
          example: closed
        created_at:
          type: string
          format: date-time
          example: "2022-08-17T12:46:35.053Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-11-14T17:22:01.47Z"
        merged_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        merge_user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        merged_at:
          type: string
        closed_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        closed_at:
          type: string
        title_html:
          type: string
        description_html:
          type: string
        target_branch:
          type: string
        source_branch:
          type: string
        user_notes_count:
          type: string
        upvotes:
          type: string
        downvotes:
          type: string
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        assignees:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        assignee:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        reviewers:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        source_project_id:
          type: string
        target_project_id:
          type: string
        labels:
          type: string
        draft:
          type: string
        imported:
          type: string
        imported_from:
          type: string
          example: bitbucket
        work_in_progress:
          type: string
        milestone:
          $ref: '#/components/schemas/API_Entities_Milestone'
        merge_when_pipeline_succeeds:
          type: string
        merge_status:
          type: string
        detailed_merge_status:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: string
        force_remove_source_branch:
          type: string
        prepared_at:
          type: string
        allow_collaboration:
          type: string
        allow_maintainer_to_push:
          type: string
        reference:
          type: string
        references:
          $ref: '#/components/schemas/API_Entities_IssuableReferences'
        web_url:
          type: string
        time_stats:
          $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        squash:
          type: string
        squash_on_merge:
          type: string
        task_completion_status:
          type: string
        has_conflicts:
          type: string
        blocking_discussions_resolved:
          type: string
        approvals_before_merge:
          type: string
      description: API_Entities_MergeRequestBasic model
    API_Entities_Milestone:
      type: object
      properties:
        id:
          type: string
        iid:
          type: string
        project_id:
          type: string
        group_id:
          type: string
        title:
          type: string
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        due_date:
          type: string
        start_date:
          type: string
        expired:
          type: string
        web_url:
          type: string
    API_Entities_IssuableReferences:
      type: object
      properties:
        short:
          type: string
          example: '&6'
        relative:
          type: string
          example: '&6'
        full:
          type: string
          example: test&6
    API_Entities_IssuableTimeStats:
      type: object
      properties:
        time_estimate:
          type: integer
          format: int32
          example: 12600
        total_time_spent:
          type: integer
          format: int32
          example: 3600
        human_time_estimate:
          type: string
          example: 3h 30m
        human_total_time_spent:
          type: string
          example: 1h
      description: API_Entities_IssuableTimeStats model
    API_Entities_Release:
      type: object
      properties:
        name:
          type: string
          example: Release v1.0
        tag_name:
          type: string
          example: v1.0
        description:
          type: string
          example: Finally released v1.0
        created_at:
          type: string
          format: date-time
          example: "2019-01-03T01:56:19.539Z"
        released_at:
          type: string
          format: date-time
          example: "2019-01-03T01:56:19.539Z"
        upcoming_release:
          type: boolean
        description_html:
          type: string
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        milestones:
          $ref: '#/components/schemas/API_Entities_MilestoneWithStats'
        commit_path:
          type: string
          example: /root/app/commit/588440f66559714280628a4f9799f0c4eb880a4a
        tag_path:
          type: string
          example: /root/app/-/tags/v1.0
        assets:
          type: object
          properties:
            count:
              type: integer
              format: int32
              example: 2
            sources:
              $ref: '#/components/schemas/API_Entities_Releases_Source'
            links:
              $ref: '#/components/schemas/API_Entities_Releases_Link'
        evidences:
          $ref: '#/components/schemas/API_Entities_Releases_Evidence'
        _links:
          type: object
          properties:
            closed_issues_url:
              type: string
            closed_merge_requests_url:
              type: string
            edit_url:
              type: string
            merged_merge_requests_url:
              type: string
            opened_issues_url:
              type: string
            opened_merge_requests_url:
              type: string
            self:
              type: string
      description: API_Entities_Release model
    API_Entities_Commit:
      type: object
      properties:
        id:
          type: string
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        short_id:
          type: string
          example: 2695effb
        created_at:
          type: string
          format: date-time
          example: "2017-07-26T11:08:53+02:00"
        parent_ids:
          type: array
          items:
            type: string
            example: 2a4b78934375d7f53875269ffd4f45fd83a84ebe
        title:
          type: string
          example: Initial commit
        message:
          type: string
          example: Initial commit
        author_name:
          type: string
          example: John Smith
        author_email:
          type: string
          example: john@example.com
        authored_date:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        committer_name:
          type: string
          example: Jack Smith
        committer_email:
          type: string
          example: jack@example.com
        committed_date:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        trailers:
          type: object
          properties: {}
          example: '{ "Merged-By": "Jane Doe janedoe@gitlab.com" }'
        extended_trailers:
          type: object
          properties: {}
          example: '{ "Signed-off-by": ["John Doe <johndoe@gitlab.com>", "Jane Doe <janedoe@gitlab.com>"] }'
        web_url:
          type: string
          example: https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746
      description: API_Entities_Commit model
    API_Entities_MilestoneWithStats:
      type: object
      properties:
        id:
          type: string
        iid:
          type: string
        project_id:
          type: string
        group_id:
          type: string
        title:
          type: string
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        due_date:
          type: string
        start_date:
          type: string
        expired:
          type: string
        web_url:
          type: string
        issue_stats:
          type: object
          properties:
            total:
              type: string
            closed:
              type: string
    API_Entities_Releases_Source:
      type: object
      properties:
        format:
          type: string
          example: zip
        url:
          type: string
          example: https://gitlab.example.com/root/app/-/archive/v1.0/app-v1.0.zip
    API_Entities_Releases_Link:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: app-v1.0.dmg
        url:
          type: string
          example: https://gitlab.example.com/root/app/-/jobs/688/artifacts/raw/bin/app-v1.0.dmg
        direct_asset_url:
          type: string
          example: https://gitlab.example.com/root/app/-/releases/v1.0/downloads/app-v1.0.dmg
        link_type:
          type: string
          example: other
      description: API_Entities_Releases_Link model
    API_Entities_Releases_Evidence:
      type: object
      properties:
        sha:
          type: string
          example: 760d6cdfb0879c3ffedec13af470e0f71cf52c6cde4d
        filepath:
          type: string
          example: https://gitlab.example.com/root/app/-/releases/v1.0/evidence.json
        collected_at:
          type: string
          format: date-time
          example: "2019-01-03T01:56:19.539Z"
    API_Entities_ResourceAccessToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: John Doe
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          example: ""
        user_id:
          type: integer
          format: int32
          example: 3
        last_used_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        access_level:
          type: integer
          format: int32
          example: 40
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
      description: API_Entities_ResourceAccessToken model
    postApiV4GroupsIdAccessTokens:
      required:
        - expires_at
        - name
        - scopes
      type: object
      properties:
        name:
          type: string
          description: Resource access token name
          example: test
        scopes:
          type: array
          description: The permissions of the token
          example:
            - api
            - read_repository
          items:
            type: string
            enum:
              - api
              - read_api
              - create_runner
              - k8s_proxy
              - read_repository
              - write_repository
              - read_observability
              - write_observability
              - ai_features
        expires_at:
          type: string
          description: The expiration date of the token
          format: date
        access_level:
          type: integer
          description: The access level of the token in the group
          format: int32
          example: 40
          default: 40
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
      description: Create a resource access token
    API_Entities_ResourceAccessTokenWithToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: John Doe
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          example: ""
        user_id:
          type: integer
          format: int32
          example: 3
        last_used_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        access_level:
          type: integer
          format: int32
          example: 40
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
        token:
          type: string
      description: API_Entities_ResourceAccessTokenWithToken model
    postApiV4GroupsIdAccessTokensTokenIdRotate:
      type: object
      properties:
        expires_at:
          type: string
          description: The expiration date of the token
          format: date
          example: "2021-01-31"
      description: Rotate a resource access token
    API_Entities_WikiPageBasic:
      type: object
      properties:
        format:
          type: string
          example: markdown
        slug:
          type: string
          example: deploy
        title:
          type: string
          example: deploy
      description: API_Entities_WikiPageBasic model
    API_Entities_WikiPage:
      type: object
      properties:
        format:
          type: string
          example: markdown
        slug:
          type: string
          example: deploy
        title:
          type: string
          example: deploy
        content:
          type: string
          example: Here is an instruction how to deploy this project.
        encoding:
          type: string
          example: UTF-8
        front_matter:
          type: object
          properties: {}
          example:
            title: deploy
      description: API_Entities_WikiPage model
    postApiV4GroupsIdWikis:
      required:
        - content
        - title
      type: object
      properties:
        title:
          type: string
          description: Title of a wiki page
        front_matter:
          type: object
          properties:
            title:
              type: string
              description: Front matter title of a wiki page
        content:
          type: string
          description: Content of a wiki page
        format:
          type: string
          description: Format of a wiki page. Available formats are markdown, rdoc, asciidoc and org
          default: markdown
          enum:
            - markdown
            - rdoc
            - asciidoc
            - org
      description: Create a wiki page
    putApiV4GroupsIdWikisSlug:
      type: object
      properties:
        title:
          type: string
          description: Title of a wiki page
        front_matter:
          type: object
          properties:
            title:
              type: string
              description: Front matter title of a wiki page
        content:
          type: string
          description: Content of a wiki page
        format:
          type: string
          description: Format of a wiki page. Available formats are markdown, rdoc, asciidoc and org
          default: markdown
          enum:
            - markdown
            - rdoc
            - asciidoc
            - org
      description: Update a wiki page
    postApiV4GroupsIdWikisAttachments:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The attachment file to be uploaded
          format: binary
        branch:
          type: string
          description: The name of the branch
      description: Upload an attachment to the wiki repository
    API_Entities_WikiAttachment:
      type: object
      properties:
        file_name:
          type: string
          example: dk.png
        file_path:
          type: string
          example: uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png
        branch:
          type: string
          example: main
        link:
          type: object
          properties:
            url:
              type: string
              example: uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png
            markdown:
              type: string
              example: '![dk](uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png)'
      description: API_Entities_WikiAttachment model
    EE_API_Entities_AuditEvent:
      type: object
      properties:
        id:
          type: string
        author_id:
          type: string
        entity_id:
          type: string
        entity_type:
          type: string
        details:
          type: string
        created_at:
          type: string
      description: EE_API_Entities_AuditEvent model
    postApiV4GroupsIdDebianDistributions:
      required:
        - codename
      type: object
      properties:
        codename:
          type: string
          description: The Debian Codename
          example: sid
        suite:
          type: string
          description: The Debian Suite
          example: unstable
        origin:
          type: string
          description: The Debian Origin
          example: Grep
        label:
          type: string
          description: The Debian Label
          example: grep.be
        version:
          type: string
          description: The Debian Version
          example: "12"
        description:
          type: string
          description: The Debian Description
          example: My description
        valid_time_duration_seconds:
          type: integer
          description: The duration before the Release file should be considered expired by the client
          format: int32
          example: 604800
        components:
          type: array
          description: The list of Components
          example: main
          items:
            type: string
        architectures:
          type: array
          description: The list of Architectures
          example: amd64
          items:
            type: string
      description: Create a Debian Distribution
    API_Entities_Packages_Debian_Distribution:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        codename:
          type: string
          example: sid
        suite:
          type: string
          example: unstable
        origin:
          type: string
          example: Grep
        label:
          type: string
          example: grep.be
        version:
          type: string
          example: "12"
        description:
          type: string
          example: My description
        valid_time_duration_seconds:
          type: integer
          format: int32
          example: 604800
        components:
          type: array
          items:
            type: string
            example: main
        architectures:
          type: array
          items:
            type: string
            example: amd64
      description: API_Entities_Packages_Debian_Distribution model
    putApiV4GroupsIdDebianDistributionsCodename:
      type: object
      properties:
        suite:
          type: string
          description: The Debian Suite
          example: unstable
        origin:
          type: string
          description: The Debian Origin
          example: Grep
        label:
          type: string
          description: The Debian Label
          example: grep.be
        version:
          type: string
          description: The Debian Version
          example: "12"
        description:
          type: string
          description: The Debian Description
          example: My description
        valid_time_duration_seconds:
          type: integer
          description: The duration before the Release file should be considered expired by the client
          format: int32
          example: 604800
        components:
          type: array
          description: The list of Components
          example: main
          items:
            type: string
        architectures:
          type: array
          description: The list of Architectures
          example: amd64
          items:
            type: string
      description: Update a Debian Distribution
    API_Entities_NpmPackageTag:
      type: object
      properties:
        dist_tags:
          type: object
          properties: {}
          example: '{ "latest":"1.0.1" }'
      description: API_Entities_NpmPackageTag model
    putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag:
      required:
        - package_name
      type: object
      properties:
        package_name:
          type: string
          description: Package name
      description: Create or Update the given tag for the given NPM package and version
    API_Entities_NpmPackage:
      type: object
      properties:
        name:
          type: string
          example: my_package
        versions:
          type: object
          properties: {}
          example: |-
            {
                             "1.0.0": {
                               "name": "my_package",
                               "version": "1.0.0",
                               "dist": { "shasum": "12345", "tarball": "https://..." }
                             }
                           }
        dist-tags:
          type: object
          properties: {}
          example: '{ "latest":"1.0.1" }'
      description: API_Entities_NpmPackage model
    API_Entities_Nuget_ServiceIndex:
      type: object
      properties:
        version:
          type: string
          example: 1.3.0.17
        resources:
          type: array
          items:
            type: object
            properties: {}
            example: '{ "@id": "https://gitlab.com/api/v4/projects/1/packages/nuget/query", "@type": "SearchQueryService", "comment": "Filter and search for packages by keyword."}'
      description: API_Entities_Nuget_ServiceIndex model
    API_Entities_Nuget_PackagesMetadata:
      type: object
      properties:
        count:
          type: integer
          format: int32
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Nuget_PackagesMetadataItem'
      description: API_Entities_Nuget_PackagesMetadata model
    API_Entities_Nuget_PackagesMetadataItem:
      type: object
      properties:
        '@id':
          type: string
          example: https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json
        lower:
          type: string
          example: 1.3.0.17
        upper:
          type: string
          example: 1.3.0.17
        count:
          type: integer
          format: int32
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Nuget_PackageMetadata'
    API_Entities_Nuget_PackageMetadata:
      type: object
      properties:
        '@id':
          type: string
          example: https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json
        packageContent:
          type: string
          example: https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg
        catalogEntry:
          $ref: '#/components/schemas/API_Entities_Nuget_PackageMetadataCatalogEntry'
      description: API_Entities_Nuget_PackageMetadata model
    API_Entities_Nuget_PackageMetadataCatalogEntry:
      type: object
      properties:
        '@id':
          type: string
          example: https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json
        dependencyGroups:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Nuget_DependencyGroup'
        id:
          type: string
          example: MyNuGetPkg
        version:
          type: string
          example: 1.3.0.17
        tags:
          type: string
          example: tag#1 tag#2
        packageContent:
          type: string
          example: https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg
        authors:
          type: string
          example: Authors
        description:
          type: string
          example: Description
        summary:
          type: string
          example: Description
        projectUrl:
          type: string
          example: http://sandbox.com/project
        licenseUrl:
          type: string
          example: http://sandbox.com/license
        iconUrl:
          type: string
          example: http://sandbox.com/icon
        published:
          type: string
          example: "2023-05-08T17:23:25Z"
    API_Entities_Nuget_DependencyGroup:
      type: object
      properties:
        '@id':
          type: string
          example: http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup
        '@type':
          type: string
          example: PackageDependencyGroup
        targetFramework:
          type: string
          example: fwk test
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Nuget_Dependency'
    API_Entities_Nuget_Dependency:
      type: object
      properties:
        '@id':
          type: string
          example: http://gitlab.com/Sandbox.App/1.0.0.json#dependency
        '@type':
          type: string
          example: PackageDependency
        id:
          type: string
          example: Dependency
        range:
          type: string
          example: 2.0.0
    API_Entities_Nuget_SearchResults:
      type: object
      properties:
        totalHits:
          type: integer
          format: int32
          example: 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Nuget_SearchResult'
      description: API_Entities_Nuget_SearchResults model
    API_Entities_Nuget_SearchResult:
      type: object
      properties:
        '@type':
          type: string
          example: Package
        id:
          type: string
          example: MyNuGetPkg
        title:
          type: string
          example: MyNuGetPkg
        totalDownloads:
          type: integer
          format: int32
          example: 1
        verified:
          type: boolean
        version:
          type: string
          example: 1.3.0.17
        versions:
          $ref: '#/components/schemas/API_Entities_Nuget_SearchResultVersion'
        tags:
          type: string
          example: tag#1 tag#2
        authors:
          type: string
          example: Authors
        description:
          type: string
          example: Description
        summary:
          type: string
          example: Description
        projectUrl:
          type: string
          example: http://sandbox.com/project
        licenseUrl:
          type: string
          example: http://sandbox.com/license
        iconUrl:
          type: string
          example: http://sandbox.com/icon
    API_Entities_Nuget_SearchResultVersion:
      type: object
      properties:
        '@id':
          type: string
          example: https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json
        version:
          type: string
          example: 1.3.0.17
        downloads:
          type: integer
          format: int32
          example: 1
    putApiV4ProjectsIdAccessRequestsUserIdApprove:
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, the Developer role)'
          format: int32
          default: 30
      description: Approves an access request for the given user.
    postApiV4ProjectsIdBadges:
      required:
        - image_url
        - link_url
      type: object
      properties:
        link_url:
          type: string
          description: URL of the badge link
        image_url:
          type: string
          description: URL of the badge image
        name:
          type: string
          description: Name for the badge
      description: Adds a badge to a project.
    putApiV4ProjectsIdBadgesBadgeId:
      type: object
      properties:
        link_url:
          type: string
          description: URL of the badge link
        image_url:
          type: string
          description: URL of the badge image
        name:
          type: string
          description: Name for the badge
      description: Updates a badge of a project.
    API_Entities_Branch:
      type: object
      properties:
        name:
          type: string
          example: master
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        merged:
          type: boolean
          example: true
        protected:
          type: boolean
          example: true
        developers_can_push:
          type: boolean
          example: true
        developers_can_merge:
          type: boolean
          example: true
        can_push:
          type: boolean
          example: true
        default:
          type: boolean
          example: true
        web_url:
          type: string
          example: https://gitlab.example.com/Commit921/the-dude/-/tree/master
      description: API_Entities_Branch model
    putApiV4ProjectsIdRepositoryBranchesBranchProtect:
      type: object
      properties:
        developers_can_push:
          type: boolean
          description: Flag if developers can push to that branch
        developers_can_merge:
          type: boolean
          description: Flag if developers can merge to that branch
      description: Protect a single branch
    postApiV4ProjectsIdRepositoryBranches:
      required:
        - branch
        - ref
      type: object
      properties:
        branch:
          type: string
          description: The name of the branch
        ref:
          type: string
          description: Create branch from commit sha or existing branch
      description: Create branch
    API_Entities_Ci_Job:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        status:
          type: string
          example: waiting_for_resource
        stage:
          type: string
          example: deploy
        name:
          type: string
          example: deploy_to_production
        ref:
          type: string
          example: main
        tag:
          type: boolean
        coverage:
          type: number
          format: float
          example: 98.29
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        started_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:30.733Z"
        finished_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        erased_at:
          type: string
          format: date-time
          example: "2015-12-24T18:00:29.728Z"
        duration:
          type: number
          description: Time spent running
          format: float
          example: 0.465
        queued_duration:
          type: number
          description: Time spent enqueued
          format: float
          example: 0.123
        user:
          $ref: '#/components/schemas/API_Entities_User'
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        failure_reason:
          type: string
          example: script_failure
        web_url:
          type: string
          example: https://example.com/foo/bar/-/jobs/1
        project:
          type: object
          properties:
            ci_job_token_scope_enabled:
              type: string
              example: "false"
        artifacts_file:
          $ref: '#/components/schemas/API_Entities_Ci_JobArtifactFile'
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Ci_JobArtifact'
        runner:
          $ref: '#/components/schemas/API_Entities_Ci_Runner'
        runner_manager:
          $ref: '#/components/schemas/API_Entities_Ci_RunnerManager'
        artifacts_expire_at:
          type: string
          format: date-time
          example: "2016-01-19T09:05:50.355Z"
        archived:
          type: boolean
          example: false
        tag_list:
          type: array
          items:
            type: string
            example: ""
      description: API_Entities_Ci_Job model
    API_Entities_User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: admin
        name:
          type: string
          example: Administrator
        state:
          type: string
          example: active
        locked:
          type: boolean
        avatar_url:
          type: string
          example: https://gravatar.com/avatar/1
        avatar_path:
          type: string
          example: /user/avatar/28/The-Big-Lebowski-400-400.png
        custom_attributes:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_CustomAttribute'
        web_url:
          type: string
          example: https://gitlab.example.com/root
        created_at:
          type: string
        bio:
          type: string
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        discord:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        pronouns:
          type: string
        bot:
          type: string
        work_information:
          type: string
        followers:
          type: string
        following:
          type: string
        is_followed:
          type: string
        local_time:
          type: string
      description: API_Entities_User model
    API_Entities_Ci_PipelineBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        iid:
          type: integer
          format: int32
          example: 2
        project_id:
          type: integer
          format: int32
          example: 3
        sha:
          type: string
          example: 0ec9e58fdfca6cdd6652c083c9edb53abc0bad52
        ref:
          type: string
          example: feature-branch
        status:
          type: string
          example: success
        source:
          type: string
          example: push
        created_at:
          type: string
          format: date-time
          example: "2022-10-21T16:49:48+02:00"
        updated_at:
          type: string
          format: date-time
          example: "2022-10-21T16:49:48+02:00"
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61
      description: API_Entities_Ci_PipelineBasic model
    API_Entities_Ci_JobArtifactFile:
      type: object
      properties:
        filename:
          type: string
          example: artifacts.zip
        size:
          type: integer
          format: int32
          example: 1000
    API_Entities_Ci_JobArtifact:
      type: object
      properties:
        file_type:
          type: string
          example: archive
          enum:
            - archive
            - metadata
            - trace
            - junit
            - sast
            - dependency_scanning
            - container_scanning
            - dast
            - codequality
            - license_scanning
            - performance
            - metrics
            - metrics_referee
            - network_referee
            - lsif
            - dotenv
            - cobertura
            - terraform
            - accessibility
            - cluster_applications
            - secret_detection
            - requirements
            - coverage_fuzzing
            - browser_performance
            - load_performance
            - api_fuzzing
            - cluster_image_scanning
            - cyclonedx
            - requirements_v2
            - annotations
            - repository_xray
        size:
          type: integer
          format: int32
          example: 1000
        filename:
          type: string
          example: artifacts.zip
        file_format:
          type: string
          example: zip
          enum:
            - raw
            - zip
            - gzip
    API_Entities_Ci_RunnerManager:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        system_id:
          type: string
          example: runner-1
        version:
          type: string
          example: 16.11.0
        revision:
          type: string
          example: 91a27b2a
        platform:
          type: string
          example: linux
        architecture:
          type: string
          example: amd64
        created_at:
          type: string
          example: "2023-10-24T01:27:06.549Z"
        contacted_at:
          type: string
          example: "2023-10-24T01:27:06.549Z"
        ip_address:
          type: string
          example: 127.0.0.1
        status:
          type: string
          example: online
    postApiV4ProjectsIdJobsJobIdPlay:
      type: object
      properties:
        job_variables_attributes:
          type: array
          description: User defined variables that will be included when running the job
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: The name of the variable
                example: foo
              value:
                type: string
                description: The value of the variable
                example: bar
      description: Trigger an actionable job (manual, delayed, etc)
    API_Entities_Ci_JobBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        status:
          type: string
          example: waiting_for_resource
        stage:
          type: string
          example: deploy
        name:
          type: string
          example: deploy_to_production
        ref:
          type: string
          example: main
        tag:
          type: boolean
        coverage:
          type: number
          format: float
          example: 98.29
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        started_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:30.733Z"
        finished_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        erased_at:
          type: string
          format: date-time
          example: "2015-12-24T18:00:29.728Z"
        duration:
          type: number
          description: Time spent running
          format: float
          example: 0.465
        queued_duration:
          type: number
          description: Time spent enqueued
          format: float
          example: 0.123
        user:
          $ref: '#/components/schemas/API_Entities_User'
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        failure_reason:
          type: string
          example: script_failure
        web_url:
          type: string
          example: https://example.com/foo/bar/-/jobs/1
        project:
          type: object
          properties:
            ci_job_token_scope_enabled:
              type: string
              example: "false"
      description: API_Entities_Ci_JobBasic model
    API_Entities_Ci_ResourceGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        key:
          type: string
          example: production
        process_mode:
          type: string
          example: unordered
        created_at:
          type: string
          format: date-time
          example: "2021-09-01T08:04:59.65Z"
        updated_at:
          type: string
          format: date-time
          example: "2021-09-01T08:04:59.65Z"
      description: API_Entities_Ci_ResourceGroup model
    putApiV4ProjectsIdResourceGroupsKey:
      type: object
      properties:
        process_mode:
          type: string
          description: The process mode of the resource group
          enum:
            - unordered
            - oldest_first
            - newest_first
      description: Edit an existing resource group
    postApiV4ProjectsIdRunners:
      required:
        - runner_id
      type: object
      properties:
        runner_id:
          type: integer
          description: The ID of a runner
          format: int32
      description: Enable a runner in project
    API_Entities_Ci_SecureFile:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 123
        name:
          type: string
          example: upload-keystore.jks
        checksum:
          type: string
          example: 16630b189ab34b2e3504f4758e1054d2e478deda510b2b08cc0ef38d12e80aac
        checksum_algorithm:
          type: string
          example: sha256
        created_at:
          type: string
          format: date-time
          example: "2022-02-22T22:22:22.222Z"
        expires_at:
          type: string
          format: date-time
          example: "2023-09-21T14:55:59Z"
        metadata:
          type: object
          properties: {}
          example:
            id: "75949910542696343243264405377658443914"
        file_extension:
          type: string
          example: jks
      description: API_Entities_Ci_SecureFile model
    postApiV4ProjectsIdSecureFiles:
      required:
        - file
        - name
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the file being uploaded. The filename must be unique within
                        the project
        file:
          type: file
          description: The secure file being uploaded
          format: binary
      description: Create a secure file
    postApiV4ProjectsIdPipeline:
      required:
        - ref
      type: object
      properties:
        ref:
          type: string
          description: Reference
          example: develop
        variables:
          type: array
          description: Array of variables available in the pipeline
          items:
            type: object
            properties:
              key:
                type: string
                description: The key of the variable
                example: UPLOAD_TO_S3
              value:
                type: string
                description: The value of the variable
                example: "true"
              variable_type:
                type: string
                description: The type of variable, must be one of env_var or file. Defaults to env_var
                default: env_var
                enum:
                  - env_var
                  - file
      description: Create a new pipeline
    API_Entities_Ci_Pipeline:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        iid:
          type: integer
          format: int32
          example: 2
        project_id:
          type: integer
          format: int32
          example: 3
        sha:
          type: string
          example: 0ec9e58fdfca6cdd6652c083c9edb53abc0bad52
        ref:
          type: string
          example: feature-branch
        status:
          type: string
          example: success
        source:
          type: string
          example: push
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        updated_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61
        before_sha:
          type: string
          example: a91957a858320c0e17f3a0eca7cfacbff50ea29a
        tag:
          type: boolean
          example: false
        yaml_errors:
          type: string
          example: 'widgets:build: needs ''widgets:test'''
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        started_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:30.733Z"
        finished_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        committed_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        duration:
          type: integer
          description: Time spent running in seconds
          format: int32
          example: 127
        queued_duration:
          type: integer
          description: Time spent enqueued in seconds
          format: int32
          example: 63
        coverage:
          type: number
          format: float
          example: 98.29
        detailed_status:
          $ref: '#/components/schemas/DetailedStatusEntity'
      description: API_Entities_Ci_Pipeline model
    DetailedStatusEntity:
      type: object
      properties:
        icon:
          type: string
          example: status_success
        text:
          type: string
          example: passed
        label:
          type: string
          example: passed
        group:
          type: string
          example: success
        tooltip:
          type: string
          example: passed
        has_details:
          type: boolean
          example: true
        details_path:
          type: string
          example: /test-group/test-project/-/pipelines/287
        illustration:
          type: object
          properties: {}
          example: |
            {
              "image": "illustrations/empty-state/empty-job-not-triggered-md.svg",
              "size": "",
              "title": "This job has not been triggered yet",
              "content": "This job depends on upstream jobs that need to succeed in order for this job to be triggered"
            }
        favicon:
          type: string
          example: /assets/ci_favicons/favicon_status_success.png
        action:
          type: object
          properties:
            icon:
              type: string
              example: cancel
            title:
              type: string
              example: Cancel
            path:
              type: string
              example: /namespace1/project1/-/jobs/2/cancel
            method:
              type: string
              example: post
            button_title:
              type: string
              example: Cancel this job
            confirmation_message:
              type: string
              example: Are you sure?
    API_Entities_Ci_PipelineWithMetadata:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        iid:
          type: integer
          format: int32
          example: 2
        project_id:
          type: integer
          format: int32
          example: 3
        sha:
          type: string
          example: 0ec9e58fdfca6cdd6652c083c9edb53abc0bad52
        ref:
          type: string
          example: feature-branch
        status:
          type: string
          example: success
        source:
          type: string
          example: push
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        updated_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61
        before_sha:
          type: string
          example: a91957a858320c0e17f3a0eca7cfacbff50ea29a
        tag:
          type: boolean
          example: false
        yaml_errors:
          type: string
          example: 'widgets:build: needs ''widgets:test'''
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        started_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:30.733Z"
        finished_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        committed_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        duration:
          type: integer
          description: Time spent running in seconds
          format: int32
          example: 127
        queued_duration:
          type: integer
          description: Time spent enqueued in seconds
          format: int32
          example: 63
        coverage:
          type: number
          format: float
          example: 98.29
        detailed_status:
          $ref: '#/components/schemas/DetailedStatusEntity'
        name:
          type: string
          example: Build pipeline
      description: API_Entities_Ci_PipelineWithMetadata model
    API_Entities_Ci_Bridge:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        status:
          type: string
          example: waiting_for_resource
        stage:
          type: string
          example: deploy
        name:
          type: string
          example: deploy_to_production
        ref:
          type: string
          example: main
        tag:
          type: boolean
        coverage:
          type: number
          format: float
          example: 98.29
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        started_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:30.733Z"
        finished_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        erased_at:
          type: string
          format: date-time
          example: "2015-12-24T18:00:29.728Z"
        duration:
          type: number
          description: Time spent running
          format: float
          example: 0.465
        queued_duration:
          type: number
          description: Time spent enqueued
          format: float
          example: 0.123
        user:
          $ref: '#/components/schemas/API_Entities_User'
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        failure_reason:
          type: string
          example: script_failure
        web_url:
          type: string
          example: https://example.com/foo/bar/-/jobs/1
        project:
          type: object
          properties:
            ci_job_token_scope_enabled:
              type: string
              example: "false"
        downstream_pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
      description: API_Entities_Ci_Bridge model
    TestReportEntity:
      type: object
      properties:
        total_time:
          type: integer
          format: int32
          example: 180
        total_count:
          type: integer
          format: int32
          example: 1
        success_count:
          type: integer
          format: int32
          example: 1
        failed_count:
          type: integer
          format: int32
          example: 0
        skipped_count:
          type: integer
          format: int32
          example: 0
        error_count:
          type: integer
          format: int32
          example: 0
        test_suites:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteEntity'
      description: TestReportEntity model
    TestSuiteEntity:
      type: object
      properties:
        name:
          type: string
          example: test
        total_time:
          type: integer
          format: int32
          example: 1904
        total_count:
          type: integer
          format: int32
          example: 3363
        success_count:
          type: integer
          format: int32
          example: 3351
        failed_count:
          type: integer
          format: int32
          example: 0
        skipped_count:
          type: integer
          format: int32
          example: 12
        error_count:
          type: integer
          format: int32
          example: 0
        suite_error:
          type: string
          example: 'JUnit XML parsing failed: 1:1: FATAL: Document is empty'
        test_cases:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseEntity'
    TestCaseEntity:
      type: object
      properties:
        status:
          type: string
          example: success
        name:
          type: string
          example: Security Reports can create an auto-remediation MR
        classname:
          type: string
          example: vulnerability_management_spec
        file:
          type: string
          example: ./spec/test_spec.rb
        execution_time:
          type: integer
          format: int32
          example: 180
        system_output:
          type: string
          example: 'Failure/Error: is_expected.to eq(3)'
        stack_trace:
          type: string
          example: 'Failure/Error: is_expected.to eq(3)'
        recent_failures:
          type: string
          example: ""
        attachment_url:
          type: string
          example: http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png
    TestReportSummaryEntity:
      type: object
      properties:
        total:
          type: integer
          format: int32
          example: 3363
        test_suites:
          $ref: '#/components/schemas/TestSuiteSummaryEntity'
      description: TestReportSummaryEntity model
    TestSuiteSummaryEntity:
      type: object
      properties:
        name:
          type: string
          example: test
        total_time:
          type: integer
          format: int32
          example: 1904
        total_count:
          type: integer
          format: int32
          example: 3363
        success_count:
          type: integer
          format: int32
          example: 3351
        failed_count:
          type: integer
          format: int32
          example: 0
        skipped_count:
          type: integer
          format: int32
          example: 12
        error_count:
          type: integer
          format: int32
          example: 0
        suite_error:
          type: string
          example: 'JUnit XML parsing failed: 1:1: FATAL: Document is empty'
        test_cases:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseEntity'
        build_ids:
          type: array
          items:
            type: integer
            format: int32
    putApiV4ProjectsIdPipelinesPipelineIdMetadata:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the pipeline
          example: Deployment to production
      description: Updates pipeline metadata
    API_Entities_Ci_PipelineSchedule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        description:
          type: string
          example: Test schedule pipeline
        ref:
          type: string
          example: develop
        cron:
          type: string
          example: '* * * * *'
        cron_timezone:
          type: string
          example: Asia/Tokyo
        next_run_at:
          type: string
          format: date-time
          example: "2017-05-19T13:41:00Z"
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2017-05-19T13:31:08.849Z"
        updated_at:
          type: string
          format: date-time
          example: "2017-05-19T13:40:17.727Z"
        owner:
          $ref: '#/components/schemas/API_Entities_UserBasic'
      description: API_Entities_Ci_PipelineSchedule model
    API_Entities_Ci_PipelineScheduleDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 13
        description:
          type: string
          example: Test schedule pipeline
        ref:
          type: string
          example: develop
        cron:
          type: string
          example: '* * * * *'
        cron_timezone:
          type: string
          example: Asia/Tokyo
        next_run_at:
          type: string
          format: date-time
          example: "2017-05-19T13:41:00Z"
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2017-05-19T13:31:08.849Z"
        updated_at:
          type: string
          format: date-time
          example: "2017-05-19T13:40:17.727Z"
        owner:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        last_pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        variables:
          $ref: '#/components/schemas/API_Entities_Ci_Variable'
      description: API_Entities_Ci_PipelineScheduleDetails model
    postApiV4ProjectsIdPipelineSchedules:
      required:
        - cron
        - description
        - ref
      type: object
      properties:
        description:
          type: string
          description: The description of pipeline schedule
          example: Test schedule pipeline
        ref:
          type: string
          description: The branch/tag name will be triggered
          example: develop
        cron:
          type: string
          description: The cron
          example: '* * * * *'
        cron_timezone:
          type: string
          description: The timezone
          example: Asia/Tokyo
          default: UTC
        active:
          type: boolean
          description: The activation of pipeline schedule
          example: true
          default: true
      description: Create a new pipeline schedule
    putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId:
      type: object
      properties:
        description:
          type: string
          description: The description of pipeline schedule
          example: Test schedule pipeline
        ref:
          type: string
          description: The branch/tag name will be triggered
          example: develop
        cron:
          type: string
          description: The cron
          example: '* * * * *'
        cron_timezone:
          type: string
          description: The timezone
          example: Asia/Tokyo
        active:
          type: boolean
          description: The activation of pipeline schedule
          example: true
      description: Edit a pipeline schedule
    postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: The key of the variable
          example: NEW_VARIABLE
        value:
          type: string
          description: The value of the variable
          example: new value
        variable_type:
          type: string
          description: The type of variable, must be one of env_var or file. Defaults to env_var
          default: env_var
          enum:
            - env_var
            - file
      description: Create a new pipeline schedule variable
    putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey:
      type: object
      properties:
        value:
          type: string
          description: The value of the variable
          example: new value
        variable_type:
          type: string
          description: The type of variable, must be one of env_var or file
          default: env_var
          enum:
            - env_var
            - file
      description: Edit a pipeline schedule variable
    postApiV4ProjectsId(refRef)triggerPipeline:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The unique token of trigger or job token
          example: 6d056f63e50fe6f8c5f8f4aa10edb7
        variables:
          type: object
          properties: {}
          description: The list of variables to be injected into build
          example:
            VAR1: value1
            VAR2: value2
      description: Trigger a GitLab project pipeline
    API_Entities_Trigger:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        token:
          type: string
          example: 6d056f63e50fe6f8c5f8f4aa10edb7
        description:
          type: string
          example: test
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        updated_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        last_used:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        owner:
          $ref: '#/components/schemas/API_Entities_UserBasic'
      description: API_Entities_Trigger model
    postApiV4ProjectsIdTriggers:
      required:
        - description
      type: object
      properties:
        description:
          type: string
          description: The trigger token description
          example: my trigger token description
      description: Create a trigger token
    putApiV4ProjectsIdTriggersTriggerId:
      type: object
      properties:
        description:
          type: string
          description: The trigger token description
      description: Update a trigger token
    postApiV4ProjectsIdVariables:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: The key of a variable
        value:
          type: string
          description: The value of a variable
        protected:
          type: boolean
          description: Whether the variable is protected
        masked:
          type: boolean
          description: Whether the variable is masked
        masked_and_hidden:
          type: boolean
          description: Whether the variable is masked and hidden
        raw:
          type: boolean
          description: Whether the variable will be expanded
        variable_type:
          type: string
          description: 'The type of the variable. Default: env_var'
          enum:
            - env_var
            - file
        environment_scope:
          type: string
          description: The environment_scope of the variable
        description:
          type: string
          description: The description of the variable
      description: Create a new variable in a project
    putApiV4ProjectsIdVariablesKey:
      type: object
      properties:
        value:
          type: string
          description: The value of a variable
        protected:
          type: boolean
          description: Whether the variable is protected
        masked:
          type: boolean
          description: Whether the variable is masked
        environment_scope:
          type: string
          description: The environment_scope of a variable
        raw:
          type: boolean
          description: Whether the variable will be expanded
        variable_type:
          type: string
          description: 'The type of the variable. Default: env_var'
          enum:
            - env_var
            - file
        filter:
          type: object
          properties:
            environment_scope:
              type: string
              description: The environment scope of a variable
          description: 'Available filters: [environment_scope]. Example: filter[environment_scope]=production'
        description:
          type: string
          description: The description of the variable
      description: Update an existing variable from a project
    API_Entities_Clusters_Agent:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        config_project:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
        created_at:
          type: string
        created_by_user_id:
          type: string
      description: API_Entities_Clusters_Agent model
    postApiV4ProjectsIdClusterAgents:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the agent
      description: Register an agent with a project
    postApiV4ProjectsIdRepositoryCommits:
      required:
        - actions
        - branch
        - commit_message
      type: object
      properties:
        branch:
          type: string
          description: Name of the branch to commit into. To create a new branch, also provide either `start_branch` or `start_sha`, and optionally `start_project`.
          example: master
        commit_message:
          type: string
          description: Commit message
          example: initial commit
        actions:
          type: array
          description: Actions to perform in commit
          items:
            required:
              - action
              - content
              - execute_filemode
              - file_path
              - previous_path
            type: object
            properties:
              action:
                type: string
                description: The action to perform, `create`, `delete`, `move`, `update`, `chmod`
                enum:
                  - create
                  - update
                  - move
                  - delete
                  - chmod
              file_path:
                type: string
                description: Full path to the file.
                example: lib/class.rb
              previous_path:
                type: string
                description: Original full path to the file being moved.
                example: lib/class.rb
              content:
                type: string
                description: File content
                example: Some file content
              encoding:
                type: string
                description: '`text` or `base64`'
                default: text
                enum:
                  - text
                  - base64
              last_commit_id:
                type: string
                description: Last known file commit id
                example: 2695effb5807a22ff3d138d593fd856244e155e7
              execute_filemode:
                type: boolean
                description: When `true/false` enables/disables the execute flag on the file.
        start_branch:
          type: string
          description: Name of the branch to start the new branch from
          example: staging
        start_sha:
          type: string
          description: SHA of the commit to start the new branch from
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        start_project:
          type: integer
          description: The ID or path of the project to start the new branch from
          format: int32
          example: 1
        author_email:
          type: string
          description: Author email for commit
          example: janedoe@example.com
        author_name:
          type: string
          description: Author name for commit
          example: Jane Doe
        stats:
          type: boolean
          description: Include commit stats
          default: true
        force:
          type: boolean
          description: When `true` overwrites the target branch with a new commit based on the `start_branch` or `start_sha`
          default: false
      description: Commit multiple file changes as one commit
    API_Entities_CommitDetail:
      type: object
      properties:
        id:
          type: string
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        short_id:
          type: string
          example: 2695effb
        created_at:
          type: string
          format: date-time
          example: "2017-07-26T11:08:53+02:00"
        parent_ids:
          type: array
          items:
            type: string
            example: 2a4b78934375d7f53875269ffd4f45fd83a84ebe
        title:
          type: string
          example: Initial commit
        message:
          type: string
          example: Initial commit
        author_name:
          type: string
          example: John Smith
        author_email:
          type: string
          example: john@example.com
        authored_date:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        committer_name:
          type: string
          example: Jack Smith
        committer_email:
          type: string
          example: jack@example.com
        committed_date:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        trailers:
          type: object
          properties: {}
          example: '{ "Merged-By": "Jane Doe janedoe@gitlab.com" }'
        extended_trailers:
          type: object
          properties: {}
          example: '{ "Signed-off-by": ["John Doe <johndoe@gitlab.com>", "Jane Doe <janedoe@gitlab.com>"] }'
        web_url:
          type: string
          example: https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746
        stats:
          $ref: '#/components/schemas/API_Entities_CommitStats'
        status:
          type: string
          example: success
        project_id:
          type: integer
          format: int32
          example: 1
        last_pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
      description: API_Entities_CommitDetail model
    API_Entities_CommitStats:
      type: object
      properties:
        additions:
          type: integer
          format: int32
          example: 1
        deletions:
          type: integer
          format: int32
          example: 0
        total:
          type: integer
          format: int32
          example: 1
    API_Entities_Diff:
      type: object
      properties:
        diff:
          type: string
          example: '@@ -71,6 +71,8 @@\n...'
        new_path:
          type: string
          example: doc/update/5.4-to-6.0.md
        old_path:
          type: string
          example: doc/update/5.4-to-6.0.md
        a_mode:
          type: string
          example: "100755"
        b_mode:
          type: string
          example: "100644"
        new_file:
          type: boolean
        renamed_file:
          type: boolean
        deleted_file:
          type: boolean
        generated_file:
          type: boolean
      description: API_Entities_Diff model
    API_Entities_CommitNote:
      type: object
      properties:
        note:
          type: string
          example: this doc is really nice
        path:
          type: string
          example: README.md
        line:
          type: integer
          format: int32
          example: 11
        line_type:
          type: string
          example: new
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
          format: date-time
          example: "2016-01-19T09:44:55.6Z"
      description: API_Entities_CommitNote model
    API_Entities_CommitSequence:
      type: object
      properties:
        count:
          type: integer
          format: int32
          example: 1
      description: API_Entities_CommitSequence model
    postApiV4ProjectsIdRepositoryCommitsShaCherryPick:
      required:
        - branch
      type: object
      properties:
        branch:
          type: string
          description: The name of the branch
          example: master
        dry_run:
          type: boolean
          description: Does not commit any changes
          default: false
        message:
          type: string
          description: A custom commit message to use for the picked commit
          example: Initial commit
      description: Cherry pick commit into a branch
    postApiV4ProjectsIdRepositoryCommitsShaRevert:
      required:
        - branch
      type: object
      properties:
        branch:
          type: string
          description: Target branch name
          example: master
        dry_run:
          type: boolean
          description: Does not commit any changes
          default: false
      description: Revert a commit in a branch
    API_Entities_BasicRef:
      type: object
      properties:
        type:
          type: string
          example: tag
        name:
          type: string
          example: v1.1.0
      description: API_Entities_BasicRef model
    postApiV4ProjectsIdRepositoryCommitsShaComments:
      required:
        - line
        - line_type
        - note
      type: object
      properties:
        note:
          type: string
          description: The text of the comment
          example: Nice code!
        path:
          type: string
          description: The file path
          example: doc/update/5.4-to-6.0.md
        line:
          type: integer
          description: The line number
          format: int32
          example: 11
        line_type:
          type: string
          description: The type of the line
          default: new
          enum:
            - new
            - old
      description: Post comment to commit
    API_Entities_CommitSignature:
      type: object
      properties:
        signature_type:
          type: string
          example: PGP
        signature:
          type: string
        commit_source:
          type: string
          example: gitaly
      description: API_Entities_CommitSignature model
    API_Entities_CommitStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 93
        sha:
          type: string
          example: 18f3e63d05582537db6d183d9d557be09e1f90c8
        ref:
          type: string
          example: develop
        status:
          type: string
          example: success
        name:
          type: string
          example: default
        target_url:
          type: string
          example: https://gitlab.example.com/janedoe/gitlab-foss/builds/91
        description:
          type: string
        created_at:
          type: string
          format: date-time
          example: "2016-01-19T09:05:50.355Z"
        started_at:
          type: string
          format: date-time
          example: "2016-01-20T08:40:25.832Z"
        finished_at:
          type: string
          format: date-time
          example: "2016-01-21T08:40:25.832Z"
        allow_failure:
          type: boolean
          example: false
        coverage:
          type: number
          format: float
          example: 98.29
        pipeline_id:
          type: integer
          format: int32
          example: 101
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
      description: API_Entities_CommitStatus model
    postApiV4ProjectsIdStatusesSha:
      required:
        - state
      type: object
      properties:
        state:
          type: string
          description: The state of the status
          example: pending
          enum:
            - pending
            - running
            - success
            - failed
            - canceled
        ref:
          type: string
          description: The ref
          example: develop
        target_url:
          type: string
          description: The target URL to associate with this status
          example: https://gitlab.example.com/janedoe/gitlab-foss/builds/91
        description:
          type: string
          description: A short description of the status
        name:
          type: string
          description: A string label to differentiate this status from the status of other systems
          example: coverage
          default: default
        context:
          type: string
          description: A string label to differentiate this status from the status of other systems
          example: coverage
          default: default
        coverage:
          type: number
          description: The total code coverage
          format: float
          example: 100
        pipeline_id:
          type: integer
          description: An existing pipeline ID, when multiple pipelines on the same commit SHA have been triggered
          format: int32
      description: Post status to a commit
    API_Entities_DeployKeysProject:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: Sample key 25
        created_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:44.627Z"
        expires_at:
          type: string
          format: date-time
          example: "2020-09-03T07:24:44.627Z"
        key:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDNJAkI3Wdf0r13c8a5pEExB2YowPWCSVzfZV22pNBc1CuEbyYLHpUyaD0GwpGvFdx2aP7lMEk35k6Rz3ccBF6jRaVJyhsn5VNnW92PMpBJ/P1UebhXwsFHdQf5rTt082cSxWuk61kGWRQtk4ozt/J2DF/dIUVaLvc+z4HomT41fQ==
        usage_type:
          type: string
          example: auth
        fingerprint:
          type: string
          example: 4a:9d:64:15:ed:3a:e6:07:6e:89:36:b3:3b:03:05:d9
        fingerprint_sha256:
          type: string
          example: SHA256:Jrs3LD1Ji30xNLtTVf9NDCj7kkBgPBb2pjvTZ3HfIgU
        projects_with_write_access:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
        projects_with_readonly_access:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
        can_push:
          type: boolean
      description: API_Entities_DeployKeysProject model
    postApiV4ProjectsIdDeployKeys:
      required:
        - key
        - title
      type: object
      properties:
        key:
          type: string
          description: New deploy key
        title:
          type: string
          description: New deploy key's title
        can_push:
          type: boolean
          description: Can deploy key push to the project's repository
        expires_at:
          type: string
          description: The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)
          format: date-time
      description: Add deploy key
    putApiV4ProjectsIdDeployKeysKeyId:
      type: object
      properties:
        title:
          type: string
          description: New deploy key's title
        can_push:
          type: boolean
          description: Can deploy key push to the project's repository
      description: Update deploy key
    API_Entities_DeployKey:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: Sample key 25
        created_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:44.627Z"
        expires_at:
          type: string
          format: date-time
          example: "2020-09-03T07:24:44.627Z"
        key:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDNJAkI3Wdf0r13c8a5pEExB2YowPWCSVzfZV22pNBc1CuEbyYLHpUyaD0GwpGvFdx2aP7lMEk35k6Rz3ccBF6jRaVJyhsn5VNnW92PMpBJ/P1UebhXwsFHdQf5rTt082cSxWuk61kGWRQtk4ozt/J2DF/dIUVaLvc+z4HomT41fQ==
        usage_type:
          type: string
          example: auth
        fingerprint:
          type: string
          example: 4a:9d:64:15:ed:3a:e6:07:6e:89:36:b3:3b:03:05:d9
        fingerprint_sha256:
          type: string
          example: SHA256:Jrs3LD1Ji30xNLtTVf9NDCj7kkBgPBb2pjvTZ3HfIgU
        projects_with_write_access:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
        projects_with_readonly_access:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
      description: API_Entities_DeployKey model
    postApiV4ProjectsIdDeployTokens:
      required:
        - name
        - scopes
      type: object
      properties:
        name:
          type: string
          description: New deploy token's name
        scopes:
          type: array
          description: Indicates the deploy token scopes. Must be at least one of `read_repository`, `read_registry`, `write_registry`, `read_package_registry`, or `write_package_registry`.
          items:
            type: string
            enum:
              - read_repository
              - read_registry
              - write_registry
              - read_package_registry
              - write_package_registry
        expires_at:
          type: string
          description: Expiration date for the deploy token. Does not expire if no value is provided. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`).
          format: date-time
        username:
          type: string
          description: Username for deploy token. Default is `gitlab+deploy-token-{n}`
      description: Create a project deploy token
    API_Entities_Deployment:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 41
        iid:
          type: integer
          format: int32
          example: 1
        ref:
          type: string
          example: main
        sha:
          type: string
          example: 99d03678b90d914dbb1b109132516d71a4a03ea8
        created_at:
          type: string
          format: date-time
          example: "2016-08-11T11:32:35.444Z"
        updated_at:
          type: string
          format: date-time
          example: "2016-08-11T11:32:35.444Z"
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        environment:
          $ref: '#/components/schemas/API_Entities_EnvironmentBasic'
        deployable:
          $ref: '#/components/schemas/API_Entities_Ci_Job'
        status:
          type: string
          example: created
      description: API_Entities_Deployment model
    API_Entities_EnvironmentBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: deploy
        slug:
          type: string
          example: deploy
        external_url:
          type: string
          example: https://deploy.gitlab.example.com
        created_at:
          type: string
          format: date-time
          example: "2019-05-25T18:55:13.252Z"
        updated_at:
          type: string
          format: date-time
          example: "2019-05-25T18:55:13.252Z"
      description: API_Entities_EnvironmentBasic model
    API_Entities_DeploymentExtended:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 41
        iid:
          type: integer
          format: int32
          example: 1
        ref:
          type: string
          example: main
        sha:
          type: string
          example: 99d03678b90d914dbb1b109132516d71a4a03ea8
        created_at:
          type: string
          format: date-time
          example: "2016-08-11T11:32:35.444Z"
        updated_at:
          type: string
          format: date-time
          example: "2016-08-11T11:32:35.444Z"
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        environment:
          $ref: '#/components/schemas/API_Entities_EnvironmentBasic'
        deployable:
          $ref: '#/components/schemas/API_Entities_Ci_Job'
        status:
          type: string
          example: created
        pending_approval_count:
          type: integer
          format: int32
          example: 0
        approvals:
          $ref: '#/components/schemas/API_Entities_Deployments_Approval'
        approval_summary:
          $ref: '#/components/schemas/API_Entities_Deployments_ApprovalSummary'
      description: API_Entities_DeploymentExtended model
    API_Entities_Deployments_Approval:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        status:
          type: string
          example: approved
        created_at:
          type: string
          format: date-time
          example: "2022-02-24T20:22:30.097Z"
        comment:
          type: string
          example: LGTM
      description: API_Entities_Deployments_Approval model
    API_Entities_Deployments_ApprovalSummary:
      type: object
      properties:
        rules:
          $ref: '#/components/schemas/API_Entities_ProtectedEnvironments_ApprovalRuleForSummary'
    API_Entities_ProtectedEnvironments_ApprovalRuleForSummary:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        group_id:
          type: string
        access_level:
          type: string
        access_level_description:
          type: string
        required_approvals:
          type: string
        group_inheritance_type:
          type: string
        deployment_approvals:
          $ref: '#/components/schemas/API_Entities_Deployments_Approval'
    postApiV4ProjectsIdDeployments:
      required:
        - environment
        - ref
        - sha
        - status
        - tag
      type: object
      properties:
        environment:
          type: string
          description: The name of the environment to create the deployment for
        sha:
          type: string
          description: The SHA of the commit that is deployed
        ref:
          type: string
          description: The name of the branch or tag that is deployed
        tag:
          type: boolean
          description: A boolean that indicates if the deployed ref is a tag (`true`) or not (`false`)
        status:
          type: string
          description: The status of the deployment that is created. One of `running`, `success`, `failed`, or `canceled`
          enum:
            - running
            - success
            - failed
            - canceled
      description: Create a deployment
    putApiV4ProjectsIdDeploymentsDeploymentId:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: The new status of the deployment. One of `running`, `success`, `failed`, or `canceled`
          enum:
            - running
            - success
            - failed
            - canceled
      description: Update a deployment
    postApiV4ProjectsIdDeploymentsDeploymentIdApproval:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: The status of the approval (either `approved` or `rejected`)
          enum:
            - approved
            - rejected
        comment:
          type: string
          description: A comment to go with the approval
        represented_as:
          type: string
          description: The name of the User/Group/Role to use for the approval, when the user belongs to multiple approval rules
      description: Approve or reject a blocked deployment
    API_Entities_DraftNote:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        author_id:
          type: integer
          format: int32
          example: 4
        merge_request_id:
          type: integer
          format: int32
          example: 52
        resolve_discussion:
          type: boolean
          example: true
        discussion_id:
          type: integer
          format: int32
          example: 613
        note:
          type: string
          example: This is a note
        commit_id:
          type: integer
          format: int32
          example: 4
        line_code:
          type: string
          example: 1c497fbb3a46b78edf0_2_4
        position:
          type: object
          properties: {}
          example:
            base_sha: aa149113
            start_sha: b3a0a8c4
            head_sha: be3020c7
            old_path: example.md
            new_path: example.md
            position_type: text
            old_line: 2
            new_line: 4
            line_range:
              start:
                line_code: 1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a_2_4
                type: null
                old_line: 2
                new_line: 4
              end:
                line_code: 1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a_2_4
                type: null
                old_line: 2
                new_line: 4
      description: API_Entities_DraftNote model
    postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes:
      required:
        - note
      type: object
      properties:
        note:
          type: string
          description: The content of a note.
        in_reply_to_discussion_id:
          type: string
          description: The ID of a discussion the draft note replies to.
        commit_id:
          type: string
          description: The sha of a commit to associate the draft note to.
        resolve_discussion:
          type: boolean
          description: The associated discussion should be resolved.
        position:
          required:
            - base_sha
            - head_sha
            - position_type
            - start_sha
          type: object
          properties:
            base_sha:
              type: string
              description: Base commit SHA in the source branch
            start_sha:
              type: string
              description: SHA referencing commit in target branch
            head_sha:
              type: string
              description: SHA referencing HEAD of this merge request
            position_type:
              type: string
              description: Type of the position reference
              enum:
                - text
                - image
            new_path:
              type: string
              description: File path after change
            new_line:
              type: integer
              description: Line number after change
              format: int32
            old_path:
              type: string
              description: File path before change
            old_line:
              type: integer
              description: Line number before change
              format: int32
            width:
              type: integer
              description: Width of the image
              format: int32
            height:
              type: integer
              description: Height of the image
              format: int32
            x:
              type: integer
              description: X coordinate in the image
              format: int32
            y:
              type: integer
              description: Y coordinate in the image
              format: int32
            line_range:
              type: object
              properties:
                start:
                  type: object
                  properties:
                    line_code:
                      type: string
                      description: Start line code for multi-line note
                    type:
                      type: string
                      description: Start line type for multi-line note
                    old_line:
                      type: string
                      description: Start old_line line number
                    new_line:
                      type: string
                      description: Start new_line line number
                end:
                  type: object
                  properties:
                    line_code:
                      type: string
                      description: End line code for multi-line note
                    type:
                      type: string
                      description: End line type for multi-line note
                    old_line:
                      type: string
                      description: End old_line line number
                    new_line:
                      type: string
                      description: End new_line line number
              description: Multi-line start and end
      description: Create a new draft note
    putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId:
      type: object
      properties:
        note:
          type: string
          description: The content of a note.
        position:
          required:
            - base_sha
            - head_sha
            - position_type
            - start_sha
          type: object
          properties:
            base_sha:
              type: string
              description: Base commit SHA in the source branch
            start_sha:
              type: string
              description: SHA referencing commit in target branch
            head_sha:
              type: string
              description: SHA referencing HEAD of this merge request
            position_type:
              type: string
              description: Type of the position reference
              enum:
                - text
                - image
            new_path:
              type: string
              description: File path after change
            new_line:
              type: integer
              description: Line number after change
              format: int32
            old_path:
              type: string
              description: File path before change
            old_line:
              type: integer
              description: Line number before change
              format: int32
            width:
              type: integer
              description: Width of the image
              format: int32
            height:
              type: integer
              description: Height of the image
              format: int32
            x:
              type: integer
              description: X coordinate in the image
              format: int32
            y:
              type: integer
              description: Y coordinate in the image
              format: int32
            line_range:
              type: object
              properties:
                start:
                  type: object
                  properties:
                    line_code:
                      type: string
                      description: Start line code for multi-line note
                    type:
                      type: string
                      description: Start line type for multi-line note
                    old_line:
                      type: string
                      description: Start old_line line number
                    new_line:
                      type: string
                      description: Start new_line line number
                end:
                  type: object
                  properties:
                    line_code:
                      type: string
                      description: End line code for multi-line note
                    type:
                      type: string
                      description: End line type for multi-line note
                    old_line:
                      type: string
                      description: End old_line line number
                    new_line:
                      type: string
                      description: End new_line line number
              description: Multi-line start and end
      description: Modify an existing draft note
    API_Entities_Environment:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: deploy
        slug:
          type: string
          example: deploy
        external_url:
          type: string
          example: https://deploy.gitlab.example.com
        created_at:
          type: string
          format: date-time
          example: "2019-05-25T18:55:13.252Z"
        updated_at:
          type: string
          format: date-time
          example: "2019-05-25T18:55:13.252Z"
        tier:
          type: string
          example: development
        project:
          $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        last_deployment:
          $ref: '#/components/schemas/API_Entities_Deployment'
        state:
          type: string
          example: available
        auto_stop_at:
          type: string
          format: date-time
          example: "2019-05-25T18:55:13.252Z"
      description: API_Entities_Environment model
    postApiV4ProjectsIdEnvironments:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the environment
        external_url:
          type: string
          description: Place to link to for this environment
        tier:
          type: string
          description: The tier of the new environment. Allowed values are `production`, `staging`, `testing`, `development`, and `other`
          enum:
            - production
            - staging
            - testing
            - development
            - other
      description: Create a new environment
    putApiV4ProjectsIdEnvironmentsEnvironmentId:
      type: object
      properties:
        external_url:
          type: string
          description: The new URL on which this deployment is viewable
        tier:
          type: string
          description: The tier of the new environment. Allowed values are `production`, `staging`, `testing`, `development`, and `other`
          enum:
            - production
            - staging
            - testing
            - development
            - other
      description: Update an existing environment
    postApiV4ProjectsIdEnvironmentsEnvironmentIdStop:
      type: object
      properties:
        force:
          type: boolean
          description: Force environment to stop without executing `on_stop` actions
          default: false
      description: Stop an environment
    postApiV4ProjectsIdEnvironmentsStopStale:
      required:
        - before
      type: object
      properties:
        before:
          type: string
          description: Stop all environments that were last modified or deployed to before this date.
          format: date-time
      description: Stop stale environments
    API_Entities_ErrorTracking_ProjectSetting:
      type: object
      properties:
        active:
          type: boolean
        project_name:
          type: string
          example: sample sentry project
        sentry_external_url:
          type: string
          example: https://sentry.io/myawesomeproject/project
        api_url:
          type: string
          example: https://sentry.io/api/0/projects/myawesomeproject/project
        integrated:
          type: boolean
      description: API_Entities_ErrorTracking_ProjectSetting model
    patchApiV4ProjectsIdErrorTrackingSettings:
      required:
        - active
      type: object
      properties:
        active:
          type: boolean
          description: Pass true to enable the already configured Error Tracking settings or false to disable it.
        integrated:
          type: boolean
          description: Pass true to enable the integrated Error Tracking backend. Available in GitLab 14.2 and later.
      description: Enable or disable the Error Tracking project settings
    putApiV4ProjectsIdErrorTrackingSettings:
      required:
        - active
        - integrated
      type: object
      properties:
        active:
          type: boolean
          description: Pass true to enable the configured Error Tracking settings or false to disable it.
        integrated:
          type: boolean
          description: Pass true to enable the integrated Error Tracking backend.
      description: Update Error Tracking project settings. Available in GitLab 15.10 and later.
    postApiV4ProjectsIdRepositoryFilesFilePath:
      required:
        - branch
        - commit_message
        - content
      type: object
      properties:
        branch:
          type: string
          description: Name of the branch to commit into. To create a new branch, also provide `start_branch`.
          example: main
        commit_message:
          type: string
          description: Commit message
          example: Initial commit
        start_branch:
          type: string
          description: Name of the branch to start the new commit from
          example: main
        author_email:
          type: string
          description: The email of the author
          example: johndoe@example.com
        author_name:
          type: string
          description: The name of the author
          example: John Doe
        content:
          type: string
          description: File content
          example: file content
        encoding:
          type: string
          description: File encoding
          default: text
          enum:
            - base64
            - text
        last_commit_id:
          type: string
          description: Last known commit id for this file
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        execute_filemode:
          type: boolean
          description: Enable / Disable the executable flag on the file path
      description: Create new file in repository
    putApiV4ProjectsIdRepositoryFilesFilePath:
      required:
        - branch
        - commit_message
        - content
      type: object
      properties:
        branch:
          type: string
          description: Name of the branch to commit into. To create a new branch, also provide `start_branch`.
          example: main
        commit_message:
          type: string
          description: Commit message
          example: Initial commit
        start_branch:
          type: string
          description: Name of the branch to start the new commit from
          example: main
        author_email:
          type: string
          description: The email of the author
          example: johndoe@example.com
        author_name:
          type: string
          description: The name of the author
          example: John Doe
        content:
          type: string
          description: File content
          example: file content
        encoding:
          type: string
          description: File encoding
          default: text
          enum:
            - base64
            - text
        last_commit_id:
          type: string
          description: Last known commit id for this file
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        execute_filemode:
          type: boolean
          description: Enable / Disable the executable flag on the file path
      description: Update existing file in repository
    API_Entities_FreezePeriod:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        freeze_start:
          type: string
          example: 0 23 * * 5
        freeze_end:
          type: string
          example: 0 8 * * 1
        cron_timezone:
          type: string
          example: UTC
        created_at:
          type: string
          format: date-time
          example: "2020-05-15T17:03:35.702Z"
        updated_at:
          type: string
          format: date-time
          example: "2020-05-15T17:03:35.702Z"
      description: API_Entities_FreezePeriod model
    postApiV4ProjectsIdFreezePeriods:
      required:
        - freeze_end
        - freeze_start
      type: object
      properties:
        freeze_start:
          type: string
          description: Start of the freeze period in cron format.
        freeze_end:
          type: string
          description: End of the freeze period in cron format
        cron_timezone:
          type: string
          description: The time zone for the cron fields, defaults to UTC if not provided
      description: Create a freeze period
    putApiV4ProjectsIdFreezePeriodsFreezePeriodId:
      type: object
      properties:
        freeze_start:
          type: string
          description: Start of the freeze period in cron format
        freeze_end:
          type: string
          description: End of the freeze period in cron format
        cron_timezone:
          type: string
          description: The time zone for the cron fields
      description: Update a freeze period
    API_Entities_ProjectIntegrationBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 75
        title:
          type: string
          example: Jenkins CI
        slug:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
          example: "2019-11-20T11:20:25.297Z"
        updated_at:
          type: string
          format: date-time
          example: "2019-11-20T12:24:37.498Z"
        active:
          type: boolean
        commit_events:
          type: boolean
        push_events:
          type: boolean
        issues_events:
          type: boolean
        incident_events:
          type: boolean
        alert_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        deployment_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        job_events:
          type: boolean
        comment_on_event_enabled:
          type: boolean
        vulnerability_events:
          type: boolean
      description: API_Entities_ProjectIntegrationBasic model
    putApiV4ProjectsIdServicesAppleAppStore:
      required:
        - app_store_issuer_id
        - app_store_key_id
        - app_store_private_key
        - app_store_private_key_file_name
      type: object
      properties:
        app_store_issuer_id:
          type: string
          description: Apple App Store Connect issuer ID.
        app_store_key_id:
          type: string
          description: Apple App Store Connect key ID.
        app_store_private_key_file_name:
          type: string
          description: Apple App Store Connect private key file name.
        app_store_private_key:
          type: string
          description: Apple App Store Connect private key.
        app_store_protected_refs:
          type: boolean
          description: Set variables on protected branches and tags only.
      description: Create/Edit Apple App Store integration
    putApiV4ProjectsIdServicesAsana:
      required:
        - api_key
      type: object
      properties:
        api_key:
          type: string
          description: User API token. The user must have access to the task. All comments are attributed to this user.
        restrict_to_branch:
          type: string
          description: Comma-separated list of branches to be automatically inspected. Leave blank to include all branches.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Asana integration
    putApiV4ProjectsIdServicesAssembla:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The authentication token.
        subdomain:
          type: string
          description: The subdomain setting.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Assembla integration
    putApiV4ProjectsIdServicesBamboo:
      required:
        - bamboo_url
        - build_key
        - password
        - username
      type: object
      properties:
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification. Defaults to `true` (enabled).
        bamboo_url:
          type: string
          description: Bamboo root URL (for example, `https://bamboo.example.com`).
        build_key:
          type: string
          description: Bamboo build plan key (for example, `KEY`).
        username:
          type: string
          description: User with API access to the Bamboo server.
        password:
          type: string
          description: Password of the user.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Bamboo integration
    putApiV4ProjectsIdServicesBugzilla:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Bugzilla integration
    putApiV4ProjectsIdServicesBuildkite:
      required:
        - project_url
        - token
      type: object
      properties:
        token:
          type: string
          description: Buildkite project GitLab token
        project_url:
          type: string
          description: The Buildkite pipeline URL
        enable_ssl_verification:
          type: boolean
          description: 'DEPRECATED: This parameter has no effect since SSL verification will always be enabled'
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Buildkite integration
    putApiV4ProjectsIdServicesCampfire:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: API authentication token from Campfire. To get the token, sign in to Campfire and select **My info**.
        subdomain:
          type: string
          description: '`.campfirenow.com` subdomain when you''re signed in.'
        room:
          type: string
          description: ID portion of the Campfire room URL.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Campfire integration
    putApiV4ProjectsIdServicesConfluence:
      required:
        - confluence_url
      type: object
      properties:
        confluence_url:
          type: string
          description: URL of the Confluence Workspace hosted on `atlassian.net`.
      description: Create/Edit Confluence integration
    putApiV4ProjectsIdServicesCustomIssueTracker:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Custom Issue Tracker integration
    putApiV4ProjectsIdServicesDatadog:
      required:
        - api_key
      type: object
      properties:
        api_key:
          type: string
          description: API key used for authentication with Datadog
        datadog_site:
          type: string
          description: The Datadog site to send data to. To send data to the EU site, use datadoghq.eu
        api_url:
          type: string
          description: (Advanced) The full URL for your Datadog site
        archive_trace_events:
          type: boolean
          description: When enabled, job logs are collected by Datadog and displayed along with pipeline execution traces.
        datadog_service:
          type: string
          description: Tag all data from this GitLab instance in Datadog. Useful when managing several self-managed deployments
        datadog_env:
          type: string
          description: For self-managed deployments, set the env tag for all the data sent to Datadog
        datadog_tags:
          type: string
          description: 'Custom tags in Datadog. Specify one tag per line in the format: "key:value\nkey2:value2"'
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        build_events:
          type: boolean
          description: Trigger event when a build is created.
      description: Create/Edit Datadog integration
    putApiV4ProjectsIdServicesDiffblueCover:
      required:
        - diffblue_access_token_name
        - diffblue_access_token_secret
        - diffblue_license_key
      type: object
      properties:
        diffblue_license_key:
          type: string
          description: Diffblue Cover license key.
        diffblue_access_token_name:
          type: string
          description: Access token name used by Diffblue Cover in pipelines.
        diffblue_access_token_secret:
          type: string
          description: Access token secret used by Diffblue Cover in pipelines.
      description: Create/Edit Diffblue Cover integration
    putApiV4ProjectsIdServicesDiscord:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: Discord webhook (for example, `https://discord.com/api/webhooks/…`).
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
      description: Create/Edit Discord integration
    putApiV4ProjectsIdServicesDroneCi:
      required:
        - drone_url
        - token
      type: object
      properties:
        token:
          type: string
          description: Drone CI token
        drone_url:
          type: string
          description: Drone CI URL
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Drone Ci integration
    putApiV4ProjectsIdServicesEmailsOnPush:
      required:
        - recipients
      type: object
      properties:
        recipients:
          type: string
          description: Comma-separated list of recipient email addresses
        disable_diffs:
          type: boolean
          description: Disable code diffs
        send_from_committer_email:
          type: boolean
          description: Send from committer
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Emails On Push integration
    putApiV4ProjectsIdServicesExternalWiki:
      required:
        - external_wiki_url
      type: object
      properties:
        external_wiki_url:
          type: string
          description: URL of the external wiki.
      description: Create/Edit External Wiki integration
    putApiV4ProjectsIdServicesGitlabSlackApplication:
      type: object
      properties:
        channel:
          type: string
          description: Default channel to use if no other channel is configured.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        labels_to_be_notified:
          type: string
          description: Labels to send notifications for. Leave blank to receive notifications for all events.
        labels_to_be_notified_behavior:
          type: string
          description: Labels to be notified for. Valid options are `match_any` and `match_all`. The default value is `match_any`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
        alert_events:
          type: boolean
          description: Trigger event when a new, unique alert is recorded.
      description: Create/Edit Gitlab Slack Application integration
    putApiV4ProjectsIdServicesGooglePlay:
      required:
        - package_name
        - service_account_key
        - service_account_key_file_name
      type: object
      properties:
        package_name:
          type: string
          description: Package name of the app in Google Play.
        service_account_key_file_name:
          type: string
          description: File name of the Google Play service account key.
        service_account_key:
          type: string
          description: Google Play service account key.
        google_play_protected_refs:
          type: boolean
          description: Set variables on protected branches and tags only.
      description: Create/Edit Google Play integration
    putApiV4ProjectsIdServicesHangoutsChat:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Hangouts Chat webhook. e.g. https://chat.googleapis.com/v1/spaces…
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Hangouts Chat integration
    putApiV4ProjectsIdServicesHarbor:
      required:
        - password
        - project_name
        - url
        - username
      type: object
      properties:
        url:
          type: string
          description: The base URL to the Harbor instance linked to the GitLab project. For example, `https://demo.goharbor.io`.
        project_name:
          type: string
          description: The name of the project in the Harbor instance. For example, `testproject`.
        username:
          type: string
          description: The username created in the Harbor interface.
        password:
          type: string
          description: The password of the user.
      description: Create/Edit Harbor integration
    putApiV4ProjectsIdServicesIrker:
      required:
        - recipients
      type: object
      properties:
        recipients:
          type: string
          description: Recipients/channels separated by whitespaces
        default_irc_uri:
          type: string
          description: 'Default: irc://irc.network.net:6697'
        server_host:
          type: string
          description: Server host. Default localhost
        server_port:
          type: integer
          description: Server port. Default 6659
          format: int32
        colorize_messages:
          type: boolean
          description: Colorize messages
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Irker integration
    putApiV4ProjectsIdServicesJenkins:
      required:
        - jenkins_url
        - project_name
      type: object
      properties:
        jenkins_url:
          type: string
          description: Jenkins root URL like https://jenkins.example.com
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification
        project_name:
          type: string
          description: 'The URL-friendly project name. Example: my_project_name'
        username:
          type: string
          description: A user with access to the Jenkins server, if applicable
        password:
          type: string
          description: The password of the user
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Jenkins integration
    putApiV4ProjectsIdServicesJira:
      required:
        - password
        - url
      type: object
      properties:
        url:
          type: string
          description: The base URL to the Jira instance web interface which is being linked to this GitLab project. E.g., https://jira.example.com
        api_url:
          type: string
          description: The base URL to the Jira instance API. Web URL value will be used if not set. E.g., https://jira-api.example.com
        jira_auth_type:
          type: integer
          description: The authentication method to be used with Jira. `0` means Basic Authentication. `1` means Jira personal access token. Defaults to `0`
          format: int32
        username:
          type: string
          description: The email or username to be used with Jira. For Jira Cloud use an email, for Jira Data Center and Jira Server use a username. Required when using Basic authentication (`jira_auth_type` is `0`)
        password:
          type: string
          description: The Jira API token, password, or personal access token to be used with Jira. When your authentication method is Basic (`jira_auth_type` is `0`) use an API token for Jira Cloud, or a password for Jira Data Center or Jira Server. When your authentication method is Jira personal access token (`jira_auth_type` is `1`) use a personal access token
        jira_issue_transition_automatic:
          type: boolean
          description: Enable automatic issue transitions
        jira_issue_transition_id:
          type: string
          description: The ID of one or more transitions for custom issue transitions
        jira_issue_prefix:
          type: string
          description: Prefix to match Jira issue keys
        jira_issue_regex:
          type: string
          description: Regular expression to match Jira issue keys
        issues_enabled:
          type: boolean
          description: Enable viewing Jira issues in GitLab
        project_keys:
          type: array
          description: Keys of Jira projects to view issues from in GitLab
          items:
            type: string
        comment_on_event_enabled:
          type: boolean
          description: Enable comments inside Jira issues on each GitLab event (commit / merge request)
        commit_events:
          type: boolean
          description: Trigger event when a commit is created or updated.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
      description: Create/Edit Jira integration
    putApiV4ProjectsIdServicesMattermostSlashCommands:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Mattermost token.
      description: Create/Edit Mattermost Slash Commands integration
    putApiV4ProjectsIdServicesSlackSlashCommands:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Slack token
      description: Create/Edit Slack Slash Commands integration
    putApiV4ProjectsIdServicesPackagist:
      required:
        - token
        - username
      type: object
      properties:
        username:
          type: string
          description: The username
        token:
          type: string
          description: The Packagist API token
        server:
          type: string
          description: The server
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Packagist integration
    putApiV4ProjectsIdServicesPhorge:
      required:
        - issues_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Phorge integration
    putApiV4ProjectsIdServicesPipelinesEmail:
      required:
        - recipients
      type: object
      properties:
        recipients:
          type: string
          description: Comma-separated list of recipient email addresses
        notify_only_broken_pipelines:
          type: boolean
          description: Notify only broken pipelines
        notify_only_default_branch:
          type: boolean
          description: Send notifications only for the default branch
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
      description: Create/Edit Pipelines Email integration
    putApiV4ProjectsIdServicesPivotaltracker:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Pivotaltracker token
        restrict_to_branch:
          type: string
          description: Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Pivotaltracker integration
    putApiV4ProjectsIdServicesPrometheus:
      required:
        - api_url
        - google_iap_audience_client_id
        - google_iap_service_account_json
      type: object
      properties:
        manual_configuration:
          type: boolean
          description: When enabled, the default settings will be overridden with your custom configuration
        api_url:
          type: string
          description: Prometheus API Base URL, like http://prometheus.example.com/
        google_iap_audience_client_id:
          type: string
          description: Client ID of the IAP-secured resource (looks like IAP_CLIENT_ID.apps.googleusercontent.com)
        google_iap_service_account_json:
          type: string
          description: 'Contents of the credentials.json file of your service account, like: { "type": "service_account", "project_id": ... }'
      description: Create/Edit Prometheus integration
    putApiV4ProjectsIdServicesPumble:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Pumble chat webhook. For example, https://api.pumble.com/workspaces/x/...
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Pumble integration
    putApiV4ProjectsIdServicesPushover:
      required:
        - api_key
        - device
        - priority
        - sound
        - user_key
      type: object
      properties:
        api_key:
          type: string
          description: The application key
        user_key:
          type: string
          description: The user key
        priority:
          type: string
          description: The priority
        device:
          type: string
          description: Leave blank for all active devices
        sound:
          type: string
          description: The sound of the notification
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Pushover integration
    putApiV4ProjectsIdServicesRedmine:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Redmine integration
    putApiV4ProjectsIdServicesEwm:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Ewm integration
    putApiV4ProjectsIdServicesYoutrack:
      required:
        - issues_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Youtrack integration
    putApiV4ProjectsIdServicesClickup:
      required:
        - issues_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Clickup integration
    putApiV4ProjectsIdServicesSlack:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: Slack notifications webhook (for example, `https://hooks.slack.com/services/...`).
        username:
          type: string
          description: Slack notifications username.
        channel:
          type: string
          description: Default channel to use if no other channel is configured.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        labels_to_be_notified:
          type: string
          description: Labels to send notifications for. Leave blank to receive notifications for all events.
        labels_to_be_notified_behavior:
          type: string
          description: Labels to be notified for. Valid options are `match_any` and `match_all`. The default value is `match_any`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
        alert_events:
          type: boolean
          description: Trigger event when a new, unique alert is recorded.
      description: Create/Edit Slack integration
    putApiV4ProjectsIdServicesMicrosoftTeams:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Microsoft Teams webhook. e.g. https://outlook.office.com/webhook/…
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Microsoft Teams integration
    putApiV4ProjectsIdServicesMattermost:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: Mattermost notifications webhook (for example, `http://mattermost.example.com/hooks/...`).
        username:
          type: string
          description: Mattermost notifications username.
        channel:
          type: string
          description: Default channel to use if no other channel is configured.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        labels_to_be_notified:
          type: string
          description: Labels to send notifications for. Leave blank to receive notifications for all events.
        labels_to_be_notified_behavior:
          type: string
          description: Labels to be notified for. Valid options are `match_any` and `match_all`. The default value is `match_any`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
      description: Create/Edit Mattermost integration
    putApiV4ProjectsIdServicesTeamcity:
      required:
        - build_type
        - password
        - teamcity_url
        - username
      type: object
      properties:
        teamcity_url:
          type: string
          description: TeamCity root URL like https://teamcity.example.com
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification
        build_type:
          type: string
          description: Build configuration ID
        username:
          type: string
          description: A user with permissions to trigger a manual build
        password:
          type: string
          description: The password of the user
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
      description: Create/Edit Teamcity integration
    putApiV4ProjectsIdServicesTelegram:
      required:
        - room
        - token
      type: object
      properties:
        hostname:
          type: string
          description: Custom hostname of the Telegram API. The default value is `https://api.telegram.org`.
        token:
          type: string
          description: The Telegram chat token. For example, 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11
        room:
          type: string
          description: Unique identifier for the target chat or username of the target channel (in the format @channelusername)
        thread:
          type: integer
          description: Unique identifier for the target message thread (topic in a forum supergroup)
          format: int32
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
      description: Create/Edit Telegram integration
    putApiV4ProjectsIdServicesUnifyCircuit:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Unify Circuit webhook. e.g. https://circuit.com/rest/v2/webhooks/incoming/…
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Unify Circuit integration
    putApiV4ProjectsIdServicesWebexTeams:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Webex Teams webhook. For example, https://api.ciscospark.com/v1/webhooks/incoming/...
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Webex Teams integration
    putApiV4ProjectsIdServicesZentao:
      required:
        - api_token
        - url
        - zentao_product_xid
      type: object
      properties:
        url:
          type: string
          description: The base URL to the ZenTao instance web interface which is being linked to this GitLab project. For example, https://www.zentao.net
        api_url:
          type: string
          description: The base URL to the ZenTao instance API. Web URL value will be used if not set. For example, https://www.zentao.net
        api_token:
          type: string
          description: The API token created from ZenTao dashboard
        zentao_product_xid:
          type: string
          description: The product ID of ZenTao project
      description: Create/Edit Zentao integration
    putApiV4ProjectsIdServicesSquashTm:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          description: URL of the Squash TM webhook.
        token:
          type: string
          description: Secret token.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
      description: Create/Edit Squash Tm integration
    putApiV4ProjectsIdServicesGithub:
      required:
        - repository_url
        - token
      type: object
      properties:
        token:
          type: string
          description: GitHub API token with `repo:status` OAuth scope.
        repository_url:
          type: string
          description: GitHub repository URL.
        static_context:
          type: boolean
          description: Append the hostname of your GitLab instance to the status check name.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
      description: Create/Edit Github integration
    putApiV4ProjectsIdServicesGitGuardian:
      required:
        - token
      type: object
      properties:
        token:
          type: string
      description: Create/Edit Git Guardian integration
    putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry:
      required:
        - artifact_registry_location
        - artifact_registry_project_id
        - artifact_registry_repositories
      type: object
      properties:
        artifact_registry_project_id:
          type: string
        artifact_registry_repositories:
          type: string
        artifact_registry_location:
          type: string
      description: Create/Edit Google Cloud Platform Artifact Registry integration
    putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation:
      required:
        - workload_identity_federation_project_id
        - workload_identity_federation_project_number
        - workload_identity_pool_id
        - workload_identity_pool_provider_id
      type: object
      properties:
        workload_identity_federation_project_id:
          type: string
          description: Google Cloud project ID for the Workload Identity Federation.
        workload_identity_federation_project_number:
          type: string
          description: Google Cloud project number for the Workload Identity Federation.
        workload_identity_pool_id:
          type: string
          description: ID of the Workload Identity Pool.
        workload_identity_pool_provider_id:
          type: string
          description: ID of the Workload Identity Pool provider.
      description: Create/Edit Google Cloud Platform Workload Identity Federation integration
    putApiV4ProjectsIdServicesMockCi:
      required:
        - mock_service_url
      type: object
      properties:
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification. Defaults to `true` (enabled).
        mock_service_url:
          type: string
          description: URL of the Mock CI integration.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Mock Ci integration
    API_Entities_ProjectIntegration:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 75
        title:
          type: string
          example: Jenkins CI
        slug:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
          example: "2019-11-20T11:20:25.297Z"
        updated_at:
          type: string
          format: date-time
          example: "2019-11-20T12:24:37.498Z"
        active:
          type: boolean
        commit_events:
          type: boolean
        push_events:
          type: boolean
        issues_events:
          type: boolean
        incident_events:
          type: boolean
        alert_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        deployment_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        job_events:
          type: boolean
        comment_on_event_enabled:
          type: boolean
        vulnerability_events:
          type: boolean
        properties:
          type: object
          properties: {}
          example:
            token: secr3t
      description: API_Entities_ProjectIntegration model
    postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Mattermost token.
      description: Trigger a slash command for mattermost-slash-commands
    postApiV4ProjectsIdServicesSlackSlashCommandsTrigger:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Slack token.
      description: Trigger a slash command for slack-slash-commands
    putApiV4ProjectsIdIntegrationsAppleAppStore:
      required:
        - app_store_issuer_id
        - app_store_key_id
        - app_store_private_key
        - app_store_private_key_file_name
      type: object
      properties:
        app_store_issuer_id:
          type: string
          description: Apple App Store Connect issuer ID.
        app_store_key_id:
          type: string
          description: Apple App Store Connect key ID.
        app_store_private_key_file_name:
          type: string
          description: Apple App Store Connect private key file name.
        app_store_private_key:
          type: string
          description: Apple App Store Connect private key.
        app_store_protected_refs:
          type: boolean
          description: Set variables on protected branches and tags only.
      description: Create/Edit Apple App Store integration
    putApiV4ProjectsIdIntegrationsAsana:
      required:
        - api_key
      type: object
      properties:
        api_key:
          type: string
          description: User API token. The user must have access to the task. All comments are attributed to this user.
        restrict_to_branch:
          type: string
          description: Comma-separated list of branches to be automatically inspected. Leave blank to include all branches.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Asana integration
    putApiV4ProjectsIdIntegrationsAssembla:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The authentication token.
        subdomain:
          type: string
          description: The subdomain setting.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Assembla integration
    putApiV4ProjectsIdIntegrationsBamboo:
      required:
        - bamboo_url
        - build_key
        - password
        - username
      type: object
      properties:
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification. Defaults to `true` (enabled).
        bamboo_url:
          type: string
          description: Bamboo root URL (for example, `https://bamboo.example.com`).
        build_key:
          type: string
          description: Bamboo build plan key (for example, `KEY`).
        username:
          type: string
          description: User with API access to the Bamboo server.
        password:
          type: string
          description: Password of the user.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Bamboo integration
    putApiV4ProjectsIdIntegrationsBugzilla:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Bugzilla integration
    putApiV4ProjectsIdIntegrationsBuildkite:
      required:
        - project_url
        - token
      type: object
      properties:
        token:
          type: string
          description: Buildkite project GitLab token
        project_url:
          type: string
          description: The Buildkite pipeline URL
        enable_ssl_verification:
          type: boolean
          description: 'DEPRECATED: This parameter has no effect since SSL verification will always be enabled'
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Buildkite integration
    putApiV4ProjectsIdIntegrationsCampfire:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: API authentication token from Campfire. To get the token, sign in to Campfire and select **My info**.
        subdomain:
          type: string
          description: '`.campfirenow.com` subdomain when you''re signed in.'
        room:
          type: string
          description: ID portion of the Campfire room URL.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Campfire integration
    putApiV4ProjectsIdIntegrationsConfluence:
      required:
        - confluence_url
      type: object
      properties:
        confluence_url:
          type: string
          description: URL of the Confluence Workspace hosted on `atlassian.net`.
      description: Create/Edit Confluence integration
    putApiV4ProjectsIdIntegrationsCustomIssueTracker:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Custom Issue Tracker integration
    putApiV4ProjectsIdIntegrationsDatadog:
      required:
        - api_key
      type: object
      properties:
        api_key:
          type: string
          description: API key used for authentication with Datadog
        datadog_site:
          type: string
          description: The Datadog site to send data to. To send data to the EU site, use datadoghq.eu
        api_url:
          type: string
          description: (Advanced) The full URL for your Datadog site
        archive_trace_events:
          type: boolean
          description: When enabled, job logs are collected by Datadog and displayed along with pipeline execution traces.
        datadog_service:
          type: string
          description: Tag all data from this GitLab instance in Datadog. Useful when managing several self-managed deployments
        datadog_env:
          type: string
          description: For self-managed deployments, set the env tag for all the data sent to Datadog
        datadog_tags:
          type: string
          description: 'Custom tags in Datadog. Specify one tag per line in the format: "key:value\nkey2:value2"'
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        build_events:
          type: boolean
          description: Trigger event when a build is created.
      description: Create/Edit Datadog integration
    putApiV4ProjectsIdIntegrationsDiffblueCover:
      required:
        - diffblue_access_token_name
        - diffblue_access_token_secret
        - diffblue_license_key
      type: object
      properties:
        diffblue_license_key:
          type: string
          description: Diffblue Cover license key.
        diffblue_access_token_name:
          type: string
          description: Access token name used by Diffblue Cover in pipelines.
        diffblue_access_token_secret:
          type: string
          description: Access token secret used by Diffblue Cover in pipelines.
      description: Create/Edit Diffblue Cover integration
    putApiV4ProjectsIdIntegrationsDiscord:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: Discord webhook (for example, `https://discord.com/api/webhooks/…`).
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
      description: Create/Edit Discord integration
    putApiV4ProjectsIdIntegrationsDroneCi:
      required:
        - drone_url
        - token
      type: object
      properties:
        token:
          type: string
          description: Drone CI token
        drone_url:
          type: string
          description: Drone CI URL
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Drone Ci integration
    putApiV4ProjectsIdIntegrationsEmailsOnPush:
      required:
        - recipients
      type: object
      properties:
        recipients:
          type: string
          description: Comma-separated list of recipient email addresses
        disable_diffs:
          type: boolean
          description: Disable code diffs
        send_from_committer_email:
          type: boolean
          description: Send from committer
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Emails On Push integration
    putApiV4ProjectsIdIntegrationsExternalWiki:
      required:
        - external_wiki_url
      type: object
      properties:
        external_wiki_url:
          type: string
          description: URL of the external wiki.
      description: Create/Edit External Wiki integration
    putApiV4ProjectsIdIntegrationsGitlabSlackApplication:
      type: object
      properties:
        channel:
          type: string
          description: Default channel to use if no other channel is configured.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        labels_to_be_notified:
          type: string
          description: Labels to send notifications for. Leave blank to receive notifications for all events.
        labels_to_be_notified_behavior:
          type: string
          description: Labels to be notified for. Valid options are `match_any` and `match_all`. The default value is `match_any`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
        alert_events:
          type: boolean
          description: Trigger event when a new, unique alert is recorded.
      description: Create/Edit Gitlab Slack Application integration
    putApiV4ProjectsIdIntegrationsGooglePlay:
      required:
        - package_name
        - service_account_key
        - service_account_key_file_name
      type: object
      properties:
        package_name:
          type: string
          description: Package name of the app in Google Play.
        service_account_key_file_name:
          type: string
          description: File name of the Google Play service account key.
        service_account_key:
          type: string
          description: Google Play service account key.
        google_play_protected_refs:
          type: boolean
          description: Set variables on protected branches and tags only.
      description: Create/Edit Google Play integration
    putApiV4ProjectsIdIntegrationsHangoutsChat:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Hangouts Chat webhook. e.g. https://chat.googleapis.com/v1/spaces…
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Hangouts Chat integration
    putApiV4ProjectsIdIntegrationsHarbor:
      required:
        - password
        - project_name
        - url
        - username
      type: object
      properties:
        url:
          type: string
          description: The base URL to the Harbor instance linked to the GitLab project. For example, `https://demo.goharbor.io`.
        project_name:
          type: string
          description: The name of the project in the Harbor instance. For example, `testproject`.
        username:
          type: string
          description: The username created in the Harbor interface.
        password:
          type: string
          description: The password of the user.
      description: Create/Edit Harbor integration
    putApiV4ProjectsIdIntegrationsIrker:
      required:
        - recipients
      type: object
      properties:
        recipients:
          type: string
          description: Recipients/channels separated by whitespaces
        default_irc_uri:
          type: string
          description: 'Default: irc://irc.network.net:6697'
        server_host:
          type: string
          description: Server host. Default localhost
        server_port:
          type: integer
          description: Server port. Default 6659
          format: int32
        colorize_messages:
          type: boolean
          description: Colorize messages
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Irker integration
    putApiV4ProjectsIdIntegrationsJenkins:
      required:
        - jenkins_url
        - project_name
      type: object
      properties:
        jenkins_url:
          type: string
          description: Jenkins root URL like https://jenkins.example.com
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification
        project_name:
          type: string
          description: 'The URL-friendly project name. Example: my_project_name'
        username:
          type: string
          description: A user with access to the Jenkins server, if applicable
        password:
          type: string
          description: The password of the user
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Jenkins integration
    putApiV4ProjectsIdIntegrationsJira:
      required:
        - password
        - url
      type: object
      properties:
        url:
          type: string
          description: The base URL to the Jira instance web interface which is being linked to this GitLab project. E.g., https://jira.example.com
        api_url:
          type: string
          description: The base URL to the Jira instance API. Web URL value will be used if not set. E.g., https://jira-api.example.com
        jira_auth_type:
          type: integer
          description: The authentication method to be used with Jira. `0` means Basic Authentication. `1` means Jira personal access token. Defaults to `0`
          format: int32
        username:
          type: string
          description: The email or username to be used with Jira. For Jira Cloud use an email, for Jira Data Center and Jira Server use a username. Required when using Basic authentication (`jira_auth_type` is `0`)
        password:
          type: string
          description: The Jira API token, password, or personal access token to be used with Jira. When your authentication method is Basic (`jira_auth_type` is `0`) use an API token for Jira Cloud, or a password for Jira Data Center or Jira Server. When your authentication method is Jira personal access token (`jira_auth_type` is `1`) use a personal access token
        jira_issue_transition_automatic:
          type: boolean
          description: Enable automatic issue transitions
        jira_issue_transition_id:
          type: string
          description: The ID of one or more transitions for custom issue transitions
        jira_issue_prefix:
          type: string
          description: Prefix to match Jira issue keys
        jira_issue_regex:
          type: string
          description: Regular expression to match Jira issue keys
        issues_enabled:
          type: boolean
          description: Enable viewing Jira issues in GitLab
        project_keys:
          type: array
          description: Keys of Jira projects to view issues from in GitLab
          items:
            type: string
        comment_on_event_enabled:
          type: boolean
          description: Enable comments inside Jira issues on each GitLab event (commit / merge request)
        commit_events:
          type: boolean
          description: Trigger event when a commit is created or updated.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
      description: Create/Edit Jira integration
    putApiV4ProjectsIdIntegrationsMattermostSlashCommands:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Mattermost token.
      description: Create/Edit Mattermost Slash Commands integration
    putApiV4ProjectsIdIntegrationsSlackSlashCommands:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Slack token
      description: Create/Edit Slack Slash Commands integration
    putApiV4ProjectsIdIntegrationsPackagist:
      required:
        - token
        - username
      type: object
      properties:
        username:
          type: string
          description: The username
        token:
          type: string
          description: The Packagist API token
        server:
          type: string
          description: The server
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
      description: Create/Edit Packagist integration
    putApiV4ProjectsIdIntegrationsPhorge:
      required:
        - issues_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Phorge integration
    putApiV4ProjectsIdIntegrationsPipelinesEmail:
      required:
        - recipients
      type: object
      properties:
        recipients:
          type: string
          description: Comma-separated list of recipient email addresses
        notify_only_broken_pipelines:
          type: boolean
          description: Notify only broken pipelines
        notify_only_default_branch:
          type: boolean
          description: Send notifications only for the default branch
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
      description: Create/Edit Pipelines Email integration
    putApiV4ProjectsIdIntegrationsPivotaltracker:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Pivotaltracker token
        restrict_to_branch:
          type: string
          description: Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Pivotaltracker integration
    putApiV4ProjectsIdIntegrationsPrometheus:
      required:
        - api_url
        - google_iap_audience_client_id
        - google_iap_service_account_json
      type: object
      properties:
        manual_configuration:
          type: boolean
          description: When enabled, the default settings will be overridden with your custom configuration
        api_url:
          type: string
          description: Prometheus API Base URL, like http://prometheus.example.com/
        google_iap_audience_client_id:
          type: string
          description: Client ID of the IAP-secured resource (looks like IAP_CLIENT_ID.apps.googleusercontent.com)
        google_iap_service_account_json:
          type: string
          description: 'Contents of the credentials.json file of your service account, like: { "type": "service_account", "project_id": ... }'
      description: Create/Edit Prometheus integration
    putApiV4ProjectsIdIntegrationsPumble:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Pumble chat webhook. For example, https://api.pumble.com/workspaces/x/...
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Pumble integration
    putApiV4ProjectsIdIntegrationsPushover:
      required:
        - api_key
        - device
        - priority
        - sound
        - user_key
      type: object
      properties:
        api_key:
          type: string
          description: The application key
        user_key:
          type: string
          description: The user key
        priority:
          type: string
          description: The priority
        device:
          type: string
          description: Leave blank for all active devices
        sound:
          type: string
          description: The sound of the notification
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Pushover integration
    putApiV4ProjectsIdIntegrationsRedmine:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Redmine integration
    putApiV4ProjectsIdIntegrationsEwm:
      required:
        - issues_url
        - new_issue_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        new_issue_url:
          type: string
          description: URL of the new issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Ewm integration
    putApiV4ProjectsIdIntegrationsYoutrack:
      required:
        - issues_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Youtrack integration
    putApiV4ProjectsIdIntegrationsClickup:
      required:
        - issues_url
        - project_url
      type: object
      properties:
        project_url:
          type: string
          description: URL of the project.
        issues_url:
          type: string
          description: URL of the issue.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Clickup integration
    putApiV4ProjectsIdIntegrationsSlack:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: Slack notifications webhook (for example, `https://hooks.slack.com/services/...`).
        username:
          type: string
          description: Slack notifications username.
        channel:
          type: string
          description: Default channel to use if no other channel is configured.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        labels_to_be_notified:
          type: string
          description: Labels to send notifications for. Leave blank to receive notifications for all events.
        labels_to_be_notified_behavior:
          type: string
          description: Labels to be notified for. Valid options are `match_any` and `match_all`. The default value is `match_any`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
        alert_events:
          type: boolean
          description: Trigger event when a new, unique alert is recorded.
      description: Create/Edit Slack integration
    putApiV4ProjectsIdIntegrationsMicrosoftTeams:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Microsoft Teams webhook. e.g. https://outlook.office.com/webhook/…
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Microsoft Teams integration
    putApiV4ProjectsIdIntegrationsMattermost:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: Mattermost notifications webhook (for example, `http://mattermost.example.com/hooks/...`).
        username:
          type: string
          description: Mattermost notifications username.
        channel:
          type: string
          description: Default channel to use if no other channel is configured.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        labels_to_be_notified:
          type: string
          description: Labels to send notifications for. Leave blank to receive notifications for all events.
        labels_to_be_notified_behavior:
          type: string
          description: Labels to be notified for. Valid options are `match_any` and `match_all`. The default value is `match_any`.
        push_channel:
          type: string
          description: The name of the channel to receive push_events notifications
        issue_channel:
          type: string
          description: The name of the channel to receive issues_events notifications
        incident_channel:
          type: string
          description: The name of the channel to receive incident_events notifications
        alert_channel:
          type: string
          description: The name of the channel to receive alert_events notifications
        confidential_issue_channel:
          type: string
          description: The name of the channel to receive confidential_issues_events notifications
        merge_request_channel:
          type: string
          description: The name of the channel to receive merge_requests_events notifications
        note_channel:
          type: string
          description: The name of the channel to receive note_events notifications
        confidential_note_channel:
          type: string
          description: The name of the channel to receive confidential_note_events notifications
        tag_push_channel:
          type: string
          description: The name of the channel to receive tag_push_events notifications
        deployment_channel:
          type: string
          description: The name of the channel to receive deployment_events notifications
        pipeline_channel:
          type: string
          description: The name of the channel to receive pipeline_events notifications
        wiki_page_channel:
          type: string
          description: The name of the channel to receive wiki_page_events notifications
        vulnerability_channel:
          type: string
          description: The name of the channel to receive vulnerability_events notifications
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        deployment_events:
          type: boolean
          description: Trigger event when a deployment starts or finishes.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
      description: Create/Edit Mattermost integration
    putApiV4ProjectsIdIntegrationsTeamcity:
      required:
        - build_type
        - password
        - teamcity_url
        - username
      type: object
      properties:
        teamcity_url:
          type: string
          description: TeamCity root URL like https://teamcity.example.com
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification
        build_type:
          type: string
          description: Build configuration ID
        username:
          type: string
          description: A user with permissions to trigger a manual build
        password:
          type: string
          description: The password of the user
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
      description: Create/Edit Teamcity integration
    putApiV4ProjectsIdIntegrationsTelegram:
      required:
        - room
        - token
      type: object
      properties:
        hostname:
          type: string
          description: Custom hostname of the Telegram API. The default value is `https://api.telegram.org`.
        token:
          type: string
          description: The Telegram chat token. For example, 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11
        room:
          type: string
          description: Unique identifier for the target chat or username of the target channel (in the format @channelusername)
        thread:
          type: integer
          description: Unique identifier for the target message thread (topic in a forum supergroup)
          format: int32
        branches_to_be_notified:
          type: string
          description: Branches for which notifications are to be sent.
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
        incident_events:
          type: boolean
          description: Trigger event when an incident is created.
        vulnerability_events:
          type: boolean
      description: Create/Edit Telegram integration
    putApiV4ProjectsIdIntegrationsUnifyCircuit:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Unify Circuit webhook. e.g. https://circuit.com/rest/v2/webhooks/incoming/…
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Unify Circuit integration
    putApiV4ProjectsIdIntegrationsWebexTeams:
      required:
        - webhook
      type: object
      properties:
        webhook:
          type: string
          description: The Webex Teams webhook. For example, https://api.ciscospark.com/v1/webhooks/incoming/...
        notify_only_broken_pipelines:
          type: boolean
          description: Send notifications for broken pipelines.
        branches_to_be_notified:
          type: string
          description: Branches to send notifications for. Valid options are `all`, `default`, `protected`, and `default_and_protected`. The default value is `default`.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
        merge_requests_events:
          type: boolean
          description: Trigger event when a merge request is created, updated, or merged.
        note_events:
          type: boolean
          description: Trigger event for new comments.
        confidential_note_events:
          type: boolean
          description: Trigger event for new comments on confidential issues.
        tag_push_events:
          type: boolean
          description: Trigger event for new tags pushed to the repository.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
        wiki_page_events:
          type: boolean
          description: Trigger event when a wiki page is created or updated.
      description: Create/Edit Webex Teams integration
    putApiV4ProjectsIdIntegrationsZentao:
      required:
        - api_token
        - url
        - zentao_product_xid
      type: object
      properties:
        url:
          type: string
          description: The base URL to the ZenTao instance web interface which is being linked to this GitLab project. For example, https://www.zentao.net
        api_url:
          type: string
          description: The base URL to the ZenTao instance API. Web URL value will be used if not set. For example, https://www.zentao.net
        api_token:
          type: string
          description: The API token created from ZenTao dashboard
        zentao_product_xid:
          type: string
          description: The product ID of ZenTao project
      description: Create/Edit Zentao integration
    putApiV4ProjectsIdIntegrationsSquashTm:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          description: URL of the Squash TM webhook.
        token:
          type: string
          description: Secret token.
        issues_events:
          type: boolean
          description: Trigger event when an issue is created, updated, or closed.
        confidential_issues_events:
          type: boolean
          description: Trigger event when a confidential issue is created, updated, or closed.
      description: Create/Edit Squash Tm integration
    putApiV4ProjectsIdIntegrationsGithub:
      required:
        - repository_url
        - token
      type: object
      properties:
        token:
          type: string
          description: GitHub API token with `repo:status` OAuth scope.
        repository_url:
          type: string
          description: GitHub repository URL.
        static_context:
          type: boolean
          description: Append the hostname of your GitLab instance to the status check name.
        pipeline_events:
          type: boolean
          description: Trigger event when a pipeline status changes.
      description: Create/Edit Github integration
    putApiV4ProjectsIdIntegrationsGitGuardian:
      required:
        - token
      type: object
      properties:
        token:
          type: string
      description: Create/Edit Git Guardian integration
    putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry:
      required:
        - artifact_registry_location
        - artifact_registry_project_id
        - artifact_registry_repositories
      type: object
      properties:
        artifact_registry_project_id:
          type: string
        artifact_registry_repositories:
          type: string
        artifact_registry_location:
          type: string
      description: Create/Edit Google Cloud Platform Artifact Registry integration
    putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation:
      required:
        - workload_identity_federation_project_id
        - workload_identity_federation_project_number
        - workload_identity_pool_id
        - workload_identity_pool_provider_id
      type: object
      properties:
        workload_identity_federation_project_id:
          type: string
          description: Google Cloud project ID for the Workload Identity Federation.
        workload_identity_federation_project_number:
          type: string
          description: Google Cloud project number for the Workload Identity Federation.
        workload_identity_pool_id:
          type: string
          description: ID of the Workload Identity Pool.
        workload_identity_pool_provider_id:
          type: string
          description: ID of the Workload Identity Pool provider.
      description: Create/Edit Google Cloud Platform Workload Identity Federation integration
    putApiV4ProjectsIdIntegrationsMockCi:
      required:
        - mock_service_url
      type: object
      properties:
        enable_ssl_verification:
          type: boolean
          description: Enable SSL verification. Defaults to `true` (enabled).
        mock_service_url:
          type: string
          description: URL of the Mock CI integration.
        push_events:
          type: boolean
          description: Trigger event for pushes to the repository.
      description: Create/Edit Mock Ci integration
    postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Mattermost token.
      description: Trigger a slash command for mattermost-slash-commands
    postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The Slack token.
      description: Trigger a slash command for slack-slash-commands
    postApiV4ProjectsIdInvitations:
      required:
        - access_level
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, developer access level)'
          format: int32
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
            - 5
        email:
          type: array
          description: The email address to invite, or multiple emails separated by comma
          items:
            type: string
        user_id:
          type: array
          description: The user ID of the new member or multiple IDs separated by commas.
          items:
            type: string
        expires_at:
          type: string
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
        invite_source:
          type: string
          description: Source that triggered the member creation process
          default: invitations-api
      description: Invite non-members by email address to a group or project.
    putApiV4ProjectsIdInvitationsEmail:
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, developer access level)'
          format: int32
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
        expires_at:
          type: string
          description: Date string in ISO 8601 format (`YYYY-MM-DDTHH:MM:SSZ`)
          format: date-time
      description: Updates a group or project invitation.
    API_Entities_RelatedIssue:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 84
        iid:
          type: integer
          format: int32
          example: 14
        project_id:
          type: integer
          format: int32
          example: 4
        title:
          type: string
          example: Impedit et ut et dolores vero provident ullam est
        description:
          type: string
          example: Repellendus impedit et vel velit dignissimos.
        state:
          type: string
          example: closed
        created_at:
          type: string
          format: date-time
          example: "2022-08-17T12:46:35.053Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-11-14T17:22:01.47Z"
        closed_at:
          type: string
          format: date-time
          example: "2022-11-15T08:30:55.232Z"
        closed_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        labels:
          type: array
          items:
            type: string
            example: bug
        milestone:
          $ref: '#/components/schemas/API_Entities_Milestone'
        assignees:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        type:
          type: string
          description: One of ["ISSUE", "INCIDENT", "TEST_CASE", "REQUIREMENT", "TASK"]
          example: ISSUE
        assignee:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        user_notes_count:
          type: string
        merge_requests_count:
          type: string
        upvotes:
          type: string
        downvotes:
          type: string
        due_date:
          type: string
          format: date
          example: "2022-11-20"
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
          example: issue
        web_url:
          type: string
          example: http://example.com/example/example/issues/14
        time_stats:
          $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        task_completion_status:
          type: string
        weight:
          type: string
        blocking_issues_count:
          type: string
        has_tasks:
          type: string
        task_status:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            notes:
              type: string
            award_emoji:
              type: string
            project:
              type: string
            closed_as_duplicate_of:
              type: string
        references:
          $ref: '#/components/schemas/API_Entities_IssuableReferences'
        severity:
          type: string
          description: One of ["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"]
        subscribed:
          type: string
        moved_to_id:
          type: string
        imported:
          type: string
        imported_from:
          type: string
          example: github
        service_desk_reply_to:
          type: string
        epic_iid:
          type: string
        epic:
          $ref: '#/components/schemas/EpicBaseEntity'
        iteration:
          $ref: '#/components/schemas/API_Entities_Iteration'
        health_status:
          type: string
        issue_link_id:
          type: string
        link_type:
          type: string
        link_created_at:
          type: string
        link_updated_at:
          type: string
      description: API_Entities_RelatedIssue model
    EpicBaseEntity:
      type: object
      properties:
        id:
          type: string
        iid:
          type: string
        title:
          type: string
        url:
          type: string
        group_id:
          type: string
        human_readable_end_date:
          type: string
        human_readable_timestamp:
          type: string
    API_Entities_Iteration:
      type: object
      properties:
        id:
          type: string
        iid:
          type: string
        sequence:
          type: string
        group_id:
          type: string
        title:
          type: string
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        start_date:
          type: string
        due_date:
          type: string
        web_url:
          type: string
    postApiV4ProjectsIdIssuesIssueIidLinks:
      required:
        - target_issue_iid
        - target_project_id
      type: object
      properties:
        target_project_id:
          type: string
          description: The ID or URL-encoded path of a target project
        target_issue_iid:
          type: string
          description: The internal ID of a target project’s issue
        link_type:
          type: string
          description: The type of the relation (“relates_to”, “blocks”, “is_blocked_by”),defaults to “relates_to”)
          enum:
            - relates_to
            - blocks
            - is_blocked_by
      description: Create an issue link
    API_Entities_IssueLink:
      type: object
      properties:
        source_issue:
          $ref: '#/components/schemas/API_Entities_IssueBasic'
        target_issue:
          $ref: '#/components/schemas/API_Entities_IssueBasic'
        link_type:
          type: string
      description: API_Entities_IssueLink model
    API_Entities_IssueBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 84
        iid:
          type: integer
          format: int32
          example: 14
        project_id:
          type: integer
          format: int32
          example: 4
        title:
          type: string
          example: Impedit et ut et dolores vero provident ullam est
        description:
          type: string
          example: Repellendus impedit et vel velit dignissimos.
        state:
          type: string
          example: closed
        created_at:
          type: string
          format: date-time
          example: "2022-08-17T12:46:35.053Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-11-14T17:22:01.47Z"
        closed_at:
          type: string
          format: date-time
          example: "2022-11-15T08:30:55.232Z"
        closed_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        labels:
          type: array
          items:
            type: string
            example: bug
        milestone:
          $ref: '#/components/schemas/API_Entities_Milestone'
        assignees:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        type:
          type: string
          description: One of ["ISSUE", "INCIDENT", "TEST_CASE", "REQUIREMENT", "TASK"]
          example: ISSUE
        assignee:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        user_notes_count:
          type: string
        merge_requests_count:
          type: string
        upvotes:
          type: string
        downvotes:
          type: string
        due_date:
          type: string
          format: date
          example: "2022-11-20"
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
          example: issue
        web_url:
          type: string
          example: http://example.com/example/example/issues/14
        time_stats:
          $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        task_completion_status:
          type: string
        weight:
          type: string
        blocking_issues_count:
          type: string
    API_Entities_Ci_Lint_Result:
      type: object
      properties:
        valid:
          type: boolean
        errors:
          type: array
          items:
            type: string
            example: variables config should be a hash of key value pairs
        warnings:
          type: array
          items:
            type: string
            example: jobs:job may allow multiple pipelines ...
        merged_yaml:
          type: string
          example: |-
            ---\n:another_test:\n  :stage: test\n
                      :script: echo 2\n:test:\n  :stage: test\n  :script: echo 1\n
        includes:
          type: array
          items:
            type: object
            properties: {}
            example: '{ "blob": "https://gitlab.com/root/example-project/-/blob/...'
        jobs:
          type: array
          items:
            type: object
            properties: {}
            example: '{ "name": "test: .... }'
      description: API_Entities_Ci_Lint_Result model
    postApiV4ProjectsIdCiLint:
      required:
        - content
      type: object
      properties:
        content:
          type: string
          description: Content of .gitlab-ci.yml
        dry_run:
          type: boolean
          description: Run pipeline creation simulation, or only do static check. This is false by default
          default: false
        include_jobs:
          type: boolean
          description: |-
            If the list of jobs that would exist in a static check or pipeline
                    simulation should be included in the response. This is false by default
        ref:
          type: string
          description: When dry_run is true, sets the branch or tag to use. Defaults to the project’s default branch when not set
      description: Validate a CI YAML configuration with a namespace
    putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize:
      required:
        - path
      type: object
      properties:
        path:
          type: string
          description: Package path
          example: foo/bar/mypkg/1.0-SNAPSHOT
      description: Workhorse authorize the maven package file upload
    putApiV4ProjectsIdPackagesMaven*pathFileName:
      required:
        - file
        - path
      type: object
      properties:
        path:
          type: string
          description: Package path
          example: foo/bar/mypkg/1.0-SNAPSHOT
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Upload the maven package file
    postApiV4ProjectsIdMembers:
      required:
        - access_level
      type: object
      properties:
        access_level:
          type: integer
          description: 'A valid access level (defaults: `30`, developer access level)'
          format: int32
        user_id:
          type: integer
          description: The user ID of the new member or multiple IDs separated by commas.
          format: int32
        username:
          type: string
          description: The username of the new member or multiple usernames separated by commas.
        expires_at:
          type: string
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
        invite_source:
          type: string
          description: Source that triggered the member creation process
          default: members-api
      description: Adds a member to a group or project.
    putApiV4ProjectsIdMembersUserId:
      required:
        - access_level
      type: object
      properties:
        access_level:
          type: integer
          description: A valid access level
          format: int32
        expires_at:
          type: string
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
        member_role_id:
          type: integer
          description: The ID of the Member Role to be updated
          format: int32
      description: Updates a member of a group or project.
    postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate:
      required:
        - duration
      type: object
      properties:
        duration:
          type: string
          description: The duration in human format.
          example: 3h30m
      description: Set a time estimate for a merge_request
    postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime:
      required:
        - duration
      type: object
      properties:
        duration:
          type: string
          description: The duration in human format.
      description: Add spent time for a merge_request
    postApiV4ProjectsIdMergeRequests:
      required:
        - source_branch
        - target_branch
        - title
      type: object
      properties:
        title:
          type: string
          description: The title of the merge request.
        source_branch:
          type: string
          description: The source branch.
        target_branch:
          type: string
          description: The target branch.
        target_project_id:
          type: integer
          description: The target project of the merge request defaults to the :id of the project.
          format: int32
        assignee_id:
          type: integer
          description: Assignee user ID.
          format: int32
        assignee_ids:
          type: array
          description: The IDs of the users to assign the merge request to, as a comma-separated list. Set to 0 or provide an empty value to unassign all assignees.
          items:
            type: integer
            format: int32
        reviewer_ids:
          type: array
          description: The IDs of the users to review the merge request, as a comma-separated list. Set to 0 or provide an empty value to unassign all reviewers.
          items:
            type: integer
            format: int32
        description:
          type: string
          description: Description of the merge request. Limited to 1,048,576 characters.
        labels:
          type: array
          description: Comma-separated label names for a merge request. Set to an empty string to unassign all labels.
          items:
            type: string
        add_labels:
          type: array
          description: Comma-separated label names to add to a merge request.
          items:
            type: string
        remove_labels:
          type: array
          description: Comma-separated label names to remove from a merge request.
          items:
            type: string
        milestone_id:
          type: integer
          description: The global ID of a milestone to assign the merge reques to.
          format: int32
        remove_source_branch:
          type: boolean
          description: Flag indicating if a merge request should remove the source branch when merging.
        allow_collaboration:
          type: boolean
          description: Allow commits from members who can merge to the target branch.
        allow_maintainer_to_push:
          type: boolean
          description: '[deprecated] See allow_collaboration'
        squash:
          type: boolean
          description: Squash commits into a single commit when merging.
        approvals_before_merge:
          type: integer
          description: Number of approvals required before this can be merged
          format: int32
      description: Create merge request
    API_Entities_MergeRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 84
        iid:
          type: integer
          format: int32
          example: 14
        project_id:
          type: integer
          format: int32
          example: 4
        title:
          type: string
          example: Impedit et ut et dolores vero provident ullam est
        description:
          type: string
          example: Repellendus impedit et vel velit dignissimos.
        state:
          type: string
          example: closed
        created_at:
          type: string
          format: date-time
          example: "2022-08-17T12:46:35.053Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-11-14T17:22:01.47Z"
        merged_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        merge_user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        merged_at:
          type: string
        closed_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        closed_at:
          type: string
        title_html:
          type: string
        description_html:
          type: string
        target_branch:
          type: string
        source_branch:
          type: string
        user_notes_count:
          type: string
        upvotes:
          type: string
        downvotes:
          type: string
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        assignees:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        assignee:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        reviewers:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        source_project_id:
          type: string
        target_project_id:
          type: string
        labels:
          type: string
        draft:
          type: string
        imported:
          type: string
        imported_from:
          type: string
          example: bitbucket
        work_in_progress:
          type: string
        milestone:
          $ref: '#/components/schemas/API_Entities_Milestone'
        merge_when_pipeline_succeeds:
          type: string
        merge_status:
          type: string
        detailed_merge_status:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: string
        force_remove_source_branch:
          type: string
        prepared_at:
          type: string
        allow_collaboration:
          type: string
        allow_maintainer_to_push:
          type: string
        reference:
          type: string
        references:
          $ref: '#/components/schemas/API_Entities_IssuableReferences'
        web_url:
          type: string
        time_stats:
          $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        squash:
          type: string
        squash_on_merge:
          type: string
        task_completion_status:
          type: string
        has_conflicts:
          type: string
        blocking_discussions_resolved:
          type: string
        approvals_before_merge:
          type: string
        subscribed:
          type: string
        changes_count:
          type: string
        latest_build_started_at:
          type: string
        latest_build_finished_at:
          type: string
        first_deployed_to_production_at:
          type: string
        pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        head_pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        diff_refs:
          $ref: '#/components/schemas/API_Entities_DiffRefs'
        merge_error:
          type: string
        rebase_in_progress:
          type: string
        diverged_commits_count:
          type: string
        first_contribution:
          type: string
        user:
          type: object
          properties:
            can_merge:
              type: string
      description: API_Entities_MergeRequest model
    API_Entities_DiffRefs:
      type: object
      properties:
        base_sha:
          type: string
        head_sha:
          type: string
        start_sha:
          type: string
    API_Entities_MergeRequestReviewer:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        state:
          type: string
        created_at:
          type: string
      description: API_Entities_MergeRequestReviewer model
    postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits:
      required:
        - commits
      type: object
      properties:
        commits:
          type: array
          description: The context commits’ SHA.
          items:
            type: string
      description: Create merge request context commits
    API_Entities_MergeRequestChanges:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 84
        iid:
          type: integer
          format: int32
          example: 14
        project_id:
          type: integer
          format: int32
          example: 4
        title:
          type: string
          example: Impedit et ut et dolores vero provident ullam est
        description:
          type: string
          example: Repellendus impedit et vel velit dignissimos.
        state:
          type: string
          example: closed
        created_at:
          type: string
          format: date-time
          example: "2022-08-17T12:46:35.053Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-11-14T17:22:01.47Z"
        merged_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        merge_user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        merged_at:
          type: string
        closed_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        closed_at:
          type: string
        title_html:
          type: string
        description_html:
          type: string
        target_branch:
          type: string
        source_branch:
          type: string
        user_notes_count:
          type: string
        upvotes:
          type: string
        downvotes:
          type: string
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        assignees:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        assignee:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        reviewers:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        source_project_id:
          type: string
        target_project_id:
          type: string
        labels:
          type: string
        draft:
          type: string
        imported:
          type: string
        imported_from:
          type: string
          example: bitbucket
        work_in_progress:
          type: string
        milestone:
          $ref: '#/components/schemas/API_Entities_Milestone'
        merge_when_pipeline_succeeds:
          type: string
        merge_status:
          type: string
        detailed_merge_status:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: string
        force_remove_source_branch:
          type: string
        prepared_at:
          type: string
        allow_collaboration:
          type: string
        allow_maintainer_to_push:
          type: string
        reference:
          type: string
        references:
          $ref: '#/components/schemas/API_Entities_IssuableReferences'
        web_url:
          type: string
        time_stats:
          $ref: '#/components/schemas/API_Entities_IssuableTimeStats'
        squash:
          type: string
        squash_on_merge:
          type: string
        task_completion_status:
          type: string
        has_conflicts:
          type: string
        blocking_discussions_resolved:
          type: string
        approvals_before_merge:
          type: string
        subscribed:
          type: string
        changes_count:
          type: string
        latest_build_started_at:
          type: string
        latest_build_finished_at:
          type: string
        first_deployed_to_production_at:
          type: string
        pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        head_pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_Pipeline'
        diff_refs:
          $ref: '#/components/schemas/API_Entities_DiffRefs'
        merge_error:
          type: string
        rebase_in_progress:
          type: string
        diverged_commits_count:
          type: string
        first_contribution:
          type: string
        user:
          type: object
          properties:
            can_merge:
              type: string
        changes:
          $ref: '#/components/schemas/API_Entities_Diff'
        overflow:
          type: string
      description: API_Entities_MergeRequestChanges model
    putApiV4ProjectsIdMergeRequestsMergeRequestIid:
      type: object
      properties:
        title:
          type: string
          description: The title of the merge request.
        target_branch:
          type: string
          description: The target branch.
        state_event:
          type: string
          description: New state (close/reopen).
          enum:
            - close
            - reopen
        discussion_locked:
          type: boolean
          description: Flag indicating if the merge request’s discussion is locked. If the discussion is locked only project members can add, edit or resolve comments.
        assignee_id:
          type: integer
          description: Assignee user ID.
          format: int32
        assignee_ids:
          type: array
          description: The IDs of the users to assign the merge request to, as a comma-separated list. Set to 0 or provide an empty value to unassign all assignees.
          items:
            type: integer
            format: int32
        reviewer_ids:
          type: array
          description: The IDs of the users to review the merge request, as a comma-separated list. Set to 0 or provide an empty value to unassign all reviewers.
          items:
            type: integer
            format: int32
        description:
          type: string
          description: Description of the merge request. Limited to 1,048,576 characters.
        labels:
          type: array
          description: Comma-separated label names for a merge request. Set to an empty string to unassign all labels.
          items:
            type: string
        add_labels:
          type: array
          description: Comma-separated label names to add to a merge request.
          items:
            type: string
        remove_labels:
          type: array
          description: Comma-separated label names to remove from a merge request.
          items:
            type: string
        milestone_id:
          type: integer
          description: The global ID of a milestone to assign the merge reques to.
          format: int32
        remove_source_branch:
          type: boolean
          description: Flag indicating if a merge request should remove the source branch when merging.
        allow_collaboration:
          type: boolean
          description: Allow commits from members who can merge to the target branch.
        allow_maintainer_to_push:
          type: boolean
          description: '[deprecated] See allow_collaboration'
        squash:
          type: boolean
          description: Squash commits into a single commit when merging.
        approvals_before_merge:
          type: integer
          description: Number of approvals required before this can be merged
          format: int32
      description: Update merge request
    putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge:
      type: object
      properties:
        merge_commit_message:
          type: string
          description: Custom merge commit message.
        squash_commit_message:
          type: string
          description: Custom squash commit message.
        should_remove_source_branch:
          type: boolean
          description: If `true`, removes the source branch.
        merge_when_pipeline_succeeds:
          type: boolean
          description: If `true`, the merge request is merged when the pipeline succeeds.
        sha:
          type: string
          description: If present, then this SHA must match the HEAD of the source branch, otherwise the merge fails.
        squash:
          type: boolean
          description: If `true`, the commits are squashed into a single commit on merge.
        skip_merge_train:
          type: boolean
          description: If `true` skips train restart when merging immediately in a merge train configured project.
      description: Merge a merge request
    putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase:
      type: object
      properties:
        skip_ci:
          type: boolean
          description: Set to true to skip creating a CI pipeline.
      description: Rebase a merge request
    API_Entities_MRNote:
      type: object
      properties:
        note:
          type: string
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
      description: API_Entities_MRNote model
    API_Entities_MergeRequestDiff:
      type: object
      properties:
        id:
          type: string
        head_commit_sha:
          type: string
        base_commit_sha:
          type: string
        start_commit_sha:
          type: string
        created_at:
          type: string
        merge_request_id:
          type: string
        state:
          type: string
        real_size:
          type: string
        patch_id_sha:
          type: string
      description: API_Entities_MergeRequestDiff model
    API_Entities_MergeRequestDiffFull:
      type: object
      properties:
        id:
          type: string
        head_commit_sha:
          type: string
        base_commit_sha:
          type: string
        start_commit_sha:
          type: string
        created_at:
          type: string
        merge_request_id:
          type: string
        state:
          type: string
        real_size:
          type: string
        patch_id_sha:
          type: string
        commits:
          $ref: '#/components/schemas/API_Entities_Commit'
        diffs:
          $ref: '#/components/schemas/API_Entities_Diff'
      description: API_Entities_MergeRequestDiffFull model
    API_Entities_PackageFile:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 225
        package_id:
          type: integer
          format: int32
          example: 4
        created_at:
          type: string
          format: date-time
          example: "2018-11-07T15:25:52.199Z"
        file_name:
          type: string
          example: my-app-1.5-20181107.152550-1.jar
        size:
          type: integer
          format: int32
          example: 2421
        file_md5:
          type: string
          example: 58e6a45a629910c6ff99145a688971ac
        file_sha1:
          type: string
          example: ebd193463d3915d7e22219f52740056dfd26cbfe
        file_sha256:
          type: string
          example: a903393463d3915d7e22219f52740056dfd26cbfeff321b
        pipelines:
          $ref: '#/components/schemas/API_Entities_Package_Pipeline'
      description: API_Entities_PackageFile model
    patchApiV4ProjectsIdPages:
      type: object
      properties:
        pages_unique_domain_enabled:
          type: boolean
          description: Whether to use unique domain
        pages_https_only:
          type: boolean
          description: Whether to force HTTPS
      description: Update pages settings
    API_Entities_PagesDomain:
      type: object
      properties:
        domain:
          type: string
        url:
          type: string
        verified:
          type: string
        verification_code:
          type: string
        enabled_until:
          type: string
        auto_ssl_enabled:
          type: string
        certificate:
          $ref: '#/components/schemas/API_Entities_PagesDomainCertificate'
      description: API_Entities_PagesDomain model
    API_Entities_PagesDomainCertificate:
      type: object
      properties:
        subject:
          type: string
        expired:
          type: string
        certificate:
          type: string
        certificate_text:
          type: string
    postApiV4ProjectsIdPagesDomains:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
          description: The domain
        certificate:
          type: file
          description: The certificate
          format: binary
        key:
          type: file
          description: The key
          format: binary
        auto_ssl_enabled:
          type: boolean
          description: Enables automatic generation of SSL certificates issued by Let's Encrypt for custom domains.
          default: false
        user_provided_certificate:
          type: string
        user_provided_key:
          type: string
      description: Create a new pages domain
    putApiV4ProjectsIdPagesDomainsDomain:
      type: object
      properties:
        certificate:
          type: file
          description: The certificate
          format: binary
        key:
          type: file
          description: The key
          format: binary
        auto_ssl_enabled:
          type: boolean
          description: Enables automatic generation of SSL certificates issued by Let's Encrypt for custom domains.
      description: Updates a pages domain
    API_Entities_ClusterProject:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
        domain:
          type: string
        enabled:
          type: string
        managed:
          type: string
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        namespace_per_environment:
          type: string
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        platform_kubernetes:
          $ref: '#/components/schemas/API_Entities_Platform_Kubernetes'
        provider_gcp:
          $ref: '#/components/schemas/API_Entities_Provider_Gcp'
        management_project:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
        project:
          $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
      description: API_Entities_ClusterProject model
    postApiV4ProjectsIdClustersUser:
      required:
        - name
        - platform_kubernetes_attributes
      type: object
      properties:
        name:
          type: string
          description: Cluster name
        enabled:
          type: boolean
          description: Determines if cluster is active or not, defaults to true
          default: true
        domain:
          type: string
          description: Cluster base domain
        environment_scope:
          type: string
          description: The associated environment to the cluster
          default: '*'
        namespace_per_environment:
          type: boolean
          description: Deploy each environment to a separate Kubernetes namespace
          default: true
        management_project_id:
          type: integer
          description: The ID of the management project
          format: int32
        managed:
          type: boolean
          description: Determines if GitLab will manage namespaces and service accounts for this cluster, defaults to true
          default: true
        platform_kubernetes_attributes:
          required:
            - api_url
            - token
          type: object
          properties:
            api_url:
              type: string
              description: URL to access the Kubernetes API
            token:
              type: string
              description: Token to authenticate against Kubernetes
            ca_cert:
              type: string
              description: TLS certificate (needed if API is using a self-signed TLS certificate)
            namespace:
              type: string
              description: Unique namespace related to Project
            authorization_type:
              type: string
              description: Cluster authorization type, defaults to RBAC
              default: rbac
              enum:
                - unknown_authorization
                - rbac
                - abac
          description: Platform Kubernetes data
      description: Add existing cluster to project
    putApiV4ProjectsIdClustersClusterId:
      type: object
      properties:
        name:
          type: string
          description: Cluster name
        domain:
          type: string
          description: Cluster base domain
        environment_scope:
          type: string
          description: The associated environment to the cluster
        namespace_per_environment:
          type: boolean
          description: Deploy each environment to a separate Kubernetes namespace
          default: true
        management_project_id:
          type: integer
          description: The ID of the management project
          format: int32
        enabled:
          type: boolean
          description: Determines if cluster is active or not
        managed:
          type: boolean
          description: Determines if GitLab will manage namespaces and service accounts for this cluster
        platform_kubernetes_attributes:
          type: object
          properties:
            api_url:
              type: string
              description: URL to access the Kubernetes API
            token:
              type: string
              description: Token to authenticate against Kubernetes
            ca_cert:
              type: string
              description: TLS certificate (needed if API is using a self-signed TLS certificate)
            namespace:
              type: string
              description: Unique namespace related to Project
          description: Platform Kubernetes data
      description: Edit project cluster
    API_Entities_ContainerRegistry_TagDetails:
      type: object
      properties:
        name:
          type: string
          example: latest
        path:
          type: string
          example: namespace1/project1/test_image_1:latest
        location:
          type: string
          example: registry.dev/namespace1/project1/test_image_1:latest
        revision:
          type: string
          example: tagrevision
        short_revision:
          type: string
          example: shortrevison
        digest:
          type: string
          example: shadigest
        created_at:
          type: string
          format: date-time
          example: "2022-01-10T13:39:08.229Z"
        total_size:
          type: integer
          format: int32
          example: 3
      description: API_Entities_ContainerRegistry_TagDetails model
    API_Entities_Event:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        project_id:
          type: integer
          format: int32
          example: 2
        action_name:
          type: string
          example: closed
        target_id:
          type: integer
          format: int32
          example: 160
        target_iid:
          type: integer
          format: int32
          example: 157
        target_type:
          type: string
          example: Issue
        author_id:
          type: integer
          format: int32
          example: 25
        target_title:
          type: string
          example: Public project search field
        created_at:
          type: string
          example: "2017-02-09T10:43:19.667Z"
        note:
          $ref: '#/components/schemas/API_Entities_Note'
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        wiki_page:
          $ref: '#/components/schemas/API_Entities_WikiPageBasic'
        imported:
          type: boolean
          example: false
        imported_from:
          type: string
          example: none
        push_data:
          $ref: '#/components/schemas/API_Entities_PushEventPayload'
        author_username:
          type: string
          example: root
      description: API_Entities_Event model
    API_Entities_Note:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        body:
          type: string
        attachment:
          type: string
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
        updated_at:
          type: string
        system:
          type: string
        noteable_id:
          type: string
        noteable_type:
          type: string
        project_id:
          type: string
        commit_id:
          type: string
        position:
          type: string
        resolvable:
          type: string
        resolved:
          type: string
        resolved_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        resolved_at:
          type: string
        confidential:
          type: string
        internal:
          type: string
        imported:
          type: string
        imported_from:
          type: string
          example: github
        noteable_iid:
          type: string
        commands_changes:
          type: string
    API_Entities_PushEventPayload:
      type: object
      properties:
        commit_count:
          type: integer
          format: int32
          example: 1
        action:
          type: string
          example: pushed
        ref_type:
          type: string
          example: branch
        commit_from:
          type: string
          example: 50d4420237a9de7be1304607147aec22e4a14af7
        commit_to:
          type: string
          example: c5feabde2d8cd023215af4d2ceeb7a64839fc428
        ref:
          type: string
          example: master
        commit_title:
          type: string
          example: Add simple search to projects in public area
        ref_count:
          type: integer
          format: int32
          example: 1
    API_Entities_ProjectExportStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: desc
        name:
          type: string
          example: project1
        name_with_namespace:
          type: string
          example: John Doe / project1
        path:
          type: string
          example: project1
        path_with_namespace:
          type: string
          example: namespace1/project1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        export_status:
          type: string
          example: finished
          enum:
            - queued
            - started
            - finished
            - failed
        _links:
          type: object
          properties:
            api_url:
              type: string
              example: https://gitlab.example.com/api/v4/projects/1/export/download
            web_url:
              type: string
              example: https://gitlab.example.com/gitlab-org/gitlab-test/download_export
      description: API_Entities_ProjectExportStatus model
    postApiV4ProjectsIdExport:
      type: object
      properties:
        description:
          type: string
          description: Override the project description
        upload:
          type: object
          properties:
            url:
              type: string
              description: The URL to upload the project
            http_method:
              type: string
              description: HTTP method to upload the exported project
              default: PUT
              enum:
                - PUT
                - POST
      description: Start export
    postApiV4ProjectsIdExportRelations:
      type: object
      properties:
        batched:
          type: boolean
          description: Whether to export in batches
      description: Start relations export
    API_Entities_ProjectHook:
      type: object
      properties:
        id:
          type: string
          example: "1"
        url:
          type: string
          example: https://webhook.site
        name:
          type: string
          example: Hook name
        description:
          type: string
          example: Hook description
        created_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        push_events:
          type: boolean
        tag_push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        repository_update_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
        disabled_until:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        url_variables:
          type: array
          items:
            type: object
            properties: {}
            example:
              token: secr3t
        custom_webhook_template:
          type: string
          example: '{"event":"{{object_kind}}"}'
        project_id:
          type: string
          example: "1"
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        deployment_events:
          type: boolean
        job_events:
          type: boolean
        releases_events:
          type: boolean
        push_events_branch_filter:
          type: string
          example: my-branch-*
        emoji_events:
          type: boolean
        resource_access_token_events:
          type: boolean
      description: API_Entities_ProjectHook model
    postApiV4ProjectsIdHooks:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          description: The URL to send the request to
          example: http://example.com/hook
        name:
          type: string
          description: Name of the hook
        description:
          type: string
          description: Description of the hook
        push_events:
          type: boolean
          description: Trigger hook on push events
        issues_events:
          type: boolean
          description: Trigger hook on issues events
        confidential_issues_events:
          type: boolean
          description: Trigger hook on confidential issues events
        merge_requests_events:
          type: boolean
          description: Trigger hook on merge request events
        tag_push_events:
          type: boolean
          description: Trigger hook on tag push events
        note_events:
          type: boolean
          description: Trigger hook on note (comment) events
        confidential_note_events:
          type: boolean
          description: Trigger hook on confidential note (comment) events
        job_events:
          type: boolean
          description: Trigger hook on job events
        pipeline_events:
          type: boolean
          description: Trigger hook on pipeline events
        wiki_page_events:
          type: boolean
          description: Trigger hook on wiki events
        deployment_events:
          type: boolean
          description: Trigger hook on deployment events
        releases_events:
          type: boolean
          description: Trigger hook on release events
        emoji_events:
          type: boolean
          description: Trigger hook on emoji events
        resource_access_token_events:
          type: boolean
          description: Trigger hook on project access token expiry events
        enable_ssl_verification:
          type: boolean
          description: Do SSL verification when triggering the hook
        token:
          type: string
          description: Secret token to validate received payloads; this will not be returned in the response
        push_events_branch_filter:
          type: string
          description: Trigger hook on specified branch only
        custom_webhook_template:
          type: string
          description: Custom template for the request payload
        url_variables:
          type: array
          description: URL variables for interpolation
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: Name of the variable
                example: token
              value:
                type: string
                description: Value of the variable
                example: "123"
      description: Add project hook
    putApiV4ProjectsIdHooksHookId:
      type: object
      properties:
        url:
          type: string
          description: The URL to send the request to
        name:
          type: string
          description: Name of the hook
        description:
          type: string
          description: Description of the hook
        push_events:
          type: boolean
          description: Trigger hook on push events
        issues_events:
          type: boolean
          description: Trigger hook on issues events
        confidential_issues_events:
          type: boolean
          description: Trigger hook on confidential issues events
        merge_requests_events:
          type: boolean
          description: Trigger hook on merge request events
        tag_push_events:
          type: boolean
          description: Trigger hook on tag push events
        note_events:
          type: boolean
          description: Trigger hook on note (comment) events
        confidential_note_events:
          type: boolean
          description: Trigger hook on confidential note (comment) events
        job_events:
          type: boolean
          description: Trigger hook on job events
        pipeline_events:
          type: boolean
          description: Trigger hook on pipeline events
        wiki_page_events:
          type: boolean
          description: Trigger hook on wiki events
        deployment_events:
          type: boolean
          description: Trigger hook on deployment events
        releases_events:
          type: boolean
          description: Trigger hook on release events
        emoji_events:
          type: boolean
          description: Trigger hook on emoji events
        resource_access_token_events:
          type: boolean
          description: Trigger hook on project access token expiry events
        enable_ssl_verification:
          type: boolean
          description: Do SSL verification when triggering the hook
        token:
          type: string
          description: Secret token to validate received payloads; this will not be returned in the response
        push_events_branch_filter:
          type: string
          description: Trigger hook on specified branch only
        custom_webhook_template:
          type: string
          description: Custom template for the request payload
        url_variables:
          type: array
          description: URL variables for interpolation
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: Name of the variable
                example: token
              value:
                type: string
                description: Value of the variable
                example: "123"
      description: Edit project hook
    API_Entities_ProjectImportStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: desc
        name:
          type: string
          example: project1
        name_with_namespace:
          type: string
          example: John Doe / project1
        path:
          type: string
          example: project1
        path_with_namespace:
          type: string
          example: namespace1/project1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        import_status:
          type: string
          example: scheduled
        import_type:
          type: string
          example: gitlab_project
        correlation_id:
          type: string
          example: dfcf583058ed4508e4c7c617bd7f0edd
        failed_relations:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_ProjectImportFailedRelation'
        import_error:
          type: string
          example: Error message
        stats:
          type: object
          properties: {}
      description: API_Entities_ProjectImportStatus model
    API_Entities_ProjectImportFailedRelation:
      type: object
      properties:
        id:
          type: string
          example: "1"
        created_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        exception_class:
          type: string
          example: StandardError
        source:
          type: string
          example: ImportRepositoryWorker
        exception_message:
          type: string
        relation_name:
          type: string
          example: issues
        line_number:
          type: integer
          format: int32
          example: 1
    API_Entities_RelationImportTracker:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        project_path:
          type: string
          example: namespace1/project1
        relation:
          type: string
          example: issues
        status:
          type: string
          example: pending
        created_at:
          type: string
          format: date-time
          example: "2022-01-31T15:10:45.08Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-01-31T15:10:45.08Z"
      description: API_Entities_RelationImportTracker model
    API_Entities_ProjectJobTokenScope:
      type: object
      properties:
        inbound_enabled:
          type: boolean
        outbound_enabled:
          type: boolean
      description: API_Entities_ProjectJobTokenScope model
    patchApiV4ProjectsIdJobTokenScope:
      required:
        - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates CI/CD job tokens generated in other projects have restricted access to this project.
      description: Patch CI_JOB_TOKEN access settings.
    postApiV4ProjectsIdJobTokenScopeAllowlist:
      required:
        - target_project_id
      type: object
      properties:
        target_project_id:
          type: integer
          description: ID of target project
          format: int32
          example: 2
      description: Add target project to allowlist.
    postApiV4ProjectsIdJobTokenScopeGroupsAllowlist:
      required:
        - target_group_id
      type: object
      properties:
        target_group_id:
          type: integer
          description: ID of target group
          format: int32
          example: 2
      description: Add target group to allowlist.
    API_Entities_Projects_RepositoryStorageMove:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.234Z"
        state:
          type: string
          example: scheduled
        source_storage_name:
          type: string
          example: default
        destination_storage_name:
          type: string
          example: storage1
        error_message:
          type: string
          example: Failed to move repository
        project:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
      description: API_Entities_Projects_RepositoryStorageMove model
    postApiV4ProjectsIdRepositoryStorageMoves:
      type: object
      properties:
        destination_storage_name:
          type: string
          description: The destination storage shard
      description: Schedule a project repository storage move
    API_Entities_ProjectSnippet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: test
        description:
          type: string
          example: Ruby test snippet
        visibility:
          type: string
          example: public
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        updated_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        project_id:
          type: integer
          format: int32
          example: 1
        web_url:
          type: string
          example: http://example.com/example/example/snippets/1
        raw_url:
          type: string
          example: http://example.com/example/example/snippets/1/raw
        ssh_url_to_repo:
          type: string
          example: ssh://user@gitlab.example.com/snippets/65.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/snippets/65.git
        file_name:
          type: string
          example: add.rb
        files:
          type: array
          items:
            type: string
            example: e0d123e5f316bef78bfdf5a008837577
        imported:
          type: boolean
          example: false
        imported_from:
          type: string
          example: none
        repository_storage:
          type: string
      description: API_Entities_ProjectSnippet model
    postApiV4ProjectsIdSnippets:
      required:
        - file_name
        - title
        - visibility
      type: object
      properties:
        title:
          type: string
          description: The title of the snippet
        description:
          type: string
          description: The description of a snippet
        visibility:
          type: string
          description: The visibility of the snippet
          enum:
            - private
            - internal
            - public
        files:
          type: array
          description: An array of files
          items:
            required:
              - content
              - file_path
            type: object
            properties:
              file_path:
                type: string
                description: The path of a snippet file
              content:
                type: string
                description: The content of a snippet file
        content:
          type: string
          description: The content of a snippet
        file_name:
          type: string
          description: The name of a snippet file
      description: Create a new project snippet
    putApiV4ProjectsIdSnippetsSnippetId:
      type: object
      properties:
        content:
          type: string
          description: The content of the snippet
        description:
          type: string
          description: The description of a snippet
        file_name:
          type: string
          description: The file name of the snippet
        title:
          type: string
          description: The title of the snippet
        visibility:
          type: string
          description: The visibility of the snippet
          enum:
            - private
            - internal
            - public
        files:
          type: array
          description: An array of files to update
          items:
            required:
              - action
            type: object
            properties:
              action:
                type: string
                description: 'The type of action to perform on the file, must be one of: create, update, delete, move'
                enum:
                  - create
                  - update
                  - delete
                  - move
              content:
                type: string
                description: The content of a snippet
              file_path:
                type: string
                description: The file path of a snippet file
              previous_path:
                type: string
                description: The previous path of a snippet file
      description: Update an existing project snippet
    API_Entities_UserAgentDetail:
      type: object
      properties:
        user_agent:
          type: string
          example: AppleWebKit/537.36
        ip_address:
          type: string
          example: 127.0.0.1
        akismet_submitted:
          type: boolean
          example: false
      description: API_Entities_UserAgentDetail model
    API_Entities_ProjectDailyStatistics:
      type: object
      properties:
        fetches:
          type: object
          properties:
            total:
              type: integer
              format: int32
              example: 3
            days:
              type: array
              items:
                $ref: '#/components/schemas/API_Entities_ProjectDailyFetches'
      description: API_Entities_ProjectDailyStatistics model
    API_Entities_ProjectDailyFetches:
      type: object
      properties:
        count:
          type: integer
          format: int32
          example: 3
        date:
          type: string
          format: date
          example: "2022-01-01"
    API_Entities_TemplatesList:
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
      description: API_Entities_TemplatesList model
    API_Entities_License:
      type: object
      properties:
        key:
          type: string
          example: gpl-3.0
        name:
          type: string
          example: GNU General Public License v3.0
        nickname:
          type: string
          example: GNU GPLv3
        html_url:
          type: string
          example: http://choosealicense.com/licenses/gpl-3.0
        source_url:
          type: string
        popular:
          type: boolean
        description:
          type: string
          example: A simple license
        conditions:
          type: array
          items:
            type: string
            example: include-copyright
        permissions:
          type: array
          items:
            type: string
            example: commercial-use
        limitations:
          type: array
          items:
            type: string
            example: liability
        content:
          type: string
          example: GNU GENERAL PUBLIC LICENSE
      description: API_Entities_License model
    putApiV4ProjectsIdCustomAttributesKey:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the custom attribute
      description: Set a custom attribute on a project
    postApiV4Projects:
      type: object
      properties:
        name:
          type: string
          description: The name of the project
          example: New Project
        path:
          type: string
          description: The path of the repository
          example: new_project
        default_branch:
          type: string
          description: The default branch of the project
          example: main
        description:
          type: string
          description: The description of the project
        build_git_strategy:
          type: string
          description: The Git strategy. Defaults to `fetch`
          enum:
            - fetch
            - clone
        build_timeout:
          type: integer
          description: Build timeout
          format: int32
        auto_cancel_pending_pipelines:
          type: string
          description: Auto-cancel pending pipelines
          enum:
            - disabled
            - enabled
        ci_config_path:
          type: string
          description: The path to CI config file. Defaults to `.gitlab-ci.yml`
        service_desk_enabled:
          type: boolean
          description: Disable or enable the service desk
        issues_enabled:
          type: boolean
          description: Flag indication if the issue tracker is enabled
        merge_requests_enabled:
          type: boolean
          description: Flag indication if merge requests are enabled
        wiki_enabled:
          type: boolean
          description: Flag indication if the wiki is enabled
        jobs_enabled:
          type: boolean
          description: Flag indication if jobs are enabled
        snippets_enabled:
          type: boolean
          description: Flag indication if snippets are enabled
        issues_access_level:
          type: string
          description: Issues access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        repository_access_level:
          type: string
          description: Repository access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        merge_requests_access_level:
          type: string
          description: Merge requests access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        forking_access_level:
          type: string
          description: Forks access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        wiki_access_level:
          type: string
          description: Wiki access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        builds_access_level:
          type: string
          description: Builds access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        snippets_access_level:
          type: string
          description: Snippets access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        pages_access_level:
          type: string
          description: Pages access level. One of `disabled`, `private`, `enabled` or `public`
          enum:
            - disabled
            - private
            - enabled
            - public
        analytics_access_level:
          type: string
          description: Analytics access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        container_registry_access_level:
          type: string
          description: Controls visibility of the container registry. One of `disabled`, `private` or `enabled`. `private` will make the container registry accessible only to project members (reporter role and above). `enabled` will make the container registry accessible to everyone who has access to the project. `disabled` will disable the container registry
          enum:
            - disabled
            - private
            - enabled
        security_and_compliance_access_level:
          type: string
          description: Security and compliance access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        releases_access_level:
          type: string
          description: Releases access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        environments_access_level:
          type: string
          description: Environments access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        feature_flags_access_level:
          type: string
          description: Feature flags access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        infrastructure_access_level:
          type: string
          description: Infrastructure access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        monitor_access_level:
          type: string
          description: Monitor access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        model_experiments_access_level:
          type: string
          description: Model experiments access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        model_registry_access_level:
          type: string
          description: Model registry access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        emails_disabled:
          type: boolean
          description: 'Deprecated: Use emails_enabled instead.'
        emails_enabled:
          type: boolean
          description: Enable email notifications
        show_default_award_emojis:
          type: boolean
          description: Show default award emojis
        show_diff_preview_in_email:
          type: boolean
          description: Include the code diff preview in merge request notification emails
        warn_about_potentially_unwanted_characters:
          type: boolean
          description: Warn about potentially unwanted characters
        enforce_auth_checks_on_uploads:
          type: boolean
          description: Enforce auth check on uploads
        shared_runners_enabled:
          type: boolean
          description: Flag indication if shared runners are enabled for that project
        group_runners_enabled:
          type: boolean
          description: Flag indication if group runners are enabled for that project
        resolve_outdated_diff_discussions:
          type: boolean
          description: Automatically resolve merge request diff threads on lines changed with a push
        remove_source_branch_after_merge:
          type: boolean
          description: Remove the source branch by default after merge
        container_registry_enabled:
          type: boolean
          description: 'Deprecated: Use :container_registry_access_level instead. Flag indication if the container registry is enabled for that project'
        container_expiration_policy_attributes:
          type: object
          properties:
            cadence:
              type: string
              description: Container expiration policy cadence for recurring job
            keep_n:
              type: integer
              description: Container expiration policy number of images to keep
              format: int32
            older_than:
              type: string
              description: Container expiration policy remove images older than value
            name_regex:
              type: string
              description: Container expiration policy regex for image removal
            name_regex_keep:
              type: string
              description: Container expiration policy regex for image retention
            enabled:
              type: boolean
              description: Flag indication if container expiration policy is enabled
        lfs_enabled:
          type: boolean
          description: Flag indication if Git LFS is enabled for that project
        visibility:
          type: string
          description: The visibility of the project.
          enum:
            - private
            - internal
            - public
        public_builds:
          type: boolean
          description: 'Deprecated: Use public_jobs instead.'
        public_jobs:
          type: boolean
          description: Perform public builds
        request_access_enabled:
          type: boolean
          description: Allow users to request member access
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
          description: Only allow to merge if builds succeed
        allow_merge_on_skipped_pipeline:
          type: boolean
          description: Allow to merge if pipeline is skipped
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
          description: Only allow to merge if all threads are resolved
        tag_list:
          type: array
          description: 'Deprecated: Use :topics instead'
          items:
            type: string
        topics:
          type: array
          description: The list of topics for a project
          items:
            type: string
        avatar:
          type: file
          description: Avatar image for project
          format: binary
        printing_merge_request_link_enabled:
          type: boolean
          description: Show link to create/view merge request when pushing from the command line
        merge_method:
          type: string
          description: The merge method used when merging merge requests
          enum:
            - ff
            - rebase_merge
            - merge
        suggestion_commit_message:
          type: string
          description: The commit message used to apply merge request suggestions
        merge_commit_template:
          type: string
          description: Template used to create merge commit message
        squash_commit_template:
          type: string
          description: Template used to create squash commit message
        issue_branch_template:
          type: string
          description: Template used to create a branch from an issue
        initialize_with_readme:
          type: boolean
          description: Initialize a project with a README.md
        auto_devops_enabled:
          type: boolean
          description: Flag indication if Auto DevOps is enabled
        auto_devops_deploy_strategy:
          type: string
          description: Auto Deploy strategy
          enum:
            - continuous
            - manual
            - timed_incremental
        autoclose_referenced_issues:
          type: boolean
          description: Flag indication if referenced issues auto-closing is enabled
        repository_storage:
          type: string
          description: Which storage shard the repository is on. Available only to admins
        packages_enabled:
          type: boolean
          description: Enable project packages feature
        squash_option:
          type: string
          description: Squash default for project. One of `never`, `always`, `default_on`, or `default_off`.
          enum:
            - never
            - always
            - default_on
            - default_off
        mr_default_target_self:
          type: boolean
          description: Merge requests of this forked project targets itself by default
        only_allow_merge_if_all_status_checks_passed:
          type: boolean
          description: Blocks merge requests from merging unless all status checks have passed
        approvals_before_merge:
          type: integer
          description: How many approvers should approve merge request by default
          format: int32
        mirror:
          type: boolean
          description: Enables pull mirroring in a project
        mirror_trigger_builds:
          type: boolean
          description: Pull mirroring triggers builds
        external_authorization_classification_label:
          type: string
          description: The classification label for the project
        requirements_access_level:
          type: string
          description: Requirements feature access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        prevent_merge_without_jira_issue:
          type: boolean
          description: Require an associated issue from Jira
        repository_object_format:
          type: string
          description: The object format of the project repository
          enum:
            - sha1
            - sha256
        use_custom_template:
          type: boolean
          description: Use custom template
        group_with_project_templates_id:
          type: integer
          description: Group ID that serves as the template source
          format: int32
        namespace_id:
          type: integer
          description: Namespace ID for the new project. Default to the user namespace.
          format: int32
        import_url:
          type: string
          description: URL from which the project is imported
        template_name:
          type: string
          description: Name of template from which to create project
        template_project_id:
          type: integer
          description: Project ID of template from which to create project
          format: int32
      description: Create new project
    postApiV4ProjectsUserUserId:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the project
          example: New Project
        path:
          type: string
          description: The path of the repository
          example: new_project
        default_branch:
          type: string
          description: The default branch of the project
          example: main
        description:
          type: string
          description: The description of the project
        build_git_strategy:
          type: string
          description: The Git strategy. Defaults to `fetch`
          enum:
            - fetch
            - clone
        build_timeout:
          type: integer
          description: Build timeout
          format: int32
        auto_cancel_pending_pipelines:
          type: string
          description: Auto-cancel pending pipelines
          enum:
            - disabled
            - enabled
        ci_config_path:
          type: string
          description: The path to CI config file. Defaults to `.gitlab-ci.yml`
        service_desk_enabled:
          type: boolean
          description: Disable or enable the service desk
        issues_enabled:
          type: boolean
          description: Flag indication if the issue tracker is enabled
        merge_requests_enabled:
          type: boolean
          description: Flag indication if merge requests are enabled
        wiki_enabled:
          type: boolean
          description: Flag indication if the wiki is enabled
        jobs_enabled:
          type: boolean
          description: Flag indication if jobs are enabled
        snippets_enabled:
          type: boolean
          description: Flag indication if snippets are enabled
        issues_access_level:
          type: string
          description: Issues access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        repository_access_level:
          type: string
          description: Repository access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        merge_requests_access_level:
          type: string
          description: Merge requests access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        forking_access_level:
          type: string
          description: Forks access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        wiki_access_level:
          type: string
          description: Wiki access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        builds_access_level:
          type: string
          description: Builds access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        snippets_access_level:
          type: string
          description: Snippets access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        pages_access_level:
          type: string
          description: Pages access level. One of `disabled`, `private`, `enabled` or `public`
          enum:
            - disabled
            - private
            - enabled
            - public
        analytics_access_level:
          type: string
          description: Analytics access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        container_registry_access_level:
          type: string
          description: Controls visibility of the container registry. One of `disabled`, `private` or `enabled`. `private` will make the container registry accessible only to project members (reporter role and above). `enabled` will make the container registry accessible to everyone who has access to the project. `disabled` will disable the container registry
          enum:
            - disabled
            - private
            - enabled
        security_and_compliance_access_level:
          type: string
          description: Security and compliance access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        releases_access_level:
          type: string
          description: Releases access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        environments_access_level:
          type: string
          description: Environments access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        feature_flags_access_level:
          type: string
          description: Feature flags access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        infrastructure_access_level:
          type: string
          description: Infrastructure access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        monitor_access_level:
          type: string
          description: Monitor access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        model_experiments_access_level:
          type: string
          description: Model experiments access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        model_registry_access_level:
          type: string
          description: Model registry access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        emails_disabled:
          type: boolean
          description: 'Deprecated: Use emails_enabled instead.'
        emails_enabled:
          type: boolean
          description: Enable email notifications
        show_default_award_emojis:
          type: boolean
          description: Show default award emojis
        show_diff_preview_in_email:
          type: boolean
          description: Include the code diff preview in merge request notification emails
        warn_about_potentially_unwanted_characters:
          type: boolean
          description: Warn about potentially unwanted characters
        enforce_auth_checks_on_uploads:
          type: boolean
          description: Enforce auth check on uploads
        shared_runners_enabled:
          type: boolean
          description: Flag indication if shared runners are enabled for that project
        group_runners_enabled:
          type: boolean
          description: Flag indication if group runners are enabled for that project
        resolve_outdated_diff_discussions:
          type: boolean
          description: Automatically resolve merge request diff threads on lines changed with a push
        remove_source_branch_after_merge:
          type: boolean
          description: Remove the source branch by default after merge
        container_registry_enabled:
          type: boolean
          description: 'Deprecated: Use :container_registry_access_level instead. Flag indication if the container registry is enabled for that project'
        container_expiration_policy_attributes:
          type: object
          properties:
            cadence:
              type: string
              description: Container expiration policy cadence for recurring job
            keep_n:
              type: integer
              description: Container expiration policy number of images to keep
              format: int32
            older_than:
              type: string
              description: Container expiration policy remove images older than value
            name_regex:
              type: string
              description: Container expiration policy regex for image removal
            name_regex_keep:
              type: string
              description: Container expiration policy regex for image retention
            enabled:
              type: boolean
              description: Flag indication if container expiration policy is enabled
        lfs_enabled:
          type: boolean
          description: Flag indication if Git LFS is enabled for that project
        visibility:
          type: string
          description: The visibility of the project.
          enum:
            - private
            - internal
            - public
        public_builds:
          type: boolean
          description: 'Deprecated: Use public_jobs instead.'
        public_jobs:
          type: boolean
          description: Perform public builds
        request_access_enabled:
          type: boolean
          description: Allow users to request member access
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
          description: Only allow to merge if builds succeed
        allow_merge_on_skipped_pipeline:
          type: boolean
          description: Allow to merge if pipeline is skipped
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
          description: Only allow to merge if all threads are resolved
        tag_list:
          type: array
          description: 'Deprecated: Use :topics instead'
          items:
            type: string
        topics:
          type: array
          description: The list of topics for a project
          items:
            type: string
        avatar:
          type: file
          description: Avatar image for project
          format: binary
        printing_merge_request_link_enabled:
          type: boolean
          description: Show link to create/view merge request when pushing from the command line
        merge_method:
          type: string
          description: The merge method used when merging merge requests
          enum:
            - ff
            - rebase_merge
            - merge
        suggestion_commit_message:
          type: string
          description: The commit message used to apply merge request suggestions
        merge_commit_template:
          type: string
          description: Template used to create merge commit message
        squash_commit_template:
          type: string
          description: Template used to create squash commit message
        issue_branch_template:
          type: string
          description: Template used to create a branch from an issue
        initialize_with_readme:
          type: boolean
          description: Initialize a project with a README.md
        auto_devops_enabled:
          type: boolean
          description: Flag indication if Auto DevOps is enabled
        auto_devops_deploy_strategy:
          type: string
          description: Auto Deploy strategy
          enum:
            - continuous
            - manual
            - timed_incremental
        autoclose_referenced_issues:
          type: boolean
          description: Flag indication if referenced issues auto-closing is enabled
        repository_storage:
          type: string
          description: Which storage shard the repository is on. Available only to admins
        packages_enabled:
          type: boolean
          description: Enable project packages feature
        squash_option:
          type: string
          description: Squash default for project. One of `never`, `always`, `default_on`, or `default_off`.
          enum:
            - never
            - always
            - default_on
            - default_off
        mr_default_target_self:
          type: boolean
          description: Merge requests of this forked project targets itself by default
        only_allow_merge_if_all_status_checks_passed:
          type: boolean
          description: Blocks merge requests from merging unless all status checks have passed
        approvals_before_merge:
          type: integer
          description: How many approvers should approve merge request by default
          format: int32
        mirror:
          type: boolean
          description: Enables pull mirroring in a project
        mirror_trigger_builds:
          type: boolean
          description: Pull mirroring triggers builds
        external_authorization_classification_label:
          type: string
          description: The classification label for the project
        requirements_access_level:
          type: string
          description: Requirements feature access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        prevent_merge_without_jira_issue:
          type: boolean
          description: Require an associated issue from Jira
        repository_object_format:
          type: string
          description: The object format of the project repository
          enum:
            - sha1
            - sha256
        use_custom_template:
          type: boolean
          description: Use custom template
        group_with_project_templates_id:
          type: integer
          description: Group ID that serves as the template source
          format: int32
        namespace_id:
          type: integer
          description: Namespace ID for the new project. Default to the user namespace.
          format: int32
        import_url:
          type: string
          description: URL from which the project is imported
        template_name:
          type: string
          description: Name of template from which to create project
        template_project_id:
          type: integer
          description: Project ID of template from which to create project
          format: int32
      description: Create new project for a specified user. Only available to admin users.
    API_Entities_ProjectWithAccess:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: desc
        name:
          type: string
          example: project1
        name_with_namespace:
          type: string
          example: John Doe / project1
        path:
          type: string
          example: project1
        path_with_namespace:
          type: string
          example: namespace1/project1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        default_branch:
          type: string
          example: main
        tag_list:
          type: array
          items:
            type: string
            example: tag
        topics:
          type: array
          items:
            type: string
            example: topic
        ssh_url_to_repo:
          type: string
          example: git@gitlab.example.com:gitlab/gitlab.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab.git
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab
        readme_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab/blob/master/README.md
        forks_count:
          type: integer
          format: int32
          example: 1
        license_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE
        license:
          $ref: '#/components/schemas/API_Entities_LicenseBasic'
        avatar_url:
          type: string
          example: http://example.com/uploads/project/avatar/3/uploads/avatar.png
        star_count:
          type: integer
          format: int32
          example: 1
        last_activity_at:
          type: string
          format: date-time
          example: "2013-09-30T13:46:02Z"
        namespace:
          $ref: '#/components/schemas/API_Entities_NamespaceBasic'
        custom_attributes:
          $ref: '#/components/schemas/API_Entities_CustomAttribute'
        repository_storage:
          type: string
          example: default
        container_registry_image_prefix:
          type: string
          example: registry.gitlab.example.com/gitlab/gitlab-client
        _links:
          type: object
          properties:
            self:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4
            issues:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/issues
            merge_requests:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/merge_requests
            repo_branches:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/repository/branches
            labels:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/labels
            events:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/events
            members:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/members
            cluster_agents:
              type: string
              example: https://gitlab.example.com/api/v4/projects/4/cluster_agents
        packages_enabled:
          type: boolean
        empty_repo:
          type: boolean
        archived:
          type: boolean
        visibility:
          type: string
          example: public
        owner:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        resolve_outdated_diff_discussions:
          type: boolean
        container_expiration_policy:
          $ref: '#/components/schemas/API_Entities_ContainerExpirationPolicy'
        repository_object_format:
          type: string
          example: sha1
        issues_enabled:
          type: boolean
        merge_requests_enabled:
          type: boolean
        wiki_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        snippets_enabled:
          type: boolean
        container_registry_enabled:
          type: boolean
        service_desk_enabled:
          type: boolean
        service_desk_address:
          type: string
          example: address@example.com
        can_create_merge_request_in:
          type: boolean
        issues_access_level:
          type: string
          example: enabled
        repository_access_level:
          type: string
          example: enabled
        merge_requests_access_level:
          type: string
          example: enabled
        forking_access_level:
          type: string
          example: enabled
        wiki_access_level:
          type: string
          example: enabled
        builds_access_level:
          type: string
          example: enabled
        snippets_access_level:
          type: string
          example: enabled
        pages_access_level:
          type: string
          example: enabled
        analytics_access_level:
          type: string
          example: enabled
        container_registry_access_level:
          type: string
          example: enabled
        security_and_compliance_access_level:
          type: string
          example: enabled
        releases_access_level:
          type: string
          example: enabled
        environments_access_level:
          type: string
          example: enabled
        feature_flags_access_level:
          type: string
          example: enabled
        infrastructure_access_level:
          type: string
          example: enabled
        monitor_access_level:
          type: string
          example: enabled
        model_experiments_access_level:
          type: string
          example: enabled
        model_registry_access_level:
          type: string
          example: enabled
        emails_disabled:
          type: boolean
        emails_enabled:
          type: boolean
        shared_runners_enabled:
          type: boolean
        lfs_enabled:
          type: boolean
        creator_id:
          type: integer
          format: int32
          example: 1
        forked_from_project:
          $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        mr_default_target_self:
          type: boolean
        import_url:
          type: string
          example: https://gitlab.com/gitlab/gitlab.git
        import_type:
          type: string
          example: git
        import_status:
          type: string
          example: none
        import_error:
          type: string
          example: Import error
        open_issues_count:
          type: integer
          format: int32
          example: 1
        description_html:
          type: string
        updated_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.016Z"
        ci_default_git_depth:
          type: integer
          format: int32
          example: 20
        ci_forward_deployment_enabled:
          type: boolean
        ci_forward_deployment_rollback_allowed:
          type: boolean
        ci_job_token_scope_enabled:
          type: boolean
        ci_separated_caches:
          type: boolean
        ci_allow_fork_pipelines_to_run_in_parent_project:
          type: boolean
        build_git_strategy:
          type: string
          example: fetch
        keep_latest_artifact:
          type: boolean
        restrict_user_defined_variables:
          type: boolean
        ci_pipeline_variables_minimum_override_role:
          type: string
        runners_token:
          type: string
          example: b8547b1dc37721d05889db52fa2f02
        runner_token_expiration_interval:
          type: integer
          format: int32
          example: 3600
        group_runners_enabled:
          type: boolean
        auto_cancel_pending_pipelines:
          type: string
          example: enabled
        build_timeout:
          type: integer
          format: int32
          example: 3600
        auto_devops_enabled:
          type: boolean
        auto_devops_deploy_strategy:
          type: string
          example: continuous
        ci_config_path:
          type: string
          example: ""
        public_jobs:
          type: boolean
        shared_with_groups:
          type: array
          items:
            type: string
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        allow_merge_on_skipped_pipeline:
          type: boolean
        request_access_enabled:
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        printing_merge_request_link_enabled:
          type: boolean
        merge_method:
          type: string
          example: merge
        squash_option:
          type: string
          example: default_off
        enforce_auth_checks_on_uploads:
          type: boolean
        suggestion_commit_message:
          type: string
          example: Suggestion message
        merge_commit_template:
          type: string
          example: '%(title)'
        squash_commit_template:
          type: string
          example: '%(source_branch)'
        issue_branch_template:
          type: string
          example: '%(title)'
        statistics:
          $ref: '#/components/schemas/API_Entities_ProjectStatistics'
        warn_about_potentially_unwanted_characters:
          type: boolean
        autoclose_referenced_issues:
          type: boolean
        approvals_before_merge:
          type: string
        mirror:
          type: string
        mirror_user_id:
          type: string
        mirror_trigger_builds:
          type: string
        only_mirror_protected_branches:
          type: string
        mirror_overwrites_diverged_branches:
          type: string
        external_authorization_classification_label:
          type: string
        marked_for_deletion_at:
          type: string
        marked_for_deletion_on:
          type: string
        requirements_enabled:
          type: string
        requirements_access_level:
          type: string
        security_and_compliance_enabled:
          type: string
        compliance_frameworks:
          type: string
        issues_template:
          type: string
        merge_requests_template:
          type: string
        ci_restrict_pipeline_cancellation_role:
          type: string
        merge_pipelines_enabled:
          type: string
        merge_trains_enabled:
          type: string
        merge_trains_skip_train_allowed:
          type: string
        only_allow_merge_if_all_status_checks_passed:
          type: string
        allow_pipeline_trigger_approve_deployment:
          type: boolean
        prevent_merge_without_jira_issue:
          type: string
        permissions:
          type: object
          properties:
            project_access:
              $ref: '#/components/schemas/API_Entities_ProjectAccess'
            group_access:
              $ref: '#/components/schemas/API_Entities_GroupAccess'
      description: API_Entities_ProjectWithAccess model
    API_Entities_ProjectAccess:
      type: object
      properties:
        access_level:
          type: string
        notification_level:
          type: string
    API_Entities_GroupAccess:
      type: object
      properties:
        access_level:
          type: string
        notification_level:
          type: string
    postApiV4ProjectsIdFork:
      type: object
      properties:
        namespace:
          type: string
          description: (deprecated) The ID or name of the namespace that the project will be forked into
          example: gitlab
        namespace_id:
          type: integer
          description: The ID of the namespace that the project will be forked into
          format: int32
          example: 1
        namespace_path:
          type: string
          description: The path of the namespace that the project will be forked into
          example: new_path/gitlab
        path:
          type: string
          description: The path that will be assigned to the fork
          example: fork
        name:
          type: string
          description: The name that will be assigned to the fork
          example: Fork
        description:
          type: string
          description: The description that will be assigned to the fork
          example: Description
        visibility:
          type: string
          description: The visibility of the fork
          enum:
            - private
            - internal
            - public
        mr_default_target_self:
          type: boolean
          description: Merge requests of this forked project targets itself by default
        branches:
          type: string
          description: Branches to fork
      description: Fork new project for the current user or provided namespace.
    putApiV4ProjectsId:
      type: object
      properties:
        name:
          type: string
          description: The name of the project
          example: project
        default_branch:
          type: string
          description: The default branch of the project
          example: main
        path:
          type: string
          description: The path of the repository
          example: group/project
        description:
          type: string
          description: The description of the project
        build_git_strategy:
          type: string
          description: The Git strategy. Defaults to `fetch`
          enum:
            - fetch
            - clone
        build_timeout:
          type: integer
          description: Build timeout
          format: int32
        auto_cancel_pending_pipelines:
          type: string
          description: Auto-cancel pending pipelines
          enum:
            - disabled
            - enabled
        ci_config_path:
          type: string
          description: The path to CI config file. Defaults to `.gitlab-ci.yml`
        service_desk_enabled:
          type: boolean
          description: Disable or enable the service desk
        issues_enabled:
          type: boolean
          description: Flag indication if the issue tracker is enabled
        merge_requests_enabled:
          type: boolean
          description: Flag indication if merge requests are enabled
        wiki_enabled:
          type: boolean
          description: Flag indication if the wiki is enabled
        jobs_enabled:
          type: boolean
          description: Flag indication if jobs are enabled
        snippets_enabled:
          type: boolean
          description: Flag indication if snippets are enabled
        issues_access_level:
          type: string
          description: Issues access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        repository_access_level:
          type: string
          description: Repository access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        merge_requests_access_level:
          type: string
          description: Merge requests access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        forking_access_level:
          type: string
          description: Forks access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        wiki_access_level:
          type: string
          description: Wiki access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        builds_access_level:
          type: string
          description: Builds access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        snippets_access_level:
          type: string
          description: Snippets access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        pages_access_level:
          type: string
          description: Pages access level. One of `disabled`, `private`, `enabled` or `public`
          enum:
            - disabled
            - private
            - enabled
            - public
        analytics_access_level:
          type: string
          description: Analytics access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        container_registry_access_level:
          type: string
          description: Controls visibility of the container registry. One of `disabled`, `private` or `enabled`. `private` will make the container registry accessible only to project members (reporter role and above). `enabled` will make the container registry accessible to everyone who has access to the project. `disabled` will disable the container registry
          enum:
            - disabled
            - private
            - enabled
        security_and_compliance_access_level:
          type: string
          description: Security and compliance access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        releases_access_level:
          type: string
          description: Releases access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        environments_access_level:
          type: string
          description: Environments access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        feature_flags_access_level:
          type: string
          description: Feature flags access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        infrastructure_access_level:
          type: string
          description: Infrastructure access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        monitor_access_level:
          type: string
          description: Monitor access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        model_experiments_access_level:
          type: string
          description: Model experiments access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        model_registry_access_level:
          type: string
          description: Model registry access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        emails_disabled:
          type: boolean
          description: 'Deprecated: Use emails_enabled instead.'
        emails_enabled:
          type: boolean
          description: Enable email notifications
        show_default_award_emojis:
          type: boolean
          description: Show default award emojis
        show_diff_preview_in_email:
          type: boolean
          description: Include the code diff preview in merge request notification emails
        warn_about_potentially_unwanted_characters:
          type: boolean
          description: Warn about potentially unwanted characters
        enforce_auth_checks_on_uploads:
          type: boolean
          description: Enforce auth check on uploads
        shared_runners_enabled:
          type: boolean
          description: Flag indication if shared runners are enabled for that project
        group_runners_enabled:
          type: boolean
          description: Flag indication if group runners are enabled for that project
        resolve_outdated_diff_discussions:
          type: boolean
          description: Automatically resolve merge request diff threads on lines changed with a push
        remove_source_branch_after_merge:
          type: boolean
          description: Remove the source branch by default after merge
        container_registry_enabled:
          type: boolean
          description: 'Deprecated: Use :container_registry_access_level instead. Flag indication if the container registry is enabled for that project'
        container_expiration_policy_attributes:
          type: object
          properties:
            cadence:
              type: string
              description: Container expiration policy cadence for recurring job
            keep_n:
              type: integer
              description: Container expiration policy number of images to keep
              format: int32
            older_than:
              type: string
              description: Container expiration policy remove images older than value
            name_regex:
              type: string
              description: Container expiration policy regex for image removal
            name_regex_keep:
              type: string
              description: Container expiration policy regex for image retention
            enabled:
              type: boolean
              description: Flag indication if container expiration policy is enabled
        lfs_enabled:
          type: boolean
          description: Flag indication if Git LFS is enabled for that project
        visibility:
          type: string
          description: The visibility of the project.
          enum:
            - private
            - internal
            - public
        public_builds:
          type: boolean
          description: 'Deprecated: Use public_jobs instead.'
        public_jobs:
          type: boolean
          description: Perform public builds
        request_access_enabled:
          type: boolean
          description: Allow users to request member access
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
          description: Only allow to merge if builds succeed
        allow_merge_on_skipped_pipeline:
          type: boolean
          description: Allow to merge if pipeline is skipped
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
          description: Only allow to merge if all threads are resolved
        tag_list:
          type: array
          description: 'Deprecated: Use :topics instead'
          items:
            type: string
        topics:
          type: array
          description: The list of topics for a project
          items:
            type: string
        avatar:
          type: file
          description: Avatar image for project
          format: binary
        printing_merge_request_link_enabled:
          type: boolean
          description: Show link to create/view merge request when pushing from the command line
        merge_method:
          type: string
          description: The merge method used when merging merge requests
          enum:
            - ff
            - rebase_merge
            - merge
        suggestion_commit_message:
          type: string
          description: The commit message used to apply merge request suggestions
        merge_commit_template:
          type: string
          description: Template used to create merge commit message
        squash_commit_template:
          type: string
          description: Template used to create squash commit message
        issue_branch_template:
          type: string
          description: Template used to create a branch from an issue
        initialize_with_readme:
          type: boolean
          description: Initialize a project with a README.md
        auto_devops_enabled:
          type: boolean
          description: Flag indication if Auto DevOps is enabled
        auto_devops_deploy_strategy:
          type: string
          description: Auto Deploy strategy
          enum:
            - continuous
            - manual
            - timed_incremental
        autoclose_referenced_issues:
          type: boolean
          description: Flag indication if referenced issues auto-closing is enabled
        repository_storage:
          type: string
          description: Which storage shard the repository is on. Available only to admins
        packages_enabled:
          type: boolean
          description: Enable project packages feature
        squash_option:
          type: string
          description: Squash default for project. One of `never`, `always`, `default_on`, or `default_off`.
          enum:
            - never
            - always
            - default_on
            - default_off
        mr_default_target_self:
          type: boolean
          description: Merge requests of this forked project targets itself by default
        only_allow_merge_if_all_status_checks_passed:
          type: boolean
          description: Blocks merge requests from merging unless all status checks have passed
        approvals_before_merge:
          type: integer
          description: How many approvers should approve merge request by default
          format: int32
        mirror:
          type: boolean
          description: Enables pull mirroring in a project
        mirror_trigger_builds:
          type: boolean
          description: Pull mirroring triggers builds
        external_authorization_classification_label:
          type: string
          description: The classification label for the project
        requirements_access_level:
          type: string
          description: Requirements feature access level. One of `disabled`, `private` or `enabled`
          enum:
            - disabled
            - private
            - enabled
        prevent_merge_without_jira_issue:
          type: boolean
          description: Require an associated issue from Jira
        ci_default_git_depth:
          type: integer
          description: Default number of revisions for shallow cloning
          format: int32
        keep_latest_artifact:
          type: boolean
          description: Indicates if the latest artifact should be kept for this project.
        ci_forward_deployment_enabled:
          type: boolean
          description: Prevent older deployment jobs that are still pending
        ci_forward_deployment_rollback_allowed:
          type: boolean
          description: Allow job retries for rollback deployments
        ci_allow_fork_pipelines_to_run_in_parent_project:
          type: boolean
          description: Allow fork merge request pipelines to run in parent project
        ci_separated_caches:
          type: boolean
          description: Enable or disable separated caches based on branch protection.
        restrict_user_defined_variables:
          type: boolean
          description: Restrict ability to override variables when triggering a pipeline
        ci_pipeline_variables_minimum_override_role:
          type: string
          description: Limit ability to override CI/CD variables when triggering a pipeline to only users with at least the set minimum role
          enum:
            - no_one_allowed
            - developer
            - maintainer
            - owner
        allow_pipeline_trigger_approve_deployment:
          type: boolean
          description: Allow pipeline triggerer to approve deployments
        mirror_user_id:
          type: integer
          description: User responsible for all the activity surrounding a pull mirror event. Can only be set by admins
          format: int32
        only_mirror_protected_branches:
          type: boolean
          description: Only mirror protected branches
        mirror_branch_regex:
          type: string
          description: Only mirror branches match regex
        mirror_overwrites_diverged_branches:
          type: boolean
          description: Pull mirror overwrites diverged branches
        import_url:
          type: string
          description: URL from which the project is imported
        fallback_approvals_required:
          type: integer
          description: Overall approvals required when no rule is present
          format: int32
        issues_template:
          type: string
          description: Default description for Issues. Description is parsed with GitLab Flavored Markdown.
        merge_requests_template:
          type: string
          description: Default description for merge requests. Description is parsed with GitLab Flavored Markdown.
        merge_pipelines_enabled:
          type: boolean
          description: Enable merged results pipelines.
        merge_trains_enabled:
          type: boolean
          description: Enable merge trains.
        merge_trains_skip_train_allowed:
          type: boolean
          description: Allow merge train merge requests to be merged without waiting for pipelines to finish.
        ci_restrict_pipeline_cancellation_role:
          type: string
          description: Roles allowed to cancel pipelines and jobs.
      description: Update an existing project
    postApiV4ProjectsIdShare:
      required:
        - group_access
        - group_id
      type: object
      properties:
        group_id:
          type: integer
          description: The ID of a group
          format: int32
          example: 1
        group_access:
          type: integer
          description: The group access level
          format: int32
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
        expires_at:
          type: string
          description: Share expiration date
          format: date
      description: Share the project with a group
    API_Entities_ProjectGroupLink:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        project_id:
          type: integer
          format: int32
          example: 1
        group_id:
          type: integer
          format: int32
          example: 1
        group_access:
          type: integer
          format: int32
          example: 10
        expires_at:
          type: string
          format: date
          example: "2016-09-26"
      description: API_Entities_ProjectGroupLink model
    postApiV4ProjectsIdUploads:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The attachment file to be uploaded
          format: binary
      description: Upload a file
    API_Entities_ProjectUpload:
      type: object
      properties:
        alt:
          type: string
        url:
          type: string
        full_path:
          type: string
        markdown:
          type: string
      description: API_Entities_ProjectUpload model
    API_Entities_PublicGroupDetails:
      type: object
      properties:
        id:
          type: string
        web_url:
          type: string
        name:
          type: string
        avatar_url:
          type: string
        full_name:
          type: string
        full_path:
          type: string
      description: API_Entities_PublicGroupDetails model
    postApiV4ProjectsIdHousekeeping:
      type: object
      properties:
        task:
          type: string
          description: '`prune` to trigger manual prune of unreachable objects or `eager` to trigger eager housekeeping.'
          default: eager
          enum:
            - eager
            - prune
      description: Start the housekeeping task for a project
    putApiV4ProjectsIdTransfer:
      required:
        - namespace
      type: object
      properties:
        namespace:
          type: string
          description: The ID or path of the new namespace
          example: gitlab
      description: Transfer a project to a new namespace
    API_Entities_ProjectRepositoryStorage:
      type: object
      properties:
        disk_path:
          type: string
          example: '@hashed/6b/86/6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b'
        project_id:
          type: integer
          format: int32
          example: 1
        repository_storage:
          type: string
          example: default
        created_at:
          type: string
          format: date-time
          example: "2012-10-12T17:04:47Z"
      description: API_Entities_ProjectRepositoryStorage model
    API_Entities_ProtectedBranch:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: main
        push_access_levels:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_ProtectedRefAccess'
        merge_access_levels:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_ProtectedRefAccess'
        allow_force_push:
          type: boolean
        unprotect_access_levels:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_ProtectedRefAccess'
        code_owner_approval_required:
          type: boolean
        inherited:
          type: boolean
      description: API_Entities_ProtectedBranch model
    API_Entities_ProtectedRefAccess:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        access_level:
          type: integer
          format: int32
          example: 40
        access_level_description:
          type: string
          example: Maintainers
        deploy_key_id:
          type: integer
          format: int32
          example: 1
        user_id:
          type: integer
          format: int32
          example: 1
        group_id:
          type: integer
          format: int32
          example: 1
    postApiV4ProjectsIdProtectedBranches:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the protected branch
          example: main
        push_access_level:
          type: integer
          description: 'Access levels allowed to push (defaults: `40`, maintainer access level)'
          format: int32
          enum:
            - 30
            - 40
            - 60
            - 0
        merge_access_level:
          type: integer
          description: 'Access levels allowed to merge (defaults: `40`, maintainer access level)'
          format: int32
          enum:
            - 30
            - 40
            - 60
            - 0
        allow_force_push:
          type: boolean
          description: Allow force push for all users with push access.
          default: false
        unprotect_access_level:
          type: integer
          description: 'Access levels allowed to unprotect (defaults: `40`, maintainer access level)'
          format: int32
          enum:
            - 30
            - 40
            - 60
        allowed_to_push:
          type: array
          description: An array of users/groups allowed to push
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
                  - 0
              user_id:
                type: integer
                format: int32
                example: 1
              group_id:
                type: integer
                format: int32
                example: 1
              id:
                type: integer
                format: int32
                example: 1
              _destroy:
                type: boolean
                description: Delete the object when true
        allowed_to_merge:
          type: array
          description: An array of users/groups allowed to merge
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
                  - 0
              user_id:
                type: integer
                format: int32
                example: 1
              group_id:
                type: integer
                format: int32
                example: 1
              id:
                type: integer
                format: int32
                example: 1
              _destroy:
                type: boolean
                description: Delete the object when true
        allowed_to_unprotect:
          type: array
          description: An array of users/groups allowed to unprotect
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
              user_id:
                type: integer
                format: int32
                example: 1
              group_id:
                type: integer
                format: int32
                example: 1
              id:
                type: integer
                format: int32
                example: 1
              _destroy:
                type: boolean
                description: Delete the object when true
        code_owner_approval_required:
          type: boolean
          description: Prevent pushes to this branch if it matches an item in CODEOWNERS
          default: false
      description: Protect a single branch
    patchApiV4ProjectsIdProtectedBranchesName:
      type: object
      properties:
        allow_force_push:
          type: boolean
          description: Allow force push for all users with push access.
        unprotect_access_level:
          type: integer
          description: 'Access levels allowed to unprotect (defaults: `40`, maintainer access level)'
          format: int32
          enum:
            - 30
            - 40
            - 60
        allowed_to_push:
          type: array
          description: An array of users/groups allowed to push
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
                  - 0
              user_id:
                type: integer
                format: int32
                example: 1
              group_id:
                type: integer
                format: int32
                example: 1
              id:
                type: integer
                format: int32
                example: 1
              _destroy:
                type: boolean
                description: Delete the object when true
        allowed_to_merge:
          type: array
          description: An array of users/groups allowed to merge
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
                  - 0
              user_id:
                type: integer
                format: int32
                example: 1
              group_id:
                type: integer
                format: int32
                example: 1
              id:
                type: integer
                format: int32
                example: 1
              _destroy:
                type: boolean
                description: Delete the object when true
        allowed_to_unprotect:
          type: array
          description: An array of users/groups allowed to unprotect
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
              user_id:
                type: integer
                format: int32
                example: 1
              group_id:
                type: integer
                format: int32
                example: 1
              id:
                type: integer
                format: int32
                example: 1
              _destroy:
                type: boolean
                description: Delete the object when true
        code_owner_approval_required:
          type: boolean
          description: Prevent pushes to this branch if it matches an item in CODEOWNERS
          default: false
      description: Update a protected branch
    API_Entities_ProtectedTag:
      type: object
      properties:
        name:
          type: string
          example: release-1-0
        create_access_levels:
          $ref: '#/components/schemas/API_Entities_ProtectedRefAccess'
      description: API_Entities_ProtectedTag model
    postApiV4ProjectsIdProtectedTags:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the protected tag
          example: release-1-0
        create_access_level:
          type: integer
          description: 'Access levels allowed to create (defaults: `40`, maintainer access level)'
          format: int32
          example: 30
          enum:
            - 30
            - 40
            - 60
            - 0
        allowed_to_create:
          type: array
          description: An array of users/groups allowed to create
          items:
            type: object
            properties:
              access_level:
                type: integer
                format: int32
                enum:
                  - 30
                  - 40
                  - 60
                  - 0
              user_id:
                type: integer
                format: int32
              group_id:
                type: integer
                format: int32
      description: Protect a single tag or wildcard
    postApiV4ProjectsIdReleases:
      required:
        - tag_name
      type: object
      properties:
        tag_name:
          type: string
          description: The tag where the release is created from
        tag_message:
          type: string
          description: Message to use if creating a new annotated tag
        name:
          type: string
          description: The release name
        description:
          type: string
          description: The description of the release. You can use Markdown
        ref:
          type: string
          description: If a tag specified in `tag_name` doesn't exist, the release is created from `ref` and tagged with `tag_name`. It can be a commit SHA, another tag name, or a branch name.
        assets:
          type: object
          properties:
            links:
              type: array
              items:
                required:
                  - name
                  - url
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the link. Link names must be unique within the release
                  url:
                    type: string
                    description: The URL of the link. Link URLs must be unique within the release
                  direct_asset_path:
                    type: string
                    description: Optional path for a direct asset link
                  filepath:
                    type: string
                    description: 'Deprecated: optional path for a direct asset link'
                  link_type:
                    type: string
                    description: 'The type of the link: `other`, `runbook`, `image`, `package`. Defaults to `other`'
        milestones:
          type: array
          description: The title of each milestone the release is associated with. GitLab Premium customers can specify group milestones. Cannot be combined with `milestone_ids` parameter.
          items:
            type: string
        milestone_ids:
          type: string
          description: The ID of each milestone the release is associated with. GitLab Premium customers can specify group milestones. Cannot be combined with `milestones` parameter.
        released_at:
          type: string
          description: Date and time for the release. Defaults to the current time. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`). Only provide this field if creating an upcoming or historical release.
          format: date-time
        legacy_catalog_publish:
          type: boolean
          description: If true, the release will be published to the CI catalog. This parameter is for internal use only and will be removed in a future release. If the feature flag ci_release_cli_catalog_publish_option is disabled, this parameter will be ignored and the release will published to the CI catalog as it was before this parameter was introduced.
      description: Create a release
    putApiV4ProjectsIdReleasesTagName:
      type: object
      properties:
        name:
          type: string
          description: The release name
        description:
          type: string
          description: The description of the release. You can use Markdown
        released_at:
          type: string
          description: The date when the release is/was ready. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)
          format: date-time
        milestones:
          type: array
          description: The title of each milestone to associate with the release. GitLab Premium customers can specify group milestones. Cannot be combined with `milestone_ids` parameter. To remove all milestones from the release, specify `[]`
          items:
            type: string
        milestone_ids:
          type: string
          description: The ID of each milestone the release is associated with. GitLab Premium customers can specify group milestones. Cannot be combined with `milestones` parameter. To remove all milestones from the release, specify `[]`
      description: Update a release
    API_Entities_RemoteMirror:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 101486
        enabled:
          type: boolean
          example: true
        url:
          type: string
          example: https://*****:*****@example.com/gitlab/example.git
        update_status:
          type: string
          example: finished
        last_update_at:
          type: string
          format: date-time
          example: "2020-01-06T17:32:02.823Z"
        last_update_started_at:
          type: string
          format: date-time
          example: "2020-01-06T17:32:02.823Z"
        last_successful_update_at:
          type: string
          format: date-time
          example: "2020-01-06T17:31:55.864Z"
        last_error:
          type: integer
          format: int32
        only_protected_branches:
          type: boolean
        keep_divergent_refs:
          type: boolean
        auth_method:
          type: string
          example: password
        mirror_branch_regex:
          type: string
      description: API_Entities_RemoteMirror model
    postApiV4ProjectsIdRemoteMirrors:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          description: The URL for a remote mirror
          example: https://*****:*****@example.com/gitlab/example.git
        enabled:
          type: boolean
          description: Determines if the mirror is enabled
        auth_method:
          type: string
          description: Determines the mirror authentication method
          enum:
            - ssh_public_key
            - password
        keep_divergent_refs:
          type: boolean
          description: Determines if divergent refs are kept on the target
        only_protected_branches:
          type: boolean
          description: Determines if only protected branches are mirrored
        mirror_branch_regex:
          type: string
          description: Determines if only matched branches are mirrored
      description: Create remote mirror for a project
    putApiV4ProjectsIdRemoteMirrorsMirrorId:
      type: object
      properties:
        enabled:
          type: boolean
          description: Determines if the mirror is enabled
          example: true
        auth_method:
          type: string
          description: Determines the mirror authentication method
        keep_divergent_refs:
          type: boolean
          description: Determines if divergent refs are kept on the target
        only_protected_branches:
          type: boolean
          description: Determines if only protected branches are mirrored
        mirror_branch_regex:
          type: string
          description: Determines if only matched branches are mirrored
      description: Update the attributes of a single remote mirror
    API_Entities_TreeObject:
      type: object
      properties:
        id:
          type: string
          example: a1e8f8d745cc87e3a9248358d9352bb7f9a0aeba
        name:
          type: string
          example: html
        type:
          type: string
          example: tree
        path:
          type: string
          example: files/html
        mode:
          type: string
          example: "040000"
      description: API_Entities_TreeObject model
    API_Entities_Compare:
      type: object
      properties:
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        commits:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Commit'
        diffs:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Diff'
        compare_timeout:
          type: boolean
        compare_same_ref:
          type: boolean
        web_url:
          type: string
          example: https://gitlab.example.com/gitlab/gitlab-foss/-/compare/main...feature
      description: API_Entities_Compare model
    API_Entities_Contributor:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: johndoe@example.com
        commits:
          type: integer
          format: int32
          example: 117
        additions:
          type: integer
          format: int32
          example: 3
        deletions:
          type: integer
          format: int32
          example: 5
      description: API_Entities_Contributor model
    API_Entities_Changelog:
      type: object
      properties:
        notes:
          type: string
      description: API_Entities_Changelog model
    postApiV4ProjectsIdRepositoryChangelog:
      required:
        - version
      type: object
      properties:
        version:
          type: string
          description: The version of the release, using the semantic versioning format
          example: 1.0.0
        from:
          type: string
          description: The first commit in the range of commits to use for the changelog
          example: ed899a2f4b50b4370feeea94676502b42383c746
        to:
          type: string
          description: The last commit in the range of commits to use for the changelog
          example: 6104942438c14ec7bd21c6cd5bd995272b3faff6
        date:
          type: string
          description: The date and time of the release
          format: date-time
          example: "2021-09-20T11:50:22.001Z"
        trailer:
          type: string
          description: The Git trailer to use for determining if commits are to be included in the changelog
          example: Changelog
          default: Changelog
        branch:
          type: string
          description: The branch to commit the changelog changes to
          example: main
        config_file:
          type: string
          description: The file path to the configuration file as stored in the project's Git repository. Defaults to '.gitlab/changelog_config.yml'
          example: .gitlab/changelog_config.yml
        file:
          type: string
          description: The file to commit the changelog changes to
          example: CHANGELOG.md
          default: CHANGELOG.md
        message:
          type: string
          description: The commit message to use when committing the changelog
          example: Initial commit
      description: Generates a changelog section for a release and commits it in a changelog file
    postApiV4ProjectsIdAccessTokens:
      required:
        - expires_at
        - name
        - scopes
      type: object
      properties:
        name:
          type: string
          description: Resource access token name
          example: test
        scopes:
          type: array
          description: The permissions of the token
          example:
            - api
            - read_repository
          items:
            type: string
            enum:
              - api
              - read_api
              - create_runner
              - k8s_proxy
              - read_repository
              - write_repository
              - read_observability
              - write_observability
              - ai_features
        expires_at:
          type: string
          description: The expiration date of the token
          format: date
        access_level:
          type: integer
          description: The access level of the token in the project
          format: int32
          example: 40
          default: 40
          enum:
            - 10
            - 20
            - 30
            - 40
            - 50
      description: Create a resource access token
    postApiV4ProjectsIdAccessTokensTokenIdRotate:
      type: object
      properties:
        expires_at:
          type: string
          description: The expiration date of the token
          format: date
          example: "2021-01-31"
      description: Rotate a resource access token
    API_Entities_ResourceMilestoneEvent:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 142
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
          format: date-time
          example: "2018-08-20T13:38:20.077Z"
        resource_type:
          type: string
          example: Issue
        resource_id:
          type: integer
          format: int32
          example: 253
        milestone:
          $ref: '#/components/schemas/API_Entities_Milestone'
        action:
          type: string
          example: add
        state:
          type: string
          example: active
      description: API_Entities_ResourceMilestoneEvent model
    putApiV4ProjectsIdRepositorySubmodulesSubmodule:
      required:
        - branch
        - commit_sha
      type: object
      properties:
        commit_sha:
          type: string
          description: Commit sha to update the submodule to.
          example: ed899a2f4b50b4370feeea94676502b42383c746
        branch:
          type: string
          description: Name of the branch to commit into.
          example: main
        commit_message:
          type: string
          description: Commit message. If no message is provided a default one will be set.
          example: Commit message
      description: Update existing submodule reference in repository
    API_Entities_Tag:
      type: object
      properties:
        name:
          type: string
          example: v1.0.0
        message:
          type: string
          example: Release v1.0.0
        target:
          type: string
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        release:
          $ref: '#/components/schemas/API_Entities_TagRelease'
        protected:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2023-10-12T02:16:52Z"
      description: API_Entities_Tag model
    API_Entities_TagRelease:
      type: object
      properties:
        tag_name:
          type: string
          example: 1.0.0
        description:
          type: string
          example: Amazing release. Wow
    postApiV4ProjectsIdRepositoryTags:
      required:
        - ref
        - tag_name
      type: object
      properties:
        tag_name:
          type: string
          description: The name of the tag
          example: v.1.0.0
        ref:
          type: string
          description: The commit sha or branch name
          example: 2695effb5807a22ff3d138d593fd856244e155e7
        message:
          type: string
          description: Specifying a message creates an annotated tag
          example: Release 1.0.0
      description: Create a new repository tag
    API_Entities_TagSignature:
      type: object
      properties:
        signature_type:
          type: string
          example: PGP
        signature:
          type: string
      description: API_Entities_TagSignature model
    postApiV4ProjectsIdWikis:
      required:
        - content
        - title
      type: object
      properties:
        title:
          type: string
          description: Title of a wiki page
        front_matter:
          type: object
          properties:
            title:
              type: string
              description: Front matter title of a wiki page
        content:
          type: string
          description: Content of a wiki page
        format:
          type: string
          description: Format of a wiki page. Available formats are markdown, rdoc, asciidoc and org
          default: markdown
          enum:
            - markdown
            - rdoc
            - asciidoc
            - org
      description: Create a wiki page
    putApiV4ProjectsIdWikisSlug:
      type: object
      properties:
        title:
          type: string
          description: Title of a wiki page
        front_matter:
          type: object
          properties:
            title:
              type: string
              description: Front matter title of a wiki page
        content:
          type: string
          description: Content of a wiki page
        format:
          type: string
          description: Format of a wiki page. Available formats are markdown, rdoc, asciidoc and org
          default: markdown
          enum:
            - markdown
            - rdoc
            - asciidoc
            - org
      description: Update a wiki page
    postApiV4ProjectsIdWikisAttachments:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The attachment file to be uploaded
          format: binary
        branch:
          type: string
          description: The name of the branch
      description: Upload an attachment to the wiki repository
    API_Entities_MetricImage:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 23
        created_at:
          type: string
          format: date-time
          example: "2020-11-13T00:06:18.084Z"
        filename:
          type: string
          example: file.png
        file_path:
          type: string
          example: /uploads/-/system/alert_metric_image/file/23/file.png
        url:
          type: string
          example: https://example.com/metric
        url_text:
          type: string
          example: An example metric
      description: API_Entities_MetricImage model
    API_Entities_Clusters_AgentTokenBasic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        agent_id:
          type: string
        status:
          type: string
        created_at:
          type: string
        created_by_user_id:
          type: string
      description: API_Entities_Clusters_AgentTokenBasic model
    API_Entities_Clusters_AgentToken:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        agent_id:
          type: string
        status:
          type: string
        created_at:
          type: string
        created_by_user_id:
          type: string
        last_used_at:
          type: string
      description: API_Entities_Clusters_AgentToken model
    postApiV4ProjectsIdClusterAgentsAgentIdTokens:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name for the token
        description:
          type: string
          description: The description for the token
      description: Create an agent token
    API_Entities_Clusters_AgentTokenWithToken:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        agent_id:
          type: string
        status:
          type: string
        created_at:
          type: string
        created_by_user_id:
          type: string
        last_used_at:
          type: string
        token:
          type: string
      description: API_Entities_Clusters_AgentTokenWithToken model
    postApiV4ProjectsIdPackagesComposer:
      type: object
      properties:
        branch:
          type: string
          description: The name of the branch
          example: release
        tag:
          type: string
          description: The name of the tag
          example: v1.0.0
      description: Composer packages endpoint for registering packages
    API_Entities_ConanPackage_ConanPackageSnapshot:
      type: object
      properties:
        package_snapshot:
          type: object
          properties: {}
          example: '{ "conan_package.tgz": "749b29bdf72587081ca03ec033ee59dc" }'
      description: API_Entities_ConanPackage_ConanPackageSnapshot model
    API_Entities_ConanPackage_ConanRecipeSnapshot:
      type: object
      properties:
        recipe_snapshot:
          type: object
          properties: {}
          example: '{ "conan_sources.tgz": "eadf19b33f4c3c7e113faabf26e76277" }'
      description: API_Entities_ConanPackage_ConanRecipeSnapshot model
    API_Entities_ConanPackage_ConanPackageManifest:
      type: object
      properties:
        package_urls:
          type: object
          properties: {}
          example: '{ "conan_package.tgz": "https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/packages/103f6067a947f366ef91fc1b7da351c588d1827f/0/conan_package.tgz"'
      description: API_Entities_ConanPackage_ConanPackageManifest model
    API_Entities_ConanPackage_ConanRecipeManifest:
      type: object
      properties:
        recipe_urls:
          type: object
          properties: {}
          example: '{ "conan_sources.tgz": "https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/0/export/conan_sources.tgz" }'
      description: API_Entities_ConanPackage_ConanRecipeManifest model
    API_Entities_ConanPackage_ConanUploadUrls:
      type: object
      properties:
        upload_urls:
          type: object
          properties: {}
          example: '{ "conan_package.tgz": "https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/0/package/103f6067a947f366ef91fc1b7da351c588d1827f/0/conan_package.tgz" }'
      description: API_Entities_ConanPackage_ConanUploadUrls model
    putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Upload recipe package files
    putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Upload package files
    putApiV4ProjectsIdPackagesDebianFileName:
      required:
        - component
        - file
      type: object
      properties:
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
        distribution:
          type: string
          description: The Debian Codename or Suite
        component:
          type: string
          description: The Debian Component
      description: Upload Debian package
    putApiV4ProjectsIdPackagesDebianFileNameAuthorize:
      required:
        - component
      type: object
      properties:
        distribution:
          type: string
          description: The Debian Codename or Suite
        component:
          type: string
          description: The Debian Component
      description: Authorize Debian package upload
    API_Entities_ErrorTracking_ClientKey:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        active:
          type: boolean
        public_key:
          type: string
          example: glet_aa77551d849c083f76d0bc545ed053a3
        sentry_dsn:
          type: string
          example: https://glet_aa77551d849c083f76d0bc545ed053a3@example.com/errortracking/api/v1/projects/5
      description: API_Entities_ErrorTracking_ClientKey model
    API_Entities_FeatureFlag:
      type: object
      properties:
        name:
          type: string
          example: merge_train
        description:
          type: string
          example: merge train feature flag
        active:
          type: boolean
        version:
          type: string
          example: new_version_flag
        created_at:
          type: string
          format: date-time
          example: "2019-11-04T08:13:51.423Z"
        updated_at:
          type: string
          format: date-time
          example: "2019-11-04T08:13:51.423Z"
        scopes:
          type: string
        strategies:
          $ref: '#/components/schemas/API_Entities_FeatureFlag_Strategy'
      description: API_Entities_FeatureFlag model
    API_Entities_FeatureFlag_Strategy:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: userWithId
        parameters:
          type: string
          example: '{"userIds": "user1"}'
        scopes:
          $ref: '#/components/schemas/API_Entities_FeatureFlag_Scope'
        user_list:
          $ref: '#/components/schemas/API_Entities_FeatureFlag_BasicUserList'
    API_Entities_FeatureFlag_Scope:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        environment_scope:
          type: string
          example: production
    API_Entities_FeatureFlag_BasicUserList:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        iid:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: user_list
        user_xids:
          type: string
          example: user1,user2
    postApiV4ProjectsIdFeatureFlags:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the feature flag
        description:
          type: string
          description: The description of the feature flag
        active:
          type: boolean
          description: The active state of the flag. Defaults to `true`. Supported in GitLab 13.3 and later
        version:
          type: string
          description: The version of the feature flag. Must be `new_version_flag`. Omit to create a Legacy feature flag.
        strategies:
          type: array
          items:
            required:
              - name
            type: object
            properties:
              name:
                type: string
                description: The strategy name. Can be `default`, `gradualRolloutUserId`, `userWithId`, or `gitlabUserList`. In GitLab 13.5 and later, can be `flexibleRollout`
              parameters:
                type: string
                description: The strategy parameters as a JSON-formatted string e.g. `{"userIds":"user1"}`
              user_list_id:
                type: integer
                description: The ID of the feature flag user list. If strategy is `gitlabUserList`.
                format: int32
              scopes:
                type: array
                items:
                  required:
                    - environment_scope
                  type: object
                  properties:
                    environment_scope:
                      type: string
                      description: The environment scope of the scope
      description: Create a new feature flag
    putApiV4ProjectsIdFeatureFlagsFeatureFlagName:
      type: object
      properties:
        name:
          type: string
          description: The new name of the feature flag. Supported in GitLab 13.3 and later
        description:
          type: string
          description: The description of the feature flag
        active:
          type: boolean
          description: The active state of the flag. Supported in GitLab 13.3 and later
        strategies:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The feature flag strategy ID
                format: int32
              name:
                type: string
                description: The strategy name
              parameters:
                type: string
                description: The strategy parameters as a JSON-formatted string e.g. `{"userIds":"user1"}`
              user_list_id:
                type: integer
                description: The ID of the feature flag user list
                format: int32
              _destroy:
                type: boolean
                description: Delete the strategy when true
              scopes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The scope id
                      format: int32
                    environment_scope:
                      type: string
                      description: The environment scope of the scope
                    _destroy:
                      type: boolean
                      description: Delete the scope when true
      description: Update a feature flag
    API_Entities_FeatureFlag_UserList:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        iid:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: user_list
        user_xids:
          type: string
          example: user1,user2
        project_id:
          type: integer
          format: int32
          example: 2
        created_at:
          type: string
          format: date-time
          example: "2020-02-04T08:13:10.507Z"
        updated_at:
          type: string
          format: date-time
          example: "2020-02-04T08:13:10.507Z"
        path:
          type: string
        edit_path:
          type: string
      description: API_Entities_FeatureFlag_UserList model
    postApiV4ProjectsIdFeatureFlagsUserLists:
      required:
        - name
        - user_xids
      type: object
      properties:
        name:
          type: string
          description: The name of the list
        user_xids:
          type: string
          description: A comma separated list of external user ids
      description: Create a feature flag user list
    putApiV4ProjectsIdFeatureFlagsUserListsIid:
      type: object
      properties:
        name:
          type: string
          description: The name of the list
        user_xids:
          type: string
          description: A comma separated list of external user ids
      description: Update a feature flag user list
    putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize:
      required:
        - package_version
        - path
      type: object
      properties:
        package_version:
          type: string
          description: Package version
        status:
          type: string
          description: Package status
          enum:
            - default
            - hidden
        path:
          type: integer
          format: int32
      description: Workhorse authorize generic package file
    putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName:
      required:
        - file
        - package_version
      type: object
      properties:
        package_version:
          type: string
          description: Package version
        path:
          type: string
          description: File directory path
        status:
          type: string
          description: Package status
          enum:
            - default
            - hidden
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
        select:
          type: string
          enum:
            - package_file
      description: Upload package file
    API_Entities_GoModuleVersion:
      type: object
      properties:
        Version:
          type: string
          example: v1.0.0
        Time:
          type: string
          example: 1617822312 -0600
      description: API_Entities_GoModuleVersion model
    postApiV4ProjectsIdPackagesHelmApiChannelCharts:
      required:
        - chart
      type: object
      properties:
        chart:
          type: file
          description: The chart file to be published (generated by Multipart middleware)
          format: binary
      description: Upload a chart
    API_Entities_MergeRequestApprovals:
      type: object
      properties:
        user_has_approved:
          type: boolean
        user_can_approve:
          type: boolean
        approved:
          type: boolean
        approved_by:
          $ref: '#/components/schemas/API_Entities_Approvals'
      description: API_Entities_MergeRequestApprovals model
    API_Entities_Approvals:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/API_Entities_UserBasic'
    postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove:
      type: object
      properties:
        sha:
          type: string
          description: When present, must have the HEAD SHA of the source branch
        approval_password:
          type: string
          description: Current user's password if project is set to require explicit auth on approval
          example: secret
      description: Approve a merge request
    EE_API_Entities_MergeRequestApprovalState:
      type: object
      properties:
        approval_rules_overwritten:
          type: boolean
        rules:
          type: array
          items:
            $ref: '#/components/schemas/EE_API_Entities_MergeRequestApprovalStateRule'
      description: EE_API_Entities_MergeRequestApprovalState model
    EE_API_Entities_MergeRequestApprovalStateRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: QA
        rule_type:
          type: string
          example: regular
        eligible_approvers:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_UserBasic'
        approvals_required:
          type: integer
          format: int32
          example: 2
        users:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_UserBasic'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Group'
        contains_hidden_groups:
          type: boolean
        section:
          type: string
          example: Backend
        source_rule:
          $ref: '#/components/schemas/EE_API_Entities_MergeRequestApprovalRule_SourceRule'
        overridden:
          type: boolean
        code_owner:
          type: boolean
        approved_by:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_UserBasic'
        approved:
          type: boolean
    EE_API_Entities_MergeRequestApprovalRule_SourceRule:
      type: object
      properties:
        approvals_required:
          type: integer
          format: int32
          example: 2
    postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals:
      required:
        - approvals_required
      type: object
      properties:
        approvals_required:
          type: integer
          description: The amount of approvals required. Must be higher than the project approvals
          format: int32
          example: 2
      description: 'Deprecated in 16.0: Use the merge request approvals API instead. Change approval-related configuration'
    EE_API_Entities_ApprovalState:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 84
        iid:
          type: integer
          format: int32
          example: 14
        project_id:
          type: integer
          format: int32
          example: 4
        title:
          type: string
          example: Impedit et ut et dolores vero provident ullam est
        description:
          type: string
          example: Repellendus impedit et vel velit dignissimos.
        state:
          type: string
          example: closed
        created_at:
          type: string
          format: date-time
          example: "2022-08-17T12:46:35.053Z"
        updated_at:
          type: string
          format: date-time
          example: "2022-11-14T17:22:01.47Z"
        merge_status:
          type: string
          example: can_be_merged
        approved:
          type: boolean
        approvals_required:
          type: integer
          format: int32
          example: 2
        approvals_left:
          type: integer
          format: int32
          example: 2
        require_password_to_approve:
          type: boolean
        approved_by:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_Approvals'
        suggested_approvers:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_UserBasic'
        approvers:
          type: string
        approver_groups:
          type: string
        user_has_approved:
          type: boolean
        user_can_approve:
          type: boolean
        approval_rules_left:
          type: array
          items:
            $ref: '#/components/schemas/EE_API_Entities_ApprovalRuleShort'
        has_approval_rules:
          type: boolean
        merge_request_approvers_available:
          type: boolean
        multiple_approval_rules_available:
          type: boolean
        invalid_approvers_rules:
          type: array
          items:
            $ref: '#/components/schemas/EE_API_Entities_ApprovalRuleShort'
      description: EE_API_Entities_ApprovalState model
    EE_API_Entities_ApprovalRuleShort:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: QA
        rule_type:
          type: string
          example: regular
    putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize:
      type: object
      properties:
        path:
          type: string
          description: File directory path
        status:
          type: string
          description: Package status
          enum:
            - default
            - hidden
      description: Workhorse authorize model package file
    putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName:
      required:
        - file
      type: object
      properties:
        path:
          type: string
          description: File directory path
        status:
          type: string
          description: Package status
          enum:
            - default
            - hidden
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Workhorse upload model package file
    putApiV4ProjectsIdPackagesNpmPackageName:
      required:
        - versions
      type: object
      properties:
        versions:
          type: object
          properties: {}
          description: Package version info
      description: Create or deprecate NPM package
    putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag:
      required:
        - package_name
      type: object
      properties:
        package_name:
          type: string
          description: Package name
      description: Create or Update the given tag for the given NPM package and version
    putApiV4ProjectsIdPackagesNuget:
      required:
        - package
      type: object
      properties:
        package:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: The NuGet V3 Feed Package Publish endpoint
    putApiV4ProjectsIdPackagesNugetSymbolpackage:
      required:
        - package
      type: object
      properties:
        package:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: The NuGet Symbol Package Publish endpoint
    putApiV4ProjectsIdPackagesNugetV2:
      required:
        - package
      type: object
      properties:
        package:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: The NuGet V2 Feed Package Publish endpoint
    API_Entities_Nuget_PackagesVersions:
      type: object
      properties:
        versions:
          type: array
          items:
            type: string
            example: 1.3.0.17
      description: API_Entities_Nuget_PackagesVersions model
    postApiV4ProjectsIdDebianDistributions:
      required:
        - codename
      type: object
      properties:
        codename:
          type: string
          description: The Debian Codename
          example: sid
        suite:
          type: string
          description: The Debian Suite
          example: unstable
        origin:
          type: string
          description: The Debian Origin
          example: Grep
        label:
          type: string
          description: The Debian Label
          example: grep.be
        version:
          type: string
          description: The Debian Version
          example: "12"
        description:
          type: string
          description: The Debian Description
          example: My description
        valid_time_duration_seconds:
          type: integer
          description: The duration before the Release file should be considered expired by the client
          format: int32
          example: 604800
        components:
          type: array
          description: The list of Components
          example: main
          items:
            type: string
        architectures:
          type: array
          description: The list of Architectures
          example: amd64
          items:
            type: string
      description: Create a Debian Distribution
    putApiV4ProjectsIdDebianDistributionsCodename:
      type: object
      properties:
        suite:
          type: string
          description: The Debian Suite
          example: unstable
        origin:
          type: string
          description: The Debian Origin
          example: Grep
        label:
          type: string
          description: The Debian Label
          example: grep.be
        version:
          type: string
          description: The Debian Version
          example: "12"
        description:
          type: string
          description: The Debian Description
          example: My description
        valid_time_duration_seconds:
          type: integer
          description: The duration before the Release file should be considered expired by the client
          format: int32
          example: 604800
        components:
          type: array
          description: The list of Components
          example: main
          items:
            type: string
        architectures:
          type: array
          description: The list of Architectures
          example: amd64
          items:
            type: string
      description: Update a Debian Distribution
    postApiV4ProjectsIdPackagesPypi:
      required:
        - content
        - name
        - version
      type: object
      properties:
        content:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
        name:
          type: string
          example: my.pypi.package
        version:
          type: string
          example: 1.3.7
        requires_python:
          type: string
          example: '>=3.7'
        md5_digest:
          type: string
          example: 900150983cd24fb0d6963f7d28e17f72
        sha256_digest:
          type: string
          example: ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad
        metadata_version:
          type: string
          example: "2.3"
        author_email:
          type: string
          example: cschultz@example.com, snoopy@peanuts.com
        description:
          type: string
        description_content_type:
          type: string
          example: text/markdown; charset=UTF-8; variant=GFM
        summary:
          type: string
          example: A module for collecting votes from beagles.
        keywords:
          type: string
          example: dog,puppy,voting,election
      description: The PyPi Package upload endpoint
    postApiV4ProjectsIdReleasesTagNameAssetsLinks:
      required:
        - name
        - url
      type: object
      properties:
        name:
          type: string
          description: The name of the link. Link names must be unique in the release
        url:
          type: string
          description: The URL of the link. Link URLs must be unique in the release.
        direct_asset_path:
          type: string
          description: Optional path for a direct asset link
        filepath:
          type: string
          description: 'Deprecated: optional path for a direct asset link'
        link_type:
          type: string
          description: 'The type of the link: `other`, `runbook`, `image`, or `package`. Defaults to `other`'
          default: other
          enum:
            - other
            - runbook
            - image
            - package
      description: Create a release link
    putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId:
      type: object
      properties:
        name:
          type: string
          description: The name of the link
        url:
          type: string
          description: The URL of the link
        direct_asset_path:
          type: string
          description: Optional path for a direct asset link
        filepath:
          type: string
          description: 'Deprecated: optional path for a direct asset link'
        link_type:
          type: string
          description: 'The type of the link: `other`, `runbook`, `image`, or `package`. Defaults to `other`'
          default: other
          enum:
            - other
            - runbook
            - image
            - package
      description: Update a release link
    postApiV4ProjectsIdPackagesRubygemsApiV1Gems:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Upload a gem
    putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize:
      required:
        - module_version
      type: object
      properties:
        module_version:
          type: string
          description: Module version
      description: Workhorse authorize Terraform Module package file
    postApiV4ProjectsIdTerraformStateNameLock:
      required:
        - Created
        - ID
        - Info
        - Operation
        - Path
        - Version
        - Who
      type: object
      properties:
        ID:
          type: string
          description: Terraform state lock ID
        Operation:
          type: string
          description: Terraform operation
        Info:
          type: string
          description: Terraform info
        Who:
          type: string
          description: Terraform state lock owner
        Version:
          type: string
          description: Terraform version
        Created:
          type: string
          description: Terraform state lock timestamp
        Path:
          type: string
          description: Terraform path
      description: Lock a Terraform state of a certain name
    putApiV4ProjectsIdHooksHookIdUrlVariablesKey:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the variable
      description: Set a url variable
    API_Entities_BatchedBackgroundMigration:
      type: object
      properties:
        id:
          type: string
          example: "1234"
        job_class_name:
          type: string
          example: CopyColumnUsingBackgroundMigrationJob
        table_name:
          type: string
          example: events
        column_name:
          type: string
          example: id
        status:
          type: string
          example: active
        progress:
          type: number
          format: float
          example: 50
        created_at:
          type: string
          format: date-time
          example: "2022-11-28T16:26:39+02:00"
      description: API_Entities_BatchedBackgroundMigration model
    putApiV4AdminBatchedBackgroundMigrationsIdResume:
      type: object
      properties:
        database:
          type: string
          description: The name of the database
          default: main
          enum:
            - main
            - ci
            - main_clusterwide
            - embedding
            - geo
      description: Resume a batched background migration
    putApiV4AdminBatchedBackgroundMigrationsIdPause:
      type: object
      properties:
        database:
          type: string
          description: The name of the database
          default: main
          enum:
            - main
            - ci
            - main_clusterwide
            - embedding
            - geo
      description: Pause a batched background migration
    postApiV4AdminCiVariables:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: The key of the variable. Max 255 characters
        description:
          type: string
          description: The description of the variable
        value:
          type: string
          description: The value of a variable
        protected:
          type: boolean
          description: Whether the variable is protected
        masked:
          type: boolean
          description: Whether the variable is masked
        raw:
          type: boolean
          description: Whether the variable will be expanded
        variable_type:
          type: string
          description: 'The type of a variable. Available types are: env_var (default) and file'
          enum:
            - env_var
            - file
      description: Create a new instance-level variable
    putApiV4AdminCiVariablesKey:
      type: object
      properties:
        description:
          type: string
          description: The description of the variable
        value:
          type: string
          description: The value of a variable
        protected:
          type: boolean
          description: Whether the variable is protected
        masked:
          type: boolean
          description: Whether the variable is masked
        raw:
          type: boolean
          description: Whether the variable will be expanded
        variable_type:
          type: string
          description: 'The type of a variable. Available types are: env_var (default) and file'
          enum:
            - env_var
            - file
      description: Update an instance-level variable
    API_Entities_Dictionary_Table:
      type: object
      properties:
        table_name:
          type: string
          example: users
        feature_categories:
          type: array
          items:
            type: string
            example: database
      description: API_Entities_Dictionary_Table model
    postApiV4AdminClustersAdd:
      required:
        - name
        - platform_kubernetes_attributes
      type: object
      properties:
        name:
          type: string
          description: Cluster name
        enabled:
          type: boolean
          description: Determines if cluster is active or not, defaults to true
          default: true
        environment_scope:
          type: string
          description: The associated environment to the cluster
          default: '*'
        namespace_per_environment:
          type: boolean
          description: Deploy each environment to a separate Kubernetes namespace
          default: true
        domain:
          type: string
          description: Cluster base domain
        management_project_id:
          type: integer
          description: The ID of the management project
          format: int32
        managed:
          type: boolean
          description: Determines if GitLab will manage namespaces and service accounts for this cluster, defaults to true
          default: true
        platform_kubernetes_attributes:
          required:
            - api_url
            - token
          type: object
          properties:
            api_url:
              type: string
              description: URL to access the Kubernetes API
            token:
              type: string
              description: Token to authenticate against Kubernetes
            ca_cert:
              type: string
              description: TLS certificate (needed if API is using a self-signed TLS certificate)
            namespace:
              type: string
              description: Unique namespace related to Project
            authorization_type:
              type: string
              description: Cluster authorization type, defaults to RBAC
              default: rbac
              enum:
                - unknown_authorization
                - rbac
                - abac
          description: Platform Kubernetes data
      description: Add existing instance cluster
    putApiV4AdminClustersClusterId:
      type: object
      properties:
        name:
          type: string
          description: Cluster name
        enabled:
          type: boolean
          description: Enable or disable Gitlab's connection to your Kubernetes cluster
        environment_scope:
          type: string
          description: The associated environment to the cluster
        namespace_per_environment:
          type: boolean
          description: Deploy each environment to a separate Kubernetes namespace
          default: true
        domain:
          type: string
          description: Cluster base domain
        management_project_id:
          type: integer
          description: The ID of the management project
          format: int32
        managed:
          type: boolean
          description: Determines if GitLab will manage namespaces and service accounts for this cluster
        platform_kubernetes_attributes:
          type: object
          properties:
            api_url:
              type: string
              description: URL to access the Kubernetes API
            token:
              type: string
              description: Token to authenticate against Kubernetes
            ca_cert:
              type: string
              description: TLS certificate (needed if API is using a self-signed TLS certificate)
            namespace:
              type: string
              description: Unique namespace related to Project
          description: Platform Kubernetes data
      description: Edit instance cluster
    postApiV4AdminMigrationsTimestampMark:
      type: object
      properties:
        database:
          type: string
          description: The name of the database
          default: main
          enum:
            - main
            - ci
            - main_clusterwide
            - embedding
            - geo
      description: Mark the migration as successfully executed
    API_Entities_System_BroadcastMessage:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        starts_at:
          type: string
        ends_at:
          type: string
        color:
          type: string
        font:
          type: string
        target_access_levels:
          type: string
        target_path:
          type: string
        broadcast_type:
          type: string
        dismissable:
          type: string
        active:
          type: string
      description: API_Entities_System_BroadcastMessage model
    postApiV4BroadcastMessages:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Message to display
        starts_at:
          type: string
          description: Starting time
          format: date-time
        ends_at:
          type: string
          description: Ending time
          format: date-time
        color:
          type: string
          description: Background color
        font:
          type: string
          description: Foreground color
        target_access_levels:
          type: array
          description: Target user roles
          items:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        target_path:
          type: string
          description: Target path
        broadcast_type:
          type: string
          description: Broadcast type. Defaults to banner
          default: ""
          enum:
            - banner
            - notification
        dismissable:
          type: boolean
          description: Is dismissable
      description: Create a broadcast message
    putApiV4BroadcastMessagesId:
      type: object
      properties:
        message:
          type: string
          description: Message to display
        starts_at:
          type: string
          description: Starting time
          format: date-time
        ends_at:
          type: string
          description: Ending time
          format: date-time
        color:
          type: string
          description: Background color
        font:
          type: string
          description: Foreground color
        target_access_levels:
          type: array
          description: Target user roles
          items:
            type: integer
            format: int32
            enum:
              - 10
              - 20
              - 30
              - 40
              - 50
        target_path:
          type: string
          description: Target path
        broadcast_type:
          type: string
          description: Broadcast Type
          enum:
            - banner
            - notification
        dismissable:
          type: boolean
          description: Is dismissable
      description: Update a broadcast message
    postApiV4Applications:
      required:
        - name
        - redirect_uri
        - scopes
      type: object
      properties:
        name:
          type: string
          description: Name of the application.
          example: MyApplication
        redirect_uri:
          type: string
          description: Redirect URI of the application.
          example: https://redirect.uri
        scopes:
          type: string
          description: |-
            Scopes of the application. You can specify multiple scopes by separating\
                                             each scope using a space
        confidential:
          type: boolean
          description: |-
            The application is used where the client secret can be kept confidential. Native mobile apps \
                                    and Single Page Apps are considered non-confidential. Defaults to true if not supplied
          default: true
      description: Create a new application
    API_Entities_ApplicationWithSecret:
      type: object
      properties:
        id:
          type: string
        application_id:
          type: string
          example: 5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737
        application_name:
          type: string
          example: MyApplication
        callback_url:
          type: string
          example: https://redirect.uri
        confidential:
          type: boolean
          example: true
        secret:
          type: string
          example: ee1dd64b6adc89cf7e2c23099301ccc2c61b441064e9324d963c46902a85ec34
      description: API_Entities_ApplicationWithSecret model
    API_Entities_Application:
      type: object
      properties:
        id:
          type: string
        application_id:
          type: string
          example: 5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737
        application_name:
          type: string
          example: MyApplication
        callback_url:
          type: string
          example: https://redirect.uri
        confidential:
          type: boolean
          example: true
      description: API_Entities_Application model
    API_Entities_Avatar:
      type: object
      properties:
        avatar_url:
          type: string
      description: API_Entities_Avatar model
    API_Entities_BulkImport:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        status:
          type: string
          example: finished
          enum:
            - created
            - started
            - finished
            - timeout
            - failed
        source_type:
          type: string
          example: gitlab
        created_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        updated_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        has_failures:
          type: boolean
          example: false
      description: API_Entities_BulkImport model
    API_Entities_BulkImports:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        bulk_import_id:
          type: integer
          format: int32
          example: 1
        status:
          type: string
          example: created
          enum:
            - created
            - started
            - finished
            - timeout
            - failed
        entity_type:
          type: string
          enum:
            - group
            - project
        source_full_path:
          type: string
          example: source_group
        destination_full_path:
          type: string
          example: some_group/source_project
        destination_name:
          type: string
          example: destination_slug
        destination_slug:
          type: string
          example: destination_slug
        destination_namespace:
          type: string
          example: destination_path
        parent_id:
          type: integer
          format: int32
          example: 1
        namespace_id:
          type: integer
          format: int32
          example: 1
        project_id:
          type: integer
          format: int32
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        updated_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        failures:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_BulkImports_EntityFailure'
        migrate_projects:
          type: boolean
          example: true
        has_failures:
          type: boolean
          example: false
        stats:
          type: object
          properties: {}
      description: API_Entities_BulkImports model
    API_Entities_BulkImports_EntityFailure:
      type: object
      properties:
        relation:
          type: string
          example: label
        exception_message:
          type: string
          example: error message
        exception_class:
          type: string
          example: Exception
        correlation_id_value:
          type: string
          example: dfcf583058ed4508e4c7c617bd7f0edd
        source_url:
          type: string
          example: https://source.gitlab.com/group/-/epics/1
        source_title:
          type: string
          example: title
      description: API_Entities_BulkImports_EntityFailure model
    postApiV4Runners:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: Registration token
        description:
          type: string
          description: Description of the runner
        maintainer_note:
          type: string
          description: 'Deprecated: see `maintenance_note`'
        maintenance_note:
          type: string
          description: Free-form maintenance notes for the runner (1024 characters)
        info:
          type: object
          properties:
            name:
              type: string
              description: Runner's name
            version:
              type: string
              description: Runner's version
            revision:
              type: string
              description: Runner's revision
            platform:
              type: string
              description: Runner's platform
            architecture:
              type: string
              description: Runner's architecture
          description: Runner's metadata
        active:
          type: boolean
          description: 'Deprecated: Use `paused` instead. Specifies if the runner is allowed to receive new jobs'
        paused:
          type: boolean
          description: Specifies if the runner should ignore new jobs
        locked:
          type: boolean
          description: Specifies if the runner should be locked for the current project
        access_level:
          type: string
          description: The access level of the runner
          enum:
            - not_protected
            - ref_protected
        run_untagged:
          type: boolean
          description: Specifies if the runner should handle untagged jobs
        tag_list:
          type: array
          description: A list of runner tags
          items:
            type: string
        maximum_timeout:
          type: integer
          description: Maximum timeout that limits the amount of time (in seconds) that runners can run jobs
          format: int32
      description: Register a new runner
    API_Entities_Ci_RunnerRegistrationDetails:
      type: object
      properties:
        id:
          type: string
        token:
          type: string
        token_expires_at:
          type: string
      description: API_Entities_Ci_RunnerRegistrationDetails model
    postApiV4RunnersVerify:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The runner's authentication token
        system_id:
          type: string
          description: The runner's system identifier
      description: Validate authentication credentials
    postApiV4RunnersResetAuthenticationToken:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: The current authentication token of the runner
      description: Reset runner authentication token with current token
    API_Entities_Ci_RunnerDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 8
        description:
          type: string
          example: test-1-20150125
        ip_address:
          type: string
          example: 127.0.0.1
        active:
          type: boolean
          example: true
        paused:
          type: boolean
          example: false
        is_shared:
          type: boolean
          example: true
        runner_type:
          type: string
          example: instance_type
          enum:
            - instance_type
            - group_type
            - project_type
        name:
          type: string
          example: test
        online:
          type: boolean
          example: true
        status:
          type: string
          example: online
        tag_list:
          type: string
        run_untagged:
          type: string
        locked:
          type: string
        maximum_timeout:
          type: string
        access_level:
          type: string
        version:
          type: string
        revision:
          type: string
        platform:
          type: string
        architecture:
          type: string
        contacted_at:
          type: string
        maintenance_note:
          type: string
        projects:
          $ref: '#/components/schemas/API_Entities_BasicProjectDetails'
        groups:
          $ref: '#/components/schemas/API_Entities_BasicGroupDetails'
      description: API_Entities_Ci_RunnerDetails model
    putApiV4RunnersId:
      type: object
      properties:
        description:
          type: string
          description: The description of the runner
        active:
          type: boolean
          description: 'Deprecated: Use `paused` instead. Flag indicating whether the runner is allowed to receive jobs'
        paused:
          type: boolean
          description: Specifies if the runner should ignore new jobs
        tag_list:
          type: array
          description: The list of tags for a runner
          example: '[''macos'', ''shell'']'
          items:
            type: string
        run_untagged:
          type: boolean
          description: Specifies if the runner can execute untagged jobs
        locked:
          type: boolean
          description: Specifies if the runner is locked
        access_level:
          type: string
          description: The access level of the runner
          enum:
            - not_protected
            - ref_protected
        maximum_timeout:
          type: integer
          description: Maximum timeout that limits the amount of time (in seconds) that runners can run jobs
          format: int32
        maintenance_note:
          type: string
          description: Free-form maintenance notes for the runner (1024 characters)
      description: Update runner's details
    API_Entities_Ci_JobBasicWithProject:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        status:
          type: string
          example: waiting_for_resource
        stage:
          type: string
          example: deploy
        name:
          type: string
          example: deploy_to_production
        ref:
          type: string
          example: main
        tag:
          type: boolean
        coverage:
          type: number
          format: float
          example: 98.29
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
          example: "2015-12-24T15:51:21.88Z"
        started_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:30.733Z"
        finished_at:
          type: string
          format: date-time
          example: "2015-12-24T17:54:31.198Z"
        erased_at:
          type: string
          format: date-time
          example: "2015-12-24T18:00:29.728Z"
        duration:
          type: number
          description: Time spent running
          format: float
          example: 0.465
        queued_duration:
          type: number
          description: Time spent enqueued
          format: float
          example: 0.123
        user:
          $ref: '#/components/schemas/API_Entities_User'
        commit:
          $ref: '#/components/schemas/API_Entities_Commit'
        pipeline:
          $ref: '#/components/schemas/API_Entities_Ci_PipelineBasic'
        failure_reason:
          type: string
          example: script_failure
        web_url:
          type: string
          example: https://example.com/foo/bar/-/jobs/1
        project:
          $ref: '#/components/schemas/API_Entities_ProjectIdentity'
      description: API_Entities_Ci_JobBasicWithProject model
    postApiV4JobsRequest:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: Runner's authentication token
        system_id:
          type: string
          description: Runner's system identifier
        last_update:
          type: string
          description: Runner's queue last_update token
        info:
          type: object
          properties:
            name:
              type: string
              description: Runner's name
            version:
              type: string
              description: Runner's version
            revision:
              type: string
              description: Runner's revision
            platform:
              type: string
              description: Runner's platform
            architecture:
              type: string
              description: Runner's architecture
            executor:
              type: string
              description: Runner's executor
            features:
              type: object
              properties: {}
              description: Runner's features
            config:
              type: object
              properties:
                gpus:
                  type: string
                  description: GPUs enabled
              description: Runner's config
          description: Runner's metadata
        session:
          type: object
          properties:
            url:
              type: string
              description: Session's url
            certificate:
              type: string
              description: Session's certificate
            authorization:
              type: string
              description: Session's authorization
          description: Runner's session data
      description: Request a job
    putApiV4JobsId:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: Job token
        state:
          type: string
          description: 'Job''s status: success, failed'
        checksum:
          type: string
          description: Job's trace CRC32 checksum
        failure_reason:
          type: string
          description: Job's failure_reason
        output:
          type: object
          properties:
            checksum:
              type: string
              description: Job's trace CRC32 checksum
            bytesize:
              type: integer
              description: Job's trace size in bytes
              format: int32
          description: Build log state
        exit_code:
          type: integer
          description: Job's exit code
          format: int32
      description: Update a job
    patchApiV4JobsIdTrace:
      type: object
      properties:
        token:
          type: string
          description: Job's authentication token
        debug_trace:
          type: boolean
          description: Enable or Disable the debug trace
      description: Append a patch to the job trace
    postApiV4JobsIdArtifactsAuthorize:
      type: object
      properties:
        token:
          type: string
          description: Job's authentication token
        filesize:
          type: integer
          description: Size of artifact file
          format: int32
        artifact_type:
          type: string
          description: The type of artifact
          default: archive
          enum:
            - archive
            - metadata
            - trace
            - junit
            - sast
            - dependency_scanning
            - container_scanning
            - dast
            - codequality
            - license_scanning
            - performance
            - metrics
            - metrics_referee
            - network_referee
            - lsif
            - dotenv
            - cobertura
            - terraform
            - accessibility
            - cluster_applications
            - secret_detection
            - requirements
            - coverage_fuzzing
            - browser_performance
            - load_performance
            - api_fuzzing
            - cluster_image_scanning
            - cyclonedx
            - requirements_v2
            - annotations
            - repository_xray
      description: Authorize uploading job artifact
    postApiV4JobsIdArtifacts:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The artifact file to store (generated by Multipart middleware)
          format: binary
        token:
          type: string
          description: Job's authentication token
        expire_in:
          type: string
          description: Specify when artifact should expire
        artifact_type:
          type: string
          description: The type of artifact
          default: archive
          enum:
            - archive
            - metadata
            - trace
            - junit
            - sast
            - dependency_scanning
            - container_scanning
            - dast
            - codequality
            - license_scanning
            - performance
            - metrics
            - metrics_referee
            - network_referee
            - lsif
            - dotenv
            - cobertura
            - terraform
            - accessibility
            - cluster_applications
            - secret_detection
            - requirements
            - coverage_fuzzing
            - browser_performance
            - load_performance
            - api_fuzzing
            - cluster_image_scanning
            - cyclonedx
            - requirements_v2
            - annotations
            - repository_xray
        artifact_format:
          type: string
          description: The format of artifact
          default: zip
          enum:
            - raw
            - zip
            - gzip
        metadata:
          type: file
          description: The artifact metadata to store (generated by Multipart middleware)
          format: binary
        accessibility:
          type: string
          description: Specify accessibility level of artifact private/public
      description: Upload a job artifact
    putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Upload recipe package files
    putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName:
      required:
        - file
      type: object
      properties:
        file:
          type: file
          description: The package file to be published (generated by Multipart middleware)
          format: binary
      description: Upload package files
    putApiV4PackagesNpmPackage*packageNameDistTagsTag:
      required:
        - package_name
      type: object
      properties:
        package_name:
          type: string
          description: Package name
      description: Create or Update the given tag for the given NPM package and version
    API_Entities_Terraform_ModuleVersions:
      type: object
      properties:
        modules:
          type: string
      description: API_Entities_Terraform_ModuleVersions model
    API_Entities_Terraform_ModuleVersion:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        providers:
          type: string
        root:
          type: string
        source:
          type: string
        submodules:
          type: string
        version:
          type: string
        versions:
          type: string
      description: API_Entities_Terraform_ModuleVersion model
    putApiV4UsersIdCustomAttributesKey:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the custom attribute
      description: Set a custom attribute on a user
    postApiV4Users:
      required:
        - email
        - name
        - username
      type: object
      properties:
        email:
          type: string
          description: The email of the user
        password:
          type: string
          description: The password of the new user
        reset_password:
          type: boolean
          description: Flag indicating the user will be sent a password reset token
        skip_confirmation:
          type: boolean
          description: Flag indicating the account is confirmed
        force_random_password:
          type: boolean
          description: Flag indicating a random password will be set
        name:
          type: string
          description: The name of the user
        username:
          type: string
          description: The username of the user
        skype:
          type: string
          description: The Skype username
        linkedin:
          type: string
          description: The LinkedIn username
        twitter:
          type: string
          description: The Twitter username
        discord:
          type: string
          description: The Discord user ID
        website_url:
          type: string
          description: The website of the user
        organization:
          type: string
          description: The organization of the user
        projects_limit:
          type: integer
          description: The number of projects a user can create
          format: int32
        extern_uid:
          type: string
          description: The external authentication provider UID
        provider:
          type: string
          description: The external provider
        bio:
          type: string
          description: The biography of the user
        location:
          type: string
          description: The location of the user
        pronouns:
          type: string
          description: The pronouns of the user
        public_email:
          type: string
          description: The public email of the user
        commit_email:
          type: string
          description: The commit email, _private for private commit email
        admin:
          type: boolean
          description: Flag indicating the user is an administrator
        can_create_group:
          type: boolean
          description: Flag indicating the user can create groups
        external:
          type: boolean
          description: Flag indicating the user is an external user
        avatar:
          type: file
          description: Avatar image for user
          format: binary
        theme_id:
          type: integer
          description: The GitLab theme for the user
          format: int32
        color_scheme_id:
          type: integer
          description: The color scheme for the file viewer
          format: int32
        private_profile:
          type: boolean
          description: Flag indicating the user has a private profile
        note:
          type: string
          description: Admin note for this user
        view_diffs_file_by_file:
          type: boolean
          description: Flag indicating the user sees only one file diff per page
        shared_runners_minutes_limit:
          type: integer
          description: Compute minutes quota for this user
          format: int32
        extra_shared_runners_minutes_limit:
          type: integer
          description: (admin-only) Extra compute minutes quota for this user
          format: int32
        group_id_for_saml:
          type: integer
          description: ID for group where SAML has been configured
          format: int32
        auditor:
          type: boolean
          description: Flag indicating auditor status of the user
      description: Create a user. Available only for admins.
    API_Entities_UserWithAdmin:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: admin
        name:
          type: string
          example: Administrator
        state:
          type: string
          example: active
        locked:
          type: boolean
        avatar_url:
          type: string
          example: https://gravatar.com/avatar/1
        avatar_path:
          type: string
          example: /user/avatar/28/The-Big-Lebowski-400-400.png
        custom_attributes:
          type: array
          items:
            $ref: '#/components/schemas/API_Entities_CustomAttribute'
        web_url:
          type: string
          example: https://gitlab.example.com/root
        created_at:
          type: string
        bio:
          type: string
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        discord:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        pronouns:
          type: string
        bot:
          type: string
        work_information:
          type: string
        followers:
          type: string
        following:
          type: string
        is_followed:
          type: string
        local_time:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        confirmed_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        last_activity_on:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        email:
          type: string
          example: john@example.com
        theme_id:
          type: integer
          format: int32
          example: 2
        color_scheme_id:
          type: integer
          format: int32
          example: 1
        projects_limit:
          type: integer
          format: int32
          example: 10
        current_sign_in_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:01.67Z"
        identities:
          $ref: '#/components/schemas/API_Entities_Identity'
        can_create_group:
          type: boolean
          example: true
        can_create_project:
          type: boolean
          example: true
        two_factor_enabled:
          type: boolean
          example: true
        external:
          type: string
        private_profile:
          type: boolean
          example: false
        commit_email:
          type: string
        shared_runners_minutes_limit:
          type: string
        extra_shared_runners_minutes_limit:
          type: string
        scim_identities:
          $ref: '#/components/schemas/API_Entities_ScimIdentity'
        is_admin:
          type: string
        note:
          type: string
        namespace_id:
          type: string
        created_by:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        email_reset_offered_at:
          type: string
        using_license_seat:
          type: string
        is_auditor:
          type: string
        provisioned_by_group_id:
          type: string
        enterprise_group_id:
          type: string
        enterprise_group_associated_at:
          type: string
      description: API_Entities_UserWithAdmin model
    putApiV4UsersId:
      type: object
      properties:
        email:
          type: string
          description: The email of the user
        password:
          type: string
          description: The password of the new user
        skip_reconfirmation:
          type: boolean
          description: Flag indicating the account skips the confirmation by email
        name:
          type: string
          description: The name of the user
        username:
          type: string
          description: The username of the user
        skype:
          type: string
          description: The Skype username
        linkedin:
          type: string
          description: The LinkedIn username
        twitter:
          type: string
          description: The Twitter username
        discord:
          type: string
          description: The Discord user ID
        website_url:
          type: string
          description: The website of the user
        organization:
          type: string
          description: The organization of the user
        projects_limit:
          type: integer
          description: The number of projects a user can create
          format: int32
        extern_uid:
          type: string
          description: The external authentication provider UID
        provider:
          type: string
          description: The external provider
        bio:
          type: string
          description: The biography of the user
        location:
          type: string
          description: The location of the user
        pronouns:
          type: string
          description: The pronouns of the user
        public_email:
          type: string
          description: The public email of the user
        commit_email:
          type: string
          description: The commit email, _private for private commit email
        admin:
          type: boolean
          description: Flag indicating the user is an administrator
        can_create_group:
          type: boolean
          description: Flag indicating the user can create groups
        external:
          type: boolean
          description: Flag indicating the user is an external user
        avatar:
          type: file
          description: Avatar image for user
          format: binary
        theme_id:
          type: integer
          description: The GitLab theme for the user
          format: int32
        color_scheme_id:
          type: integer
          description: The color scheme for the file viewer
          format: int32
        private_profile:
          type: boolean
          description: Flag indicating the user has a private profile
        note:
          type: string
          description: Admin note for this user
        view_diffs_file_by_file:
          type: boolean
          description: Flag indicating the user sees only one file diff per page
        shared_runners_minutes_limit:
          type: integer
          description: Compute minutes quota for this user
          format: int32
        extra_shared_runners_minutes_limit:
          type: integer
          description: (admin-only) Extra compute minutes quota for this user
          format: int32
        group_id_for_saml:
          type: integer
          description: ID for group where SAML has been configured
          format: int32
        auditor:
          type: boolean
          description: Flag indicating auditor status of the user
      description: Update a user. Available only for admins.
    postApiV4UsersUserIdKeys:
      required:
        - key
        - title
      type: object
      properties:
        key:
          type: string
          description: The new SSH key
        title:
          type: string
          description: The title of the new SSH key
        expires_at:
          type: string
          description: The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)
          format: date-time
        usage_type:
          type: string
          description: Scope of usage for the SSH key
          default: auth_and_signing
          enum:
            - auth_and_signing
            - auth
            - signing
      description: Add an SSH key to a specified user. Available only for admins.
    API_Entities_SSHKey:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: Sample key 25
        created_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:44.627Z"
        expires_at:
          type: string
          format: date-time
          example: "2020-09-03T07:24:44.627Z"
        key:
          type: string
          example: |-
            ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt1256k6Yjz\
                  GGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCdd\
                  NaP0L+hM7zhFNzjFvpaMgJw0=
        usage_type:
          type: string
          example: auth
      description: API_Entities_SSHKey model
    postApiV4UsersIdGpgKeys:
      required:
        - key
      type: object
      properties:
        key:
          type: string
          description: The new GPG key
      description: Add a GPG key to a specified user. Available only for admins.
    API_Entities_GpgKey:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        created_at:
          type: string
      description: API_Entities_GpgKey model
    postApiV4UsersIdEmails:
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: The email of the user
        skip_confirmation:
          type: boolean
          description: Skip confirmation of email and assume it is verified
      description: Add an email address to a specified user. Available only for admins.
    API_Entities_Email:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        confirmed_at:
          type: string
      description: API_Entities_Email model
    API_Entities_Membership:
      type: object
      properties:
        source_id:
          type: string
        source_name:
          type: string
        source_type:
          type: string
        access_level:
          type: string
      description: API_Entities_Membership model
    API_Entities_ImpersonationToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: John Doe
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          example: ""
        user_id:
          type: integer
          format: int32
          example: 3
        last_used_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        impersonation:
          type: string
      description: API_Entities_ImpersonationToken model
    postApiV4UsersUserIdImpersonationTokens:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the impersonation token
        expires_at:
          type: string
          description: The expiration date in the format YEAR-MONTH-DAY of the impersonation token
          format: date
        scopes:
          type: array
          description: The array of scopes of the impersonation token
          items:
            type: string
      description: Create a impersonation token. Available only for admins.
    API_Entities_ImpersonationTokenWithToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: John Doe
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          example: ""
        user_id:
          type: integer
          format: int32
          example: 3
        last_used_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        token:
          type: string
        impersonation:
          type: string
      description: API_Entities_ImpersonationTokenWithToken model
    postApiV4UsersUserIdPersonalAccessTokens:
      required:
        - name
        - scopes
      type: object
      properties:
        name:
          type: string
          description: The name of the personal access token
        scopes:
          type: array
          description: The array of scopes of the personal access token
          items:
            type: string
            enum:
              - api
              - read_api
              - read_user
              - create_runner
              - k8s_proxy
              - read_repository
              - write_repository
              - read_observability
              - write_observability
              - ai_features
              - sudo
              - admin_mode
              - read_service_ping
        expires_at:
          type: string
          description: The expiration date in the format YEAR-MONTH-DAY of the personal access token
          format: date
      description: Create a personal access token. Available only for admins.
    API_Entities_PersonalAccessTokenWithToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: John Doe
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          example: ""
        user_id:
          type: integer
          format: int32
          example: 3
        last_used_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        token:
          type: string
      description: API_Entities_PersonalAccessTokenWithToken model
    API_Entities_Feature:
      type: object
      properties:
        name:
          type: string
          example: experimental_feature
        state:
          type: string
          example: off
        gates:
          $ref: '#/components/schemas/API_Entities_FeatureGate'
        definition:
          $ref: '#/components/schemas/API_Entities_Feature_Definition'
      description: API_Entities_Feature model
    API_Entities_FeatureGate:
      type: object
      properties:
        key:
          type: string
          example: percentage_of_actors
        value:
          type: integer
          format: int32
          example: 34
    API_Entities_Feature_Definition:
      type: object
      properties:
        name:
          type: string
        feature_issue_url:
          type: string
        introduced_by_url:
          type: string
        rollout_issue_url:
          type: string
        milestone:
          type: string
        log_state_changes:
          type: string
        type:
          type: string
        group:
          type: string
        default_enabled:
          type: string
      description: API_Entities_Feature_Definition model
    postApiV4FeaturesName:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: '`true` or `false` to enable/disable, or an integer for percentage of time'
        key:
          type: string
          description: '`percentage_of_actors` or `percentage_of_time` (default)'
        feature_group:
          type: string
          description: A Feature group name
        user:
          type: string
          description: A GitLab username or comma-separated multiple usernames
        group:
          type: string
          description: A GitLab group's path, for example `gitlab-org`, or comma-separated multiple group paths
        namespace:
          type: string
          description: A GitLab group or user namespace's path, for example `john-doe`, or comma-separated multiple namespace paths. Introduced in GitLab 15.0.
        project:
          type: string
          description: A projects path, for example `gitlab-org/gitlab-foss`, or comma-separated multiple project paths
        repository:
          type: string
          description: A repository path, for example `gitlab-org/gitlab-test.git`, `gitlab-org/gitlab-test.wiki.git`, `snippets/21.git`, to name a few. Use comma to separate multiple repository paths
        force:
          type: boolean
          description: Skip feature flag validation checks, such as a YAML definition
      description: Set or create a feature
    EE_API_Entities_Geo_PipelineRefs:
      type: object
      properties:
        pipeline_refs:
          type: array
          items:
            type: string
            example: ""
      description: EE_API_Entities_Geo_PipelineRefs model
    postApiV4GeoStatus:
      type: object
      properties:
        data:
          required:
            - geo_node_id
          type: object
          properties:
            geo_node_id:
              type: integer
              description: Geo Node ID to look up its status
              format: int32
            db_replication_lag_seconds:
              type: integer
              description: DB replication lag in seconds
              format: int32
            last_event_id:
              type: integer
              description: Last event ID
              format: int32
            last_event_date:
              type: string
              description: Last event date
              format: date-time
            cursor_last_event_id:
              type: integer
              description: Cursor last event ID
              format: int32
            cursor_last_event_date:
              type: string
              description: Cursor last event date
              format: date-time
            last_successful_status_check_at:
              type: string
              description: Last successful status check date
              format: date-time
            status_message:
              type: string
              description: Status message
            replication_slots_count:
              type: integer
              description: Replication slots count
              format: int32
            replication_slots_used_count:
              type: integer
              description: Replication slots used count
              format: int32
            replication_slots_max_retained_wal_bytes:
              type: integer
              description: Maximum number of bytes retained in the WAL on the primary
              format: int32
            version:
              type: string
              description: Gitlab version
            revision:
              type: string
              description: Gitlab revision
            status:
              type: object
              properties:
                projects_count:
                  type: integer
                  description: Projects count
                  format: int32
                container_repositories_replication_enabled:
                  type: boolean
                  description: Container repositories replication enabled
                lfs_objects_count:
                  type: integer
                  description: LFS objects count
                  format: int32
                lfs_objects_checksum_total_count:
                  type: integer
                  description: LFS objects checksum total count
                  format: int32
                lfs_objects_checksummed_count:
                  type: integer
                  description: LFS objects checksummed count
                  format: int32
                lfs_objects_checksum_failed_count:
                  type: integer
                  description: LFS objects checksum failed count
                  format: int32
                lfs_objects_synced_count:
                  type: integer
                  description: LFS objects synced count
                  format: int32
                lfs_objects_failed_count:
                  type: integer
                  description: LFS objects failed count
                  format: int32
                lfs_objects_registry_count:
                  type: integer
                  description: LFS objects registry count
                  format: int32
                lfs_objects_verification_total_count:
                  type: integer
                  description: LFS objects verification total count
                  format: int32
                lfs_objects_verified_count:
                  type: integer
                  description: LFS objects verified count
                  format: int32
                lfs_objects_verification_failed_count:
                  type: integer
                  description: LFS objects verification failed count
                  format: int32
                merge_request_diffs_count:
                  type: integer
                  description: Merge request diffs count
                  format: int32
                merge_request_diffs_checksum_total_count:
                  type: integer
                  description: Merge request diffs checksum total count
                  format: int32
                merge_request_diffs_checksummed_count:
                  type: integer
                  description: Merge request diffs checksummed count
                  format: int32
                merge_request_diffs_checksum_failed_count:
                  type: integer
                  description: Merge request diffs checksum failed count
                  format: int32
                merge_request_diffs_synced_count:
                  type: integer
                  description: Merge request diffs synced count
                  format: int32
                merge_request_diffs_failed_count:
                  type: integer
                  description: Merge request diffs failed count
                  format: int32
                merge_request_diffs_registry_count:
                  type: integer
                  description: Merge request diffs registry count
                  format: int32
                merge_request_diffs_verification_total_count:
                  type: integer
                  description: Merge request diffs verification total count
                  format: int32
                merge_request_diffs_verified_count:
                  type: integer
                  description: Merge request diffs verified count
                  format: int32
                merge_request_diffs_verification_failed_count:
                  type: integer
                  description: Merge request diffs verified count
                  format: int32
                package_files_count:
                  type: integer
                  description: Packages files count
                  format: int32
                package_files_checksum_total_count:
                  type: integer
                  description: Packages files checksum total count
                  format: int32
                package_files_checksummed_count:
                  type: integer
                  description: Packages files checksummed count
                  format: int32
                package_files_checksum_failed_count:
                  type: integer
                  description: Packages files checksum failed count
                  format: int32
                package_files_synced_count:
                  type: integer
                  description: Packages files synced count
                  format: int32
                package_files_failed_count:
                  type: integer
                  description: Packages files failed count
                  format: int32
                package_files_registry_count:
                  type: integer
                  description: Packages files registry count
                  format: int32
                package_files_verification_total_count:
                  type: integer
                  description: Packages files verification total count
                  format: int32
                package_files_verified_count:
                  type: integer
                  description: Packages files verified count
                  format: int32
                package_files_verification_failed_count:
                  type: integer
                  description: Packages files verification failed count
                  format: int32
                terraform_state_versions_count:
                  type: integer
                  description: Terraform state versions count
                  format: int32
                terraform_state_versions_checksum_total_count:
                  type: integer
                  description: Terraform state versions checksum total count
                  format: int32
                terraform_state_versions_checksummed_count:
                  type: integer
                  description: Terraform state versions checksummed count
                  format: int32
                terraform_state_versions_checksum_failed_count:
                  type: integer
                  description: Terraform state versions checksum failed count
                  format: int32
                terraform_state_versions_synced_count:
                  type: integer
                  description: Terraform state versions synced count
                  format: int32
                terraform_state_versions_failed_count:
                  type: integer
                  description: Terraform state versions failed count
                  format: int32
                terraform_state_versions_registry_count:
                  type: integer
                  description: Terraform state versions registry count
                  format: int32
                terraform_state_versions_verification_total_count:
                  type: integer
                  description: Terraform state versions verification total count
                  format: int32
                terraform_state_versions_verified_count:
                  type: integer
                  description: Terraform state versions verified count
                  format: int32
                terraform_state_versions_verification_failed_count:
                  type: integer
                  description: Terraform state versions verification failed count
                  format: int32
                snippet_repositories_count:
                  type: integer
                  description: Snippet repositories count
                  format: int32
                snippet_repositories_checksum_total_count:
                  type: integer
                  description: Snippet repositories checksum total count
                  format: int32
                snippet_repositories_checksummed_count:
                  type: integer
                  description: Snippet repositories checksummed count
                  format: int32
                snippet_repositories_checksum_failed_count:
                  type: integer
                  description: Snippet repositories checksum failed count
                  format: int32
                snippet_repositories_synced_count:
                  type: integer
                  description: Snippet repositories synced count
                  format: int32
                snippet_repositories_failed_count:
                  type: integer
                  description: Snippet repositories failed count
                  format: int32
                snippet_repositories_registry_count:
                  type: integer
                  description: Snippet repositories registry count
                  format: int32
                snippet_repositories_verification_total_count:
                  type: integer
                  description: Snippet repositories verification total count
                  format: int32
                snippet_repositories_verified_count:
                  type: integer
                  description: Snippet repositories verified count
                  format: int32
                snippet_repositories_verification_failed_count:
                  type: integer
                  description: Snippet repositories verification failed count
                  format: int32
                group_wiki_repositories_count:
                  type: integer
                  description: Group wiki repositories count
                  format: int32
                group_wiki_repositories_checksum_total_count:
                  type: integer
                  description: Group wiki repositories checksum total count
                  format: int32
                group_wiki_repositories_checksummed_count:
                  type: integer
                  description: Group wiki repositories checksummed count
                  format: int32
                group_wiki_repositories_checksum_failed_count:
                  type: integer
                  description: Group wiki repositories checksum failed count
                  format: int32
                group_wiki_repositories_synced_count:
                  type: integer
                  description: Group wiki repositories synced count
                  format: int32
                group_wiki_repositories_failed_count:
                  type: integer
                  description: Group wiki repositories failed count
                  format: int32
                group_wiki_repositories_registry_count:
                  type: integer
                  description: Group wiki repositories registry count
                  format: int32
                group_wiki_repositories_verification_total_count:
                  type: integer
                  description: Group wiki repositories verification total count
                  format: int32
                group_wiki_repositories_verified_count:
                  type: integer
                  description: Group wiki repositories verified count
                  format: int32
                group_wiki_repositories_verification_failed_count:
                  type: integer
                  description: Group wiki repositories verification failed count
                  format: int32
                pipeline_artifacts_count:
                  type: integer
                  description: Pipeline artifacts count
                  format: int32
                pipeline_artifacts_checksum_total_count:
                  type: integer
                  description: Pipeline artifacts checksum total count
                  format: int32
                pipeline_artifacts_checksummed_count:
                  type: integer
                  description: Pipeline artifacts checksummed count
                  format: int32
                pipeline_artifacts_checksum_failed_count:
                  type: integer
                  description: Pipeline artifacts checksum failed count
                  format: int32
                pipeline_artifacts_synced_count:
                  type: integer
                  description: Pipeline artifacts synced count
                  format: int32
                pipeline_artifacts_failed_count:
                  type: integer
                  description: Pipeline artifacts failed count
                  format: int32
                pipeline_artifacts_registry_count:
                  type: integer
                  description: Pipeline artifacts registry count
                  format: int32
                pipeline_artifacts_verification_total_count:
                  type: integer
                  description: Pipeline artifacts verification total count
                  format: int32
                pipeline_artifacts_verified_count:
                  type: integer
                  description: Pipeline artifacts verified count
                  format: int32
                pipeline_artifacts_verification_failed_count:
                  type: integer
                  description: Pipeline artifacts verification failed count
                  format: int32
                pages_deployments_count:
                  type: integer
                  description: Pages deployments count
                  format: int32
                pages_deployments_checksum_total_count:
                  type: integer
                  description: Pages deployments checksum total count
                  format: int32
                pages_deployments_checksummed_count:
                  type: integer
                  description: Pages deployments checksummed count
                  format: int32
                pages_deployments_checksum_failed_count:
                  type: integer
                  description: Pages deployments checksum failed count
                  format: int32
                pages_deployments_synced_count:
                  type: integer
                  description: Pages deployments synced count
                  format: int32
                pages_deployments_failed_count:
                  type: integer
                  description: Pages deployments failed count
                  format: int32
                pages_deployments_registry_count:
                  type: integer
                  description: Pages deployments registry count
                  format: int32
                pages_deployments_verification_total_count:
                  type: integer
                  description: Pages deployments verification total count
                  format: int32
                pages_deployments_verified_count:
                  type: integer
                  description: Pages deployments verified count
                  format: int32
                pages_deployments_verification_failed_count:
                  type: integer
                  description: Pages deployments verification failed count
                  format: int32
                uploads_count:
                  type: integer
                  description: Uploads count
                  format: int32
                uploads_checksum_total_count:
                  type: integer
                  description: Uploads checksum total count
                  format: int32
                uploads_checksummed_count:
                  type: integer
                  description: Uploads checksummed count
                  format: int32
                uploads_checksum_failed_count:
                  type: integer
                  description: Uploads checksum failed count
                  format: int32
                uploads_synced_count:
                  type: integer
                  description: Uploads synced count
                  format: int32
                uploads_failed_count:
                  type: integer
                  description: Uploads failed count
                  format: int32
                uploads_registry_count:
                  type: integer
                  description: Uploads registry count
                  format: int32
                uploads_verification_total_count:
                  type: integer
                  description: Uploads verification total count
                  format: int32
                uploads_verified_count:
                  type: integer
                  description: Uploads verified count
                  format: int32
                uploads_verification_failed_count:
                  type: integer
                  description: Uploads verification failed count
                  format: int32
                job_artifacts_count:
                  type: integer
                  description: Job artifacts count
                  format: int32
                job_artifacts_checksum_total_count:
                  type: integer
                  description: Job artifacts checksum total count
                  format: int32
                job_artifacts_checksummed_count:
                  type: integer
                  description: Job artifacts checksummed count
                  format: int32
                job_artifacts_checksum_failed_count:
                  type: integer
                  description: Job artifacts checksum failed count
                  format: int32
                job_artifacts_synced_count:
                  type: integer
                  description: Job artifacts synced count
                  format: int32
                job_artifacts_failed_count:
                  type: integer
                  description: Job artifacts failed count
                  format: int32
                job_artifacts_registry_count:
                  type: integer
                  description: Job artifacts registry count
                  format: int32
                job_artifacts_verification_total_count:
                  type: integer
                  description: Job artifacts verification total count
                  format: int32
                job_artifacts_verified_count:
                  type: integer
                  description: Job artifacts verified count
                  format: int32
                job_artifacts_verification_failed_count:
                  type: integer
                  description: Job artifacts verification failed count
                  format: int32
                ci_secure_files_count:
                  type: integer
                  description: CI secure files count
                  format: int32
                ci_secure_files_checksum_total_count:
                  type: integer
                  description: CI secure files checksum total count
                  format: int32
                ci_secure_files_checksummed_count:
                  type: integer
                  description: CI secure files checksummed count
                  format: int32
                ci_secure_files_checksum_failed_count:
                  type: integer
                  description: CI secure files checksum failed count
                  format: int32
                ci_secure_files_synced_count:
                  type: integer
                  description: CI secure files synced count
                  format: int32
                ci_secure_files_failed_count:
                  type: integer
                  description: CI secure files failed count
                  format: int32
                ci_secure_files_registry_count:
                  type: integer
                  description: CI secure files registry count
                  format: int32
                ci_secure_files_verification_total_count:
                  type: integer
                  description: CI secure files verification total count
                  format: int32
                ci_secure_files_verified_count:
                  type: integer
                  description: CI secure files verified count
                  format: int32
                ci_secure_files_verification_failed_count:
                  type: integer
                  description: CI secure files verification failed count
                  format: int32
                container_repositories_count:
                  type: integer
                  description: Container repositories count
                  format: int32
                container_repositories_checksum_total_count:
                  type: integer
                  description: Container repositories checksum total count
                  format: int32
                container_repositories_checksummed_count:
                  type: integer
                  description: Container repositories checksummed count
                  format: int32
                container_repositories_checksum_failed_count:
                  type: integer
                  description: Container repositories checksum failed count
                  format: int32
                container_repositories_synced_count:
                  type: integer
                  description: Container repositories synced count
                  format: int32
                container_repositories_failed_count:
                  type: integer
                  description: Container repositories failed count
                  format: int32
                container_repositories_registry_count:
                  type: integer
                  description: Container repositories registry count
                  format: int32
                container_repositories_verification_total_count:
                  type: integer
                  description: Container repositories verification total count
                  format: int32
                container_repositories_verified_count:
                  type: integer
                  description: Container repositories verified count
                  format: int32
                container_repositories_verification_failed_count:
                  type: integer
                  description: Container repositories verification failed count
                  format: int32
                git_fetch_event_count_weekly:
                  type: integer
                  description: Git fetch event count weekly
                  format: int32
                git_push_event_count_weekly:
                  type: integer
                  description: Git push event count weekly
                  format: int32
                proxy_remote_requests_event_count_weekly:
                  type: integer
                  description: Proxy remote requests event count weekly
                  format: int32
                proxy_local_requests_event_count_weekly:
                  type: integer
                  description: Proxy local requests event count weekly
                  format: int32
      description: Posts the current node status to the primary site
    EE_API_Entities_GeoNodeStatus:
      type: object
      properties:
        geo_node_id:
          type: string
        projects_count:
          type: string
        container_repositories_replication_enabled:
          type: string
        lfs_objects_count:
          type: string
        lfs_objects_checksum_total_count:
          type: string
        lfs_objects_checksummed_count:
          type: string
        lfs_objects_checksum_failed_count:
          type: string
        lfs_objects_synced_count:
          type: string
        lfs_objects_failed_count:
          type: string
        lfs_objects_registry_count:
          type: string
        lfs_objects_verification_total_count:
          type: string
        lfs_objects_verified_count:
          type: string
        lfs_objects_verification_failed_count:
          type: string
        merge_request_diffs_count:
          type: string
        merge_request_diffs_checksum_total_count:
          type: string
        merge_request_diffs_checksummed_count:
          type: string
        merge_request_diffs_checksum_failed_count:
          type: string
        merge_request_diffs_synced_count:
          type: string
        merge_request_diffs_failed_count:
          type: string
        merge_request_diffs_registry_count:
          type: string
        merge_request_diffs_verification_total_count:
          type: string
        merge_request_diffs_verified_count:
          type: string
        merge_request_diffs_verification_failed_count:
          type: string
        package_files_count:
          type: string
        package_files_checksum_total_count:
          type: string
        package_files_checksummed_count:
          type: string
        package_files_checksum_failed_count:
          type: string
        package_files_synced_count:
          type: string
        package_files_failed_count:
          type: string
        package_files_registry_count:
          type: string
        package_files_verification_total_count:
          type: string
        package_files_verified_count:
          type: string
        package_files_verification_failed_count:
          type: string
        terraform_state_versions_count:
          type: string
        terraform_state_versions_checksum_total_count:
          type: string
        terraform_state_versions_checksummed_count:
          type: string
        terraform_state_versions_checksum_failed_count:
          type: string
        terraform_state_versions_synced_count:
          type: string
        terraform_state_versions_failed_count:
          type: string
        terraform_state_versions_registry_count:
          type: string
        terraform_state_versions_verification_total_count:
          type: string
        terraform_state_versions_verified_count:
          type: string
        terraform_state_versions_verification_failed_count:
          type: string
        snippet_repositories_count:
          type: string
        snippet_repositories_checksum_total_count:
          type: string
        snippet_repositories_checksummed_count:
          type: string
        snippet_repositories_checksum_failed_count:
          type: string
        snippet_repositories_synced_count:
          type: string
        snippet_repositories_failed_count:
          type: string
        snippet_repositories_registry_count:
          type: string
        snippet_repositories_verification_total_count:
          type: string
        snippet_repositories_verified_count:
          type: string
        snippet_repositories_verification_failed_count:
          type: string
        group_wiki_repositories_count:
          type: string
        group_wiki_repositories_checksum_total_count:
          type: string
        group_wiki_repositories_checksummed_count:
          type: string
        group_wiki_repositories_checksum_failed_count:
          type: string
        group_wiki_repositories_synced_count:
          type: string
        group_wiki_repositories_failed_count:
          type: string
        group_wiki_repositories_registry_count:
          type: string
        group_wiki_repositories_verification_total_count:
          type: string
        group_wiki_repositories_verified_count:
          type: string
        group_wiki_repositories_verification_failed_count:
          type: string
        pipeline_artifacts_count:
          type: string
        pipeline_artifacts_checksum_total_count:
          type: string
        pipeline_artifacts_checksummed_count:
          type: string
        pipeline_artifacts_checksum_failed_count:
          type: string
        pipeline_artifacts_synced_count:
          type: string
        pipeline_artifacts_failed_count:
          type: string
        pipeline_artifacts_registry_count:
          type: string
        pipeline_artifacts_verification_total_count:
          type: string
        pipeline_artifacts_verified_count:
          type: string
        pipeline_artifacts_verification_failed_count:
          type: string
        pages_deployments_count:
          type: string
        pages_deployments_checksum_total_count:
          type: string
        pages_deployments_checksummed_count:
          type: string
        pages_deployments_checksum_failed_count:
          type: string
        pages_deployments_synced_count:
          type: string
        pages_deployments_failed_count:
          type: string
        pages_deployments_registry_count:
          type: string
        pages_deployments_verification_total_count:
          type: string
        pages_deployments_verified_count:
          type: string
        pages_deployments_verification_failed_count:
          type: string
        uploads_count:
          type: string
        uploads_checksum_total_count:
          type: string
        uploads_checksummed_count:
          type: string
        uploads_checksum_failed_count:
          type: string
        uploads_synced_count:
          type: string
        uploads_failed_count:
          type: string
        uploads_registry_count:
          type: string
        uploads_verification_total_count:
          type: string
        uploads_verified_count:
          type: string
        uploads_verification_failed_count:
          type: string
        job_artifacts_count:
          type: string
        job_artifacts_checksum_total_count:
          type: string
        job_artifacts_checksummed_count:
          type: string
        job_artifacts_checksum_failed_count:
          type: string
        job_artifacts_synced_count:
          type: string
        job_artifacts_failed_count:
          type: string
        job_artifacts_registry_count:
          type: string
        job_artifacts_verification_total_count:
          type: string
        job_artifacts_verified_count:
          type: string
        job_artifacts_verification_failed_count:
          type: string
        ci_secure_files_count:
          type: string
        ci_secure_files_checksum_total_count:
          type: string
        ci_secure_files_checksummed_count:
          type: string
        ci_secure_files_checksum_failed_count:
          type: string
        ci_secure_files_synced_count:
          type: string
        ci_secure_files_failed_count:
          type: string
        ci_secure_files_registry_count:
          type: string
        ci_secure_files_verification_total_count:
          type: string
        ci_secure_files_verified_count:
          type: string
        ci_secure_files_verification_failed_count:
          type: string
        container_repositories_count:
          type: string
        container_repositories_checksum_total_count:
          type: string
        container_repositories_checksummed_count:
          type: string
        container_repositories_checksum_failed_count:
          type: string
        container_repositories_synced_count:
          type: string
        container_repositories_failed_count:
          type: string
        container_repositories_registry_count:
          type: string
        container_repositories_verification_total_count:
          type: string
        container_repositories_verified_count:
          type: string
        container_repositories_verification_failed_count:
          type: string
        dependency_proxy_blobs_count:
          type: string
        dependency_proxy_blobs_checksum_total_count:
          type: string
        dependency_proxy_blobs_checksummed_count:
          type: string
        dependency_proxy_blobs_checksum_failed_count:
          type: string
        dependency_proxy_blobs_synced_count:
          type: string
        dependency_proxy_blobs_failed_count:
          type: string
        dependency_proxy_blobs_registry_count:
          type: string
        dependency_proxy_blobs_verification_total_count:
          type: string
        dependency_proxy_blobs_verified_count:
          type: string
        dependency_proxy_blobs_verification_failed_count:
          type: string
        dependency_proxy_manifests_count:
          type: string
        dependency_proxy_manifests_checksum_total_count:
          type: string
        dependency_proxy_manifests_checksummed_count:
          type: string
        dependency_proxy_manifests_checksum_failed_count:
          type: string
        dependency_proxy_manifests_synced_count:
          type: string
        dependency_proxy_manifests_failed_count:
          type: string
        dependency_proxy_manifests_registry_count:
          type: string
        dependency_proxy_manifests_verification_total_count:
          type: string
        dependency_proxy_manifests_verified_count:
          type: string
        dependency_proxy_manifests_verification_failed_count:
          type: string
        project_wiki_repositories_count:
          type: string
        project_wiki_repositories_checksum_total_count:
          type: string
        project_wiki_repositories_checksummed_count:
          type: string
        project_wiki_repositories_checksum_failed_count:
          type: string
        project_wiki_repositories_synced_count:
          type: string
        project_wiki_repositories_failed_count:
          type: string
        project_wiki_repositories_registry_count:
          type: string
        project_wiki_repositories_verification_total_count:
          type: string
        project_wiki_repositories_verified_count:
          type: string
        project_wiki_repositories_verification_failed_count:
          type: string
        design_management_repositories_count:
          type: string
        design_management_repositories_checksum_total_count:
          type: string
        design_management_repositories_checksummed_count:
          type: string
        design_management_repositories_checksum_failed_count:
          type: string
        design_management_repositories_synced_count:
          type: string
        design_management_repositories_failed_count:
          type: string
        design_management_repositories_registry_count:
          type: string
        design_management_repositories_verification_total_count:
          type: string
        design_management_repositories_verified_count:
          type: string
        design_management_repositories_verification_failed_count:
          type: string
        project_repositories_count:
          type: string
        project_repositories_checksum_total_count:
          type: string
        project_repositories_checksummed_count:
          type: string
        project_repositories_checksum_failed_count:
          type: string
        project_repositories_synced_count:
          type: string
        project_repositories_failed_count:
          type: string
        project_repositories_registry_count:
          type: string
        project_repositories_verification_total_count:
          type: string
        project_repositories_verified_count:
          type: string
        project_repositories_verification_failed_count:
          type: string
        git_fetch_event_count_weekly:
          type: string
        git_push_event_count_weekly:
          type: string
        proxy_remote_requests_event_count_weekly:
          type: string
        proxy_local_requests_event_count_weekly:
          type: string
        repositories_checked_in_percentage:
          type: string
        replication_slots_used_in_percentage:
          type: string
        lfs_objects_synced_in_percentage:
          type: string
        lfs_objects_verified_in_percentage:
          type: string
        merge_request_diffs_synced_in_percentage:
          type: string
        merge_request_diffs_verified_in_percentage:
          type: string
        package_files_synced_in_percentage:
          type: string
        package_files_verified_in_percentage:
          type: string
        terraform_state_versions_synced_in_percentage:
          type: string
        terraform_state_versions_verified_in_percentage:
          type: string
        snippet_repositories_synced_in_percentage:
          type: string
        snippet_repositories_verified_in_percentage:
          type: string
        group_wiki_repositories_synced_in_percentage:
          type: string
        group_wiki_repositories_verified_in_percentage:
          type: string
        pipeline_artifacts_synced_in_percentage:
          type: string
        pipeline_artifacts_verified_in_percentage:
          type: string
        pages_deployments_synced_in_percentage:
          type: string
        pages_deployments_verified_in_percentage:
          type: string
        uploads_synced_in_percentage:
          type: string
        uploads_verified_in_percentage:
          type: string
        job_artifacts_synced_in_percentage:
          type: string
        job_artifacts_verified_in_percentage:
          type: string
        ci_secure_files_synced_in_percentage:
          type: string
        ci_secure_files_verified_in_percentage:
          type: string
        container_repositories_synced_in_percentage:
          type: string
        container_repositories_verified_in_percentage:
          type: string
        dependency_proxy_blobs_synced_in_percentage:
          type: string
        dependency_proxy_blobs_verified_in_percentage:
          type: string
        dependency_proxy_manifests_synced_in_percentage:
          type: string
        dependency_proxy_manifests_verified_in_percentage:
          type: string
        project_wiki_repositories_synced_in_percentage:
          type: string
        project_wiki_repositories_verified_in_percentage:
          type: string
        design_management_repositories_synced_in_percentage:
          type: string
        design_management_repositories_verified_in_percentage:
          type: string
        project_repositories_synced_in_percentage:
          type: string
        project_repositories_verified_in_percentage:
          type: string
        repositories_count:
          type: string
        replication_slots_count:
          type: string
        replication_slots_used_count:
          type: string
        healthy:
          type: string
        health:
          type: string
        health_status:
          type: string
        missing_oauth_application:
          type: string
        db_replication_lag_seconds:
          type: string
        replication_slots_max_retained_wal_bytes:
          type: string
        repositories_checked_count:
          type: string
        repositories_checked_failed_count:
          type: string
        last_event_id:
          type: string
        last_event_timestamp:
          type: string
        cursor_last_event_id:
          type: string
        cursor_last_event_timestamp:
          type: string
        last_successful_status_check_timestamp:
          type: string
        version:
          type: string
        revision:
          type: string
        selective_sync_type:
          type: string
        namespaces:
          $ref: '#/components/schemas/API_Entities_NamespaceBasic'
        updated_at:
          type: string
        storage_shards:
          $ref: '#/components/schemas/StorageShardEntity'
        storage_shards_match:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            node:
              type: string
      description: EE_API_Entities_GeoNodeStatus model
    StorageShardEntity:
      type: object
      properties:
        name:
          type: string
    postApiV4GeoProxyGitSshInfoRefsUploadPack:
      required:
        - data
        - secret_token
      type: object
      properties:
        secret_token:
          type: string
          description: Secret token to authenticate by gitlab shell
        data:
          required:
            - gl_id
            - primary_repo
          type: object
          properties:
            gl_id:
              type: string
              description: GitLab identifier of user that initiated the clone/pull
            primary_repo:
              type: string
              description: Primary repository to clone/pull
      description: |-
        Responsible for making HTTP GET /repo.git/info/refs?service=git-upload-pack
                          request from secondary gitlab-shell to primary
    postApiV4GeoProxyGitSshUploadPack:
      required:
        - data
        - output
        - secret_token
      type: object
      properties:
        secret_token:
          type: string
        data:
          required:
            - gl_id
            - primary_repo
          type: object
          properties:
            gl_id:
              type: string
            primary_repo:
              type: string
        output:
          type: string
          description: Output from git-upload-pack
      description: |-
        Responsible for making HTTP POST /repo.git/git-upload-pack
                          request from secondary gitlab-shell to primary
    postApiV4GeoProxyGitSshInfoRefsReceivePack:
      required:
        - data
        - secret_token
      type: object
      properties:
        secret_token:
          type: string
        data:
          required:
            - gl_id
            - primary_repo
          type: object
          properties:
            gl_id:
              type: string
            primary_repo:
              type: string
      description: |-
        Responsible for making HTTP GET /repo.git/info/refs?service=git-receive-pack
                          request from secondary gitlab-shell to primary
    postApiV4GeoProxyGitSshReceivePack:
      required:
        - data
        - output
        - secret_token
      type: object
      properties:
        secret_token:
          type: string
        data:
          required:
            - gl_id
            - primary_repo
          type: object
          properties:
            gl_id:
              type: string
            primary_repo:
              type: string
        output:
          type: string
          description: Output from git-receive-pack
      description: |-
        Responsible for making HTTP POST /repo.git/info/refs?service=git-receive-pack
                          request from secondary gitlab-shell to primary
    postApiV4IntegrationsSlackEvents:
      type: object
      properties:
        token:
          type: string
          description: (Deprecated by Slack) The request token, unused by GitLab
        team_id:
          type: string
          description: The Slack workspace ID of where the event occurred
        api_app_id:
          type: string
          description: The Slack app ID
        event:
          type: object
          properties: {}
          description: The event object with variable properties
        type:
          type: string
          description: The kind of event this is, usually `event_callback`
        event_id:
          type: string
          description: A unique identifier for this specific event
        event_time:
          type: integer
          description: The epoch timestamp in seconds when this event was dispatched
          format: int32
        authed_users:
          type: array
          description: (Deprecated by Slack) An array of Slack user IDs
          items:
            type: string
      description: Receive Slack events
    postApiV4IntegrationsJiraConnectSubscriptions:
      required:
        - jwt
        - namespace_path
      type: object
      properties:
        jwt:
          type: string
          description: JWT token for authorization with the Jira Connect installation
        namespace_path:
          type: string
          description: Path for the namespace that should be subscribed
      description: Subscribe a namespace to a JiraConnectInstallation
    API_Entities_BasicSuccess:
      type: object
      properties:
        success:
          type: object
          properties: {}
      description: API_Entities_BasicSuccess model
    API_Entities_SSHKeyWithUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: Sample key 25
        created_at:
          type: string
          format: date-time
          example: "2015-09-03T07:24:44.627Z"
        expires_at:
          type: string
          format: date-time
          example: "2020-09-03T07:24:44.627Z"
        key:
          type: string
          example: |-
            ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt1256k6Yjz\
                  GGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCdd\
                  NaP0L+hM7zhFNzjFvpaMgJw0=
        usage_type:
          type: string
          example: auth
        user:
          $ref: '#/components/schemas/API_Entities_UserPublic'
      description: API_Entities_SSHKeyWithUser model
    postApiV4Markdown:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: The Markdown text to render
        gfm:
          type: boolean
          description: Render text using GitLab Flavored Markdown. Default is false
        project:
          type: string
          description: Use project as a context when creating references using GitLab Flavored Markdown
      description: Render an arbitrary Markdown document
    API_Entities_Markdown:
      type: object
      properties:
        html:
          type: string
          example: <p dir=\"auto\">Hello world!</p>"
      description: API_Entities_Markdown model
    putApiV4NamespacesId:
      type: object
      properties:
        shared_runners_minutes_limit:
          type: integer
          description: Compute minutes quota for this namespace
          format: int32
        extra_shared_runners_minutes_limit:
          type: integer
          description: Extra compute minutes for this namespace
          format: int32
        additional_purchased_storage_size:
          type: integer
          description: Additional storage size for this namespace
          format: int32
        additional_purchased_storage_ends_on:
          type: string
          description: End of subscription of the additional purchased storage
          format: date
        gitlab_subscription_attributes:
          type: object
          properties:
            start_date:
              type: string
              description: Start date of subscription
              format: date
            seats:
              type: integer
              description: Number of seats in subscription
              format: int32
            max_seats_used:
              type: integer
              description: Highest number of active users in the last month
              format: int32
            plan_code:
              type: string
              description: Subscription tier code
            end_date:
              type: string
              description: End date of subscription
              format: date
            auto_renew:
              type: boolean
              description: Whether subscription will auto renew on end date
            trial:
              type: boolean
              description: Whether the subscription is a trial
            trial_ends_on:
              type: string
              description: End date of trial
              format: date
            trial_starts_on:
              type: string
              description: Start date of trial
              format: date
            trial_extension_type:
              type: integer
              description: Whether subscription is an extended or reactivated trial
              format: int32
      description: Update a namespace
    API_Entities_Namespace:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: project
        path:
          type: string
          example: my_project
        kind:
          type: string
          example: project
        full_path:
          type: string
          example: group/my_project
        parent_id:
          type: integer
          format: int32
          example: 1
        avatar_url:
          type: string
          example: https://example.com/avatar/12345
        web_url:
          type: string
          example: https://example.com/group/my_project
        members_count_with_descendants:
          type: integer
          format: int32
          example: 5
        root_repository_size:
          type: integer
          format: int32
          example: 123
        projects_count:
          type: integer
          format: int32
          example: 123
        shared_runners_minutes_limit:
          type: integer
          format: int32
          example: 133
        extra_shared_runners_minutes_limit:
          type: integer
          format: int32
          example: 133
        additional_purchased_storage_size:
          type: integer
          format: int32
          example: 1000
        additional_purchased_storage_ends_on:
          type: string
          format: date
          example: "2022-06-18"
        billable_members_count:
          type: integer
          format: int32
          example: 2
        seats_in_use:
          type: integer
          format: int32
          example: 5
        max_seats_used:
          type: integer
          format: int32
          example: 100
        max_seats_used_changed_at:
          type: string
          format: date
          example: "2022-06-18"
        end_date:
          type: string
          format: date
          example: "2022-06-18"
        plan:
          type: string
          example: default
        trial_ends_on:
          type: string
          format: date
          example: "2022-06-18"
        trial:
          type: boolean
      description: API_Entities_Namespace model
    postApiV4NamespacesIdGitlabSubscription:
      required:
        - start_date
      type: object
      properties:
        start_date:
          type: string
          description: The date when subscription was started
          format: date
        seats:
          type: integer
          description: Number of seats in subscription
          format: int32
        max_seats_used:
          type: integer
          description: Highest number of active users in the last month
          format: int32
        plan_code:
          type: string
          description: Subscription tier code
        end_date:
          type: string
          description: End date of subscription
          format: date
        auto_renew:
          type: boolean
          description: Whether subscription will auto renew on end date
        trial:
          type: boolean
          description: Whether the subscription is a trial
        trial_ends_on:
          type: string
          description: End date of trial
          format: date
        trial_starts_on:
          type: string
          description: Start date of trial
          format: date
        trial_extension_type:
          type: integer
          description: Whether subscription is an extended or reactivated trial
          format: int32
      description: Create a subscription for the namespace
    API_Entities_GitlabSubscription:
      type: object
      properties:
        plan:
          type: object
          properties:
            code:
              type: string
            name:
              type: string
            trial:
              type: string
            auto_renew:
              type: string
            upgradable:
              type: string
            exclude_guests:
              type: string
        usage:
          type: object
          properties:
            seats_in_subscription:
              type: string
            seats_in_use:
              type: string
            max_seats_used:
              type: string
            seats_owed:
              type: string
        billing:
          type: object
          properties:
            subscription_start_date:
              type: string
            subscription_end_date:
              type: string
            trial_ends_on:
              type: string
      description: API_Entities_GitlabSubscription model
    putApiV4NamespacesIdGitlabSubscription:
      type: object
      properties:
        start_date:
          type: string
          description: Start date of subscription
          format: date
        seats:
          type: integer
          description: Number of seats in subscription
          format: int32
        max_seats_used:
          type: integer
          description: Highest number of active users in the last month
          format: int32
        plan_code:
          type: string
          description: Subscription tier code
        end_date:
          type: string
          description: End date of subscription
          format: date
        auto_renew:
          type: boolean
          description: Whether subscription will auto renew on end date
        trial:
          type: boolean
          description: Whether the subscription is a trial
        trial_ends_on:
          type: string
          description: End date of trial
          format: date
        trial_starts_on:
          type: string
          description: Start date of trial
          format: date
        trial_extension_type:
          type: integer
          description: Whether subscription is an extended or reactivated trial
          format: int32
      description: Update the subscription for the namespace
    postApiV4NamespacesIdStorageLimitExclusion:
      required:
        - reason
      type: object
      properties:
        reason:
          type: string
          description: The reason the Namespace is being excluded
      description: Creates a storage limit exclusion for a Namespace
    API_Entities_Namespaces_Storage_LimitExclusion:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        namespace_id:
          type: integer
          format: int32
          example: 123
        namespace_name:
          type: string
          example: GitLab
        reason:
          type: string
          example: a reason
      description: API_Entities_Namespaces_Storage_LimitExclusion model
    API_Entities_NamespaceExistence:
      type: object
      properties:
        exists:
          type: boolean
        suggests:
          type: array
          items:
            type: string
            example: my-group1
      description: API_Entities_NamespaceExistence model
    API_Entities_PagesDomainBasic:
      type: object
      properties:
        domain:
          type: string
        url:
          type: string
        project_id:
          type: string
        verified:
          type: string
        verification_code:
          type: string
        enabled_until:
          type: string
        auto_ssl_enabled:
          type: string
        certificate_expiration:
          $ref: '#/components/schemas/API_Entities_PagesDomainCertificateExpiration'
      description: API_Entities_PagesDomainBasic model
    API_Entities_PagesDomainCertificateExpiration:
      type: object
      properties:
        expired:
          type: string
        expiration:
          type: string
    API_Entities_PersonalAccessToken:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: John Doe
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          example: ""
        user_id:
          type: integer
          format: int32
          example: 3
        last_used_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
          example: "2020-08-31T15:53:00.073Z"
      description: API_Entities_PersonalAccessToken model
    postApiV4PersonalAccessTokensSelfRotate:
      type: object
      properties:
        expires_at:
          type: string
          description: The expiration date of the token
          format: date
          example: "2021-01-31"
      description: Rotate a personal access token
    postApiV4PersonalAccessTokensIdRotate:
      type: object
      properties:
        expires_at:
          type: string
          description: The expiration date of the token
          format: date
          example: "2021-01-31"
      description: Rotate personal access token
    postApiV4ProjectRepositoryStorageMoves:
      required:
        - source_storage_name
      type: object
      properties:
        source_storage_name:
          type: string
          description: The source storage shard
          enum:
            - default
        destination_storage_name:
          type: string
          description: The destination storage shard
          enum:
            - default
      description: Schedule bulk project repository storage moves
    API_Entities_Snippet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: test
        description:
          type: string
          example: Ruby test snippet
        visibility:
          type: string
          example: public
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        updated_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        project_id:
          type: integer
          format: int32
          example: 1
        web_url:
          type: string
          example: http://example.com/example/example/snippets/1
        raw_url:
          type: string
          example: http://example.com/example/example/snippets/1/raw
        ssh_url_to_repo:
          type: string
          example: ssh://user@gitlab.example.com/snippets/65.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/snippets/65.git
        file_name:
          type: string
          example: add.rb
        files:
          type: array
          items:
            type: string
            example: e0d123e5f316bef78bfdf5a008837577
        imported:
          type: boolean
          example: false
        imported_from:
          type: string
          example: none
        repository_storage:
          type: string
      description: API_Entities_Snippet model
    API_Entities_PersonalSnippet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: test
        description:
          type: string
          example: Ruby test snippet
        visibility:
          type: string
          example: public
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        updated_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        project_id:
          type: integer
          format: int32
          example: 1
        web_url:
          type: string
          example: http://example.com/example/example/snippets/1
        raw_url:
          type: string
          example: http://example.com/example/example/snippets/1/raw
        ssh_url_to_repo:
          type: string
          example: ssh://user@gitlab.example.com/snippets/65.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/snippets/65.git
        file_name:
          type: string
          example: add.rb
        files:
          type: array
          items:
            type: string
            example: e0d123e5f316bef78bfdf5a008837577
        imported:
          type: boolean
          example: false
        imported_from:
          type: string
          example: none
        repository_storage:
          type: string
      description: API_Entities_PersonalSnippet model
    postApiV4Snippets:
      required:
        - file_name
        - title
      type: object
      properties:
        title:
          type: string
          description: The title of a snippet
        description:
          type: string
          description: The description of a snippet
        visibility:
          type: string
          description: The visibility of the snippet
          default: internal
          enum:
            - private
            - internal
            - public
        files:
          type: array
          description: An array of files
          items:
            required:
              - content
              - file_path
            type: object
            properties:
              file_path:
                type: string
                description: The path of a snippet file
              content:
                type: string
                description: The content of a snippet file
        content:
          type: string
          description: The content of a snippet
        file_name:
          type: string
          description: The name of a snippet file
      description: Create new snippet
    putApiV4SnippetsId:
      type: object
      properties:
        content:
          type: string
          description: The content of a snippet
        description:
          type: string
          description: The description of a snippet
        file_name:
          type: string
          description: The name of a snippet file
        title:
          type: string
          description: The title of a snippet
        visibility:
          type: string
          description: The visibility of the snippet
          enum:
            - private
            - internal
            - public
        files:
          type: array
          description: An array of files to update
          items:
            required:
              - action
            type: object
            properties:
              action:
                type: string
                description: 'The type of action to perform on the file, must be one of: create, update, delete, move'
                enum:
                  - create
                  - update
                  - delete
                  - move
              content:
                type: string
                description: The content of a snippet
              file_path:
                type: string
                description: The file path of a snippet file
              previous_path:
                type: string
                description: The previous path of a snippet file
      description: Update an existing snippet
    API_Entities_Snippets_RepositoryStorageMove:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2020-05-07T04:27:17.234Z"
        state:
          type: string
          example: scheduled
        source_storage_name:
          type: string
          example: default
        destination_storage_name:
          type: string
          example: storage1
        error_message:
          type: string
          example: Failed to move repository
        snippet:
          $ref: '#/components/schemas/API_Entities_BasicSnippet'
      description: API_Entities_Snippets_RepositoryStorageMove model
    API_Entities_BasicSnippet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          example: test
        description:
          type: string
          example: Ruby test snippet
        visibility:
          type: string
          example: public
        author:
          $ref: '#/components/schemas/API_Entities_UserBasic'
        created_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        updated_at:
          type: string
          format: date-time
          example: "2012-06-28T10:52:04Z"
        project_id:
          type: integer
          format: int32
          example: 1
        web_url:
          type: string
          example: http://example.com/example/example/snippets/1
        raw_url:
          type: string
          example: http://example.com/example/example/snippets/1/raw
        ssh_url_to_repo:
          type: string
          example: ssh://user@gitlab.example.com/snippets/65.git
        http_url_to_repo:
          type: string
          example: https://gitlab.example.com/snippets/65.git
    postApiV4SnippetsIdRepositoryStorageMoves:
      type: object
      properties:
        destination_storage_name:
          type: string
          description: The destination storage shard
      description: Schedule a snippet repository storage move
    postApiV4SnippetRepositoryStorageMoves:
      required:
        - source_storage_name
      type: object
      properties:
        source_storage_name:
          type: string
          description: The source storage shard
          enum:
            - default
        destination_storage_name:
          type: string
          description: The destination storage shard
          enum:
            - default
      description: Schedule bulk snippet repository storage moves
    putApiV4SuggestionsIdApply:
      type: object
      properties:
        commit_message:
          type: string
          description: A custom commit message to use instead of the default generated message or the project's default message
      description: Apply suggestion patch in the Merge Request it was created
    API_Entities_Suggestion:
      type: object
      properties:
        id:
          type: string
        from_line:
          type: string
        to_line:
          type: string
        appliable:
          type: string
        applied:
          type: string
        from_content:
          type: string
        to_content:
          type: string
      description: API_Entities_Suggestion model
    putApiV4SuggestionsBatchApply:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          description: An array of the suggestion IDs
          items:
            type: integer
            format: int32
        commit_message:
          type: string
          description: A custom commit message to use instead of the default generated message or the project's default message
      description: Apply multiple suggestion patches in the Merge Request where they were created
    API_Entities_Hook:
      type: object
      properties:
        id:
          type: string
          example: "1"
        url:
          type: string
          example: https://webhook.site
        name:
          type: string
          example: Hook name
        description:
          type: string
          example: Hook description
        created_at:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        push_events:
          type: boolean
        tag_push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        repository_update_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
        disabled_until:
          type: string
          format: date-time
          example: "2012-05-28T04:42:42-07:00"
        url_variables:
          type: array
          items:
            type: object
            properties: {}
            example:
              token: secr3t
        custom_webhook_template:
          type: string
          example: '{"event":"{{object_kind}}"}'
      description: API_Entities_Hook model
    postApiV4Hooks:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          description: The URL to send the request to
          example: http://example.com/hook
        name:
          type: string
          description: Name of the hook
        description:
          type: string
          description: Description of the hook
        token:
          type: string
          description: Secret token to validate received payloads; this isn't returned in the response
        push_events:
          type: boolean
          description: When true, the hook fires on push events
        tag_push_events:
          type: boolean
          description: When true, the hook fires on new tags being pushed
        merge_requests_events:
          type: boolean
          description: Trigger hook on merge requests events
        repository_update_events:
          type: boolean
          description: Trigger hook on repository update events
        enable_ssl_verification:
          type: boolean
          description: Do SSL verification when triggering the hook
        url_variables:
          type: array
          description: URL variables for interpolation
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: Name of the variable
                example: token
              value:
                type: string
                description: Value of the variable
                example: "123"
      description: Add new system hook
    putApiV4HooksHookId:
      type: object
      properties:
        url:
          type: string
          description: The URL to send the request to
        name:
          type: string
          description: Name of the hook
        description:
          type: string
          description: Description of the hook
        token:
          type: string
          description: Secret token to validate received payloads; this isn't returned in the response
        push_events:
          type: boolean
          description: When true, the hook fires on push events
        tag_push_events:
          type: boolean
          description: When true, the hook fires on new tags being pushed
        merge_requests_events:
          type: boolean
          description: Trigger hook on merge requests events
        repository_update_events:
          type: boolean
          description: Trigger hook on repository update events
        enable_ssl_verification:
          type: boolean
          description: Do SSL verification when triggering the hook
        url_variables:
          type: array
          description: URL variables for interpolation
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: Name of the variable
                example: token
              value:
                type: string
                description: Value of the variable
                example: "123"
      description: Edit system hook
    putApiV4HooksHookIdUrlVariablesKey:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: The value of the variable
      description: Set a url variable
    postApiV4FeatureFlagsUnleashProjectIdClientRegister:
      type: object
      properties:
        instance_id:
          type: string
          description: The instance ID of Unleash Client
        app_name:
          type: string
          description: The application name of Unleash Client
    postApiV4FeatureFlagsUnleashProjectIdClientMetrics:
      type: object
      properties:
        instance_id:
          type: string
          description: The instance ID of Unleash Client
        app_name:
          type: string
          description: The application name of Unleash Client
    postApiV4UsageDataIncrementCounter:
      required:
        - event
      type: object
      properties:
        event:
          type: string
          description: The event name that should be tracked
          example: i_quickactions_page
      description: Track usage data event
    postApiV4UsageDataIncrementUniqueUsers:
      required:
        - event
      type: object
      properties:
        event:
          type: string
          description: The event name that should be tracked
          example: i_quickactions_page
      description: Track usage data event for the current user
    postApiV4UsageDataTrackEvent:
      required:
        - event
      type: object
      properties:
        event:
          type: string
          description: The event name that should be tracked
          example: i_quickactions_page
        namespace_id:
          type: integer
          description: Namespace ID
          format: int32
          example: 1234
        project_id:
          type: integer
          description: Project ID
          format: int32
          example: 1234
      description: Track gitlab internal events
    postApiV4UserKeys:
      required:
        - key
        - title
      type: object
      properties:
        key:
          type: string
          description: The new SSH key
        title:
          type: string
          description: The title of the new SSH key
        expires_at:
          type: string
          description: The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)
          format: date-time
        usage_type:
          type: string
          description: Scope of usage for the SSH key
          default: auth_and_signing
          enum:
            - auth_and_signing
            - auth
            - signing
      description: Add a new SSH key to the currently authenticated user
    postApiV4UserGpgKeys:
      required:
        - key
      type: object
      properties:
        key:
          type: string
          description: The new GPG key
      description: Add a new GPG key to the currently authenticated user
    putApiV4UserUserIdCreditCardValidation:
      required:
        - credit_card_expiration_month
        - credit_card_expiration_year
        - credit_card_holder_name
        - credit_card_mask_number
        - credit_card_type
        - credit_card_validated_at
      type: object
      properties:
        credit_card_validated_at:
          type: string
          description: The time when the user's credit card was validated
          format: date-time
        credit_card_expiration_month:
          type: integer
          description: The month the credit card expires
          format: int32
        credit_card_expiration_year:
          type: integer
          description: The year the credit card expires
          format: int32
        credit_card_holder_name:
          type: string
          description: The credit card holder name
        credit_card_mask_number:
          type: string
          description: The last 4 digits of credit card number
        credit_card_type:
          type: string
          description: The credit card network name
        zuora_payment_method_xid:
          type: string
          description: The Zuora payment method ID
      description: Update a user's credit_card_validation
    API_Entities_UserCreditCardValidations:
      type: object
      properties:
        user_id:
          type: string
        credit_card_validated_at:
          type: string
      description: API_Entities_UserCreditCardValidations model
    putApiV4UserPreferences:
      type: object
      properties:
        view_diffs_file_by_file:
          type: boolean
          description: Flag indicating the user sees only one file diff per page
        show_whitespace_in_diffs:
          type: boolean
          description: Flag indicating the user sees whitespace changes in diffs
        pass_user_identities_to_ci_jwt:
          type: boolean
          description: Flag indicating the user passes their external identities to a CI job as part of a JSON web token.
      description: Update the current user's preferences
    API_Entities_UserPreferences:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        view_diffs_file_by_file:
          type: string
        show_whitespace_in_diffs:
          type: string
        pass_user_identities_to_ci_jwt:
          type: string
      description: API_Entities_UserPreferences model
    postApiV4UserEmails:
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: The new email
      description: Add new email address to the currently authenticated user
    putApiV4UserStatus:
      type: object
      properties:
        emoji:
          type: string
          description: The emoji to set on the status
        message:
          type: string
          description: The status message to set
        availability:
          type: string
          description: The availability of user to set
        clear_status_after:
          type: string
          description: Automatically clear emoji, message and availability fields after a certain time
          enum:
            - 30_minutes
            - 3_hours
            - 8_hours
            - 1_day
            - 3_days
            - 7_days
            - 30_days
      description: Set the status of the current user
    API_Entities_UserStatus:
      type: object
      properties:
        emoji:
          type: string
        message:
          type: string
        availability:
          type: string
        message_html:
          type: string
        clear_status_at:
          type: string
      description: API_Entities_UserStatus model
    patchApiV4UserStatus:
      type: object
      properties:
        emoji:
          type: string
          description: The emoji to set on the status
        message:
          type: string
          description: The status message to set
        availability:
          type: string
          description: The availability of user to set
        clear_status_after:
          type: string
          description: Automatically clear emoji, message and availability fields after a certain time
          enum:
            - 30_minutes
            - 3_hours
            - 8_hours
            - 1_day
            - 3_days
            - 7_days
            - 30_days
      description: Set the status of the current user
    putApiV4UserAvatar:
      required:
        - avatar
      type: object
      properties:
        avatar:
          type: file
          description: The avatar file (generated by Multipart middleware)
          format: binary
      description: Set the avatar of the current user
    postApiV4UserRunners:
      required:
        - group_id
        - project_id
        - runner_type
      type: object
      properties:
        runner_type:
          type: string
          description: Specifies the scope of the runner
          enum:
            - instance_type
            - group_type
            - project_type
        group_id:
          type: integer
          description: The ID of the group that the runner is created in
          format: int32
          example: 1
        project_id:
          type: integer
          description: The ID of the project that the runner is created in
          format: int32
          example: 1
        description:
          type: string
          description: Description of the runner
        maintenance_note:
          type: string
          description: Free-form maintenance notes for the runner (1024 characters)
        paused:
          type: boolean
          description: Specifies if the runner should ignore new jobs (defaults to false)
        locked:
          type: boolean
          description: Specifies if the runner should be locked for the current project (defaults to false)
        access_level:
          type: string
          description: The access level of the runner
          enum:
            - not_protected
            - ref_protected
        run_untagged:
          type: boolean
          description: Specifies if the runner should handle untagged jobs  (defaults to true)
        tag_list:
          type: array
          description: A list of runner tags
          items:
            type: string
        maximum_timeout:
          type: integer
          description: Maximum timeout that limits the amount of time (in seconds) that runners can run jobs
          format: int32
      description: Create a runner owned by currently authenticated user
    postApiV4UserPersonalAccessTokens:
      required:
        - name
        - scopes
      type: object
      properties:
        name:
          type: string
          description: The name of the personal access token
        scopes:
          type: array
          description: The array of scopes of the personal access token
          items:
            type: string
            enum:
              - k8s_proxy
        expires_at:
          type: string
          description: The expiration date in the format YEAR-MONTH-DAY of the personal access token
          format: date
      description: Create a personal access token with limited scopes for the currently authenticated user
    API_Entities_UserCounts:
      type: object
      properties:
        merge_requests:
          type: integer
          format: int32
          example: 10
        assigned_issues:
          type: integer
          format: int32
          example: 10
        assigned_merge_requests:
          type: integer
          format: int32
          example: 10
        review_requested_merge_requests:
          type: integer
          format: int32
          example: 10
        todos:
          type: integer
          format: int32
          example: 10
      description: API_Entities_UserCounts model
    API_Entities_PlanLimit:
      type: object
      properties:
        ci_instance_level_variables:
          type: integer
          format: int32
          example: 25
        ci_pipeline_size:
          type: integer
          format: int32
          example: 0
        ci_active_jobs:
          type: integer
          format: int32
          example: 0
        ci_project_subscriptions:
          type: integer
          format: int32
          example: 2
        ci_pipeline_schedules:
          type: integer
          format: int32
          example: 10
        ci_needs_size_limit:
          type: integer
          format: int32
          example: 50
        ci_registered_group_runners:
          type: integer
          format: int32
          example: 1000
        ci_registered_project_runners:
          type: integer
          format: int32
          example: 1000
        conan_max_file_size:
          type: integer
          format: int32
          example: 3221225472
        enforcement_limit:
          type: integer
          format: int32
          example: 15000
        generic_packages_max_file_size:
          type: integer
          format: int32
          example: 5368709120
        helm_max_file_size:
          type: integer
          format: int32
          example: 5242880
        limits_history:
          type: object
          properties: {}
          example: |-
            {"enforcement_limit"=>[{"timestamp"=>1686909124, "user_id"=>1, "username"=>"x", "value"=>5}],
                               "notification_limit"=>[{"timestamp"=>1686909124, "user_id"=>2, "username"=>"y", "value"=>7}]}
        maven_max_file_size:
          type: integer
          format: int32
          example: 3221225472
        notification_limit:
          type: integer
          format: int32
          example: 15000
        npm_max_file_size:
          type: integer
          format: int32
          example: 524288000
        nuget_max_file_size:
          type: integer
          format: int32
          example: 524288000
        pipeline_hierarchy_size:
          type: integer
          format: int32
          example: 1000
        pypi_max_file_size:
          type: integer
          format: int32
          example: 3221225472
        terraform_module_max_file_size:
          type: integer
          format: int32
          example: 1073741824
        storage_size_limit:
          type: integer
          format: int32
          example: 15000
      description: API_Entities_PlanLimit model
    putApiV4ApplicationPlanLimits:
      required:
        - plan_name
      type: object
      properties:
        plan_name:
          type: string
          description: Name of the plan to update
          enum:
            - default
            - free
            - bronze
            - silver
            - premium
            - gold
            - ultimate
            - ultimate_trial
            - ultimate_trial_paid_customer
            - premium_trial
            - opensource
        ci_instance_level_variables:
          type: integer
          description: Maximum number of Instance-level CI/CD variables that can be defined
          format: int32
        ci_pipeline_size:
          type: integer
          description: Maximum number of jobs in a single pipeline
          format: int32
        ci_active_jobs:
          type: integer
          description: Total number of jobs in currently active pipelines
          format: int32
        ci_project_subscriptions:
          type: integer
          description: Maximum number of pipeline subscriptions to and from a project
          format: int32
        ci_pipeline_schedules:
          type: integer
          description: Maximum number of pipeline schedules
          format: int32
        ci_needs_size_limit:
          type: integer
          description: Maximum number of needs dependencies that a job can have
          format: int32
        ci_registered_group_runners:
          type: integer
          description: Maximum number of runners registered per group
          format: int32
        ci_registered_project_runners:
          type: integer
          description: Maximum number of runners registered per project
          format: int32
        conan_max_file_size:
          type: integer
          description: Maximum Conan package file size in bytes
          format: int32
        enforcement_limit:
          type: integer
          description: Maximum storage size for the root namespace enforcement in MiB
          format: int32
        generic_packages_max_file_size:
          type: integer
          description: Maximum generic package file size in bytes
          format: int32
        helm_max_file_size:
          type: integer
          description: Maximum Helm chart file size in bytes
          format: int32
        maven_max_file_size:
          type: integer
          description: Maximum Maven package file size in bytes
          format: int32
        notification_limit:
          type: integer
          description: Maximum storage size for the root namespace notifications in MiB
          format: int32
        npm_max_file_size:
          type: integer
          description: Maximum NPM package file size in bytes
          format: int32
        nuget_max_file_size:
          type: integer
          description: Maximum NuGet package file size in bytes
          format: int32
        pypi_max_file_size:
          type: integer
          description: Maximum PyPI package file size in bytes
          format: int32
        terraform_module_max_file_size:
          type: integer
          description: Maximum Terraform Module package file size in bytes
          format: int32
        storage_size_limit:
          type: integer
          description: Maximum storage size for the root namespace in MiB
          format: int32
        pipeline_hierarchy_size:
          type: integer
          description: Maximum number of downstream pipelines in a pipeline's hierarchy tree
          format: int32
      description: Change plan limits
    API_Entities_Appearance:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        pwa_name:
          type: string
        pwa_short_name:
          type: string
        pwa_description:
          type: string
        logo:
          type: string
        pwa_icon:
          type: string
        header_logo:
          type: string
        favicon:
          type: string
        new_project_guidelines:
          type: string
        member_guidelines:
          type: string
        profile_image_guidelines:
          type: string
        header_message:
          type: string
        footer_message:
          type: string
        message_background_color:
          type: string
        message_font_color:
          type: string
        email_header_and_footer_enabled:
          type: string
      description: API_Entities_Appearance model
    API_Entities_ApplicationStatistics:
      type: object
      properties:
        forks:
          type: integer
          description: Approximate number of repo forks
          format: int32
          example: 6
        issues:
          type: integer
          description: Approximate number of issues
          format: int32
          example: 121
        merge_requests:
          type: integer
          description: Approximate number of merge requests
          format: int32
          example: 49
        notes:
          type: integer
          description: Approximate number of notes
          format: int32
          example: 6
        snippets:
          type: integer
          description: Approximate number of snippets
          format: int32
          example: 4
        ssh_keys:
          type: integer
          description: Approximate number of SSH keys
          format: int32
          example: 11
        milestones:
          type: integer
          description: Approximate number of milestones
          format: int32
          example: 3
        users:
          type: integer
          description: Approximate number of users
          format: int32
          example: 22
        projects:
          type: integer
          description: Approximate number of projects
          format: int32
          example: 4
        groups:
          type: integer
          description: Approximate number of projects
          format: int32
          example: 1
        active_users:
          type: integer
          description: Number of active users
          format: int32
          example: 21
      description: API_Entities_ApplicationStatistics model
    postApiV4ImportBitbucket:
      required:
        - bitbucket_app_password
        - bitbucket_username
        - repo_path
        - target_namespace
      type: object
      properties:
        bitbucket_username:
          type: string
          description: BitBucket username
        bitbucket_app_password:
          type: string
          description: BitBucket app password
        repo_path:
          type: string
          description: Repository path
        target_namespace:
          type: string
          description: Target namespace
        new_name:
          type: string
          description: New repository name
      description: Import a BitBucket Cloud repository
    ProjectImportEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: GitLab
        full_path:
          type: string
          example: gitlab-org/gitlab
        full_name:
          type: string
          example: GitLab Org / GitLab
        refs_url:
          type: string
        import_source:
          type: string
          example: source/source-repo
        import_status:
          type: string
          example: scheduled
          enum:
            - scheduled
            - started
            - finished
            - failed
            - canceled
        human_import_status_name:
          type: string
          example: canceled
        provider_link:
          type: string
          example: /source/source-repo
        import_error:
          type: string
        import_warning:
          type: string
        relation_type:
          type: string
      description: ProjectImportEntity model
    postApiV4ImportBitbucketServer:
      required:
        - bitbucket_server_project
        - bitbucket_server_repo
        - bitbucket_server_url
        - bitbucket_server_username
        - personal_access_token
      type: object
      properties:
        bitbucket_server_url:
          type: string
          description: Bitbucket Server URL
        bitbucket_server_username:
          type: string
          description: BitBucket Server Username
        personal_access_token:
          type: string
          description: BitBucket Server personal access token/password
        bitbucket_server_project:
          type: string
          description: BitBucket Server Project Key
        bitbucket_server_repo:
          type: string
          description: BitBucket Server Repository Name
        new_name:
          type: string
          description: New repo name
        new_namespace:
          type: string
          description: Namespace to import repo into
        timeout_strategy:
          type: string
          description: Strategy for behavior on timeouts
          enum:
            - optimistic
            - pessimistic
      description: Import a BitBucket Server repository
    ProjectEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: GitLab
        full_path:
          type: string
          example: gitlab-org/gitlab
        full_name:
          type: string
          example: GitLab Org / GitLab
        refs_url:
          type: string
      description: ProjectEntity model
    postApiV4ImportGithub:
      required:
        - personal_access_token
        - repo_id
        - target_namespace
      type: object
      properties:
        personal_access_token:
          type: string
          description: GitHub personal access token
        repo_id:
          type: integer
          description: GitHub repository ID
          format: int32
        new_name:
          type: string
          description: New repo name
        target_namespace:
          type: string
          description: Namespace or group to import repository into
        github_hostname:
          type: string
          description: Custom GitHub enterprise hostname
        optional_stages:
          type: object
          properties: {}
          description: Optional stages of import to be performed
        timeout_strategy:
          type: string
          description: Strategy for behavior on timeouts
          enum:
            - optimistic
            - pessimistic
      description: Import a GitHub project
    postApiV4ImportGithubCancel:
      required:
        - project_id
      type: object
      properties:
        project_id:
          type: integer
          description: ID of importing project to be canceled
          format: int32
      description: Cancel GitHub project import
    postApiV4ImportGithubGists:
      required:
        - personal_access_token
      type: object
      properties:
        personal_access_token:
          type: string
          description: GitHub personal access token
      description: Import User Gists
    postApiV4SlackTrigger:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: Text of the slack command
      description: Trigger a global slack command
    API_Entities_Metadata:
      type: object
      properties:
        version:
          type: string
          example: 15.2-pre
        revision:
          type: string
          example: c401a659d0c
        kas:
          type: object
          properties:
            enabled:
              type: boolean
            externalUrl:
              type: string
              example: grpc://gitlab.example.com:8150
            version:
              type: string
              example: 15.0.0
        enterprise:
          type: boolean
      description: API_Entities_Metadata model
    API_Entities_Projects_Topic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        title:
          type: string
        description:
          type: string
        total_projects_count:
          type: string
        avatar_url:
          type: string
      description: API_Entities_Projects_Topic model
    postApiV4Topics:
      required:
        - name
        - title
      type: object
      properties:
        name:
          type: string
          description: Slug (name)
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
        avatar:
          type: file
          description: Avatar image for topic
          format: binary
      description: Create a topic
    putApiV4TopicsId:
      type: object
      properties:
        name:
          type: string
          description: Slug (name)
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
        avatar:
          type: file
          description: Avatar image for topic
          format: binary
      description: Update a topic
    postApiV4TopicsMerge:
      required:
        - source_topic_id
        - target_topic_id
      type: object
      properties:
        source_topic_id:
          type: integer
          description: ID of source project topic
          format: int32
        target_topic_id:
          type: integer
          description: ID of target project topic
          format: int32
      description: Merge topics
  securitySchemes:
    access_token_header:
      type: apiKey
      name: PRIVATE-TOKEN
      in: header
    access_token_query:
      type: apiKey
      name: private_token
      in: query
x-original-swagger-version: "2.0"
